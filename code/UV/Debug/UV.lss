
UV.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003e  00800100  00004ca2  00004d36  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004ca2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000f7  0080013e  0080013e  00004d74  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00004d74  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000007d8  00000000  00000000  00004da4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00011647  00000000  00000000  0000557c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000210a  00000000  00000000  00016bc3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000245d  00000000  00000000  00018ccd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00001ad4  00000000  00000000  0001b12c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00003b56  00000000  00000000  0001cc00  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000bc5a  00000000  00000000  00020756  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000008e0  00000000  00000000  0002c3b0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 89 12 	jmp	0x2512	; 0x2512 <__ctors_end>
       4:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
       8:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
       c:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      10:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      14:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      18:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      1c:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      20:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      24:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      28:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      2c:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      30:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      34:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      38:	0c 94 04 19 	jmp	0x3208	; 0x3208 <__vector_14>
      3c:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      40:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      44:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      48:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      4c:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      50:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      54:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      58:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      5c:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      60:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      64:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__bad_interrupt>
      68:	07 63       	ori	r16, 0x37	; 55
      6a:	42 36       	cpi	r20, 0x62	; 98
      6c:	b7 9b       	sbis	0x16, 7	; 22
      6e:	d8 a7       	std	Y+40, r29	; 0x28
      70:	1a 39       	cpi	r17, 0x9A	; 154
      72:	68 56       	subi	r22, 0x68	; 104
      74:	18 ae       	std	Y+56, r1	; 0x38
      76:	ba ab       	std	Y+50, r27	; 0x32
      78:	55 8c       	ldd	r5, Z+29	; 0x1d
      7a:	1d 3c       	cpi	r17, 0xCD	; 205
      7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
      7e:	57 63       	ori	r21, 0x37	; 55
      80:	bd 6d       	ori	r27, 0xDD	; 221
      82:	ed fd       	.word	0xfded	; ????
      84:	75 3e       	cpi	r23, 0xE5	; 229
      86:	f6 17       	cp	r31, r22
      88:	72 31       	cpi	r23, 0x12	; 18
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	08 00       	.word	0x0008	; ????
      92:	00 00       	nop
      94:	be 92       	st	-X, r11
      96:	24 49       	sbci	r18, 0x94	; 148
      98:	12 3e       	cpi	r17, 0xE2	; 226
      9a:	ab aa       	std	Y+51, r10	; 0x33
      9c:	aa 2a       	or	r10, r26
      9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
      a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
      a2:	4c 3e       	cpi	r20, 0xEC	; 236
      a4:	00 00       	nop
      a6:	00 80       	ld	r0, Z
      a8:	be ab       	std	Y+54, r27	; 0x36
      aa:	aa aa       	std	Y+50, r10	; 0x32
      ac:	aa 3e       	cpi	r26, 0xEA	; 234
      ae:	00 00       	nop
      b0:	00 00       	nop
      b2:	bf 00       	.word	0x00bf	; ????
      b4:	00 00       	nop
      b6:	80 3f       	cpi	r24, 0xF0	; 240
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	00 08       	sbc	r0, r0
      be:	41 78       	andi	r20, 0x81	; 129
      c0:	d3 bb       	out	0x13, r29	; 19
      c2:	43 87       	std	Z+11, r20	; 0x0b
      c4:	d1 13       	cpse	r29, r17
      c6:	3d 19       	sub	r19, r13
      c8:	0e 3c       	cpi	r16, 0xCE	; 206
      ca:	c3 bd       	out	0x23, r28	; 35
      cc:	42 82       	std	Z+2, r4	; 0x02
      ce:	ad 2b       	or	r26, r29
      d0:	3e 68       	ori	r19, 0x8E	; 142
      d2:	ec 82       	std	Y+4, r14	; 0x04
      d4:	76 be       	out	0x36, r7	; 54
      d6:	d9 8f       	std	Y+25, r29	; 0x19
      d8:	e1 a9       	ldd	r30, Z+49	; 0x31
      da:	3e 4c       	sbci	r19, 0xCE	; 206
      dc:	80 ef       	ldi	r24, 0xF0	; 240
      de:	ff be       	out	0x3f, r15	; 63
      e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <u8g_font_fur17+0x6d0>
      e2:	ff 7f       	andi	r31, 0xFF	; 255
      e4:	3f 00       	.word	0x003f	; ????
      e6:	00 00       	nop
      e8:	00 00       	nop
      ea:	c6 22       	and	r12, r22
      ec:	ce 22       	and	r12, r30
      ee:	e8 22       	and	r14, r24
      f0:	d8 22       	and	r13, r24
      f2:	e8 22       	and	r14, r24
      f4:	e8 22       	and	r14, r24
      f6:	e8 22       	and	r14, r24
      f8:	e8 22       	and	r14, r24
      fa:	e8 22       	and	r14, r24
      fc:	e8 22       	and	r14, r24
      fe:	e8 22       	and	r14, r24
     100:	e8 22       	and	r14, r24
     102:	e8 22       	and	r14, r24
     104:	e8 22       	and	r14, r24
     106:	e8 22       	and	r14, r24
     108:	e8 22       	and	r14, r24
     10a:	e8 22       	and	r14, r24
     10c:	e8 22       	and	r14, r24
     10e:	e8 22       	and	r14, r24
     110:	e8 22       	and	r14, r24
     112:	e8 22       	and	r14, r24
     114:	e8 22       	and	r14, r24
     116:	e8 22       	and	r14, r24
     118:	e8 22       	and	r14, r24
     11a:	e8 22       	and	r14, r24
     11c:	e8 22       	and	r14, r24
     11e:	e8 22       	and	r14, r24
     120:	e8 22       	and	r14, r24
     122:	e8 22       	and	r14, r24
     124:	e8 22       	and	r14, r24
     126:	c0 22       	and	r12, r16
     128:	e8 22       	and	r14, r24
     12a:	e8 22       	and	r14, r24
     12c:	e8 22       	and	r14, r24
     12e:	e8 22       	and	r14, r24
     130:	e8 22       	and	r14, r24
     132:	e8 22       	and	r14, r24
     134:	e8 22       	and	r14, r24
     136:	e8 22       	and	r14, r24
     138:	b4 22       	and	r11, r20
     13a:	e8 22       	and	r14, r24
     13c:	e8 22       	and	r14, r24
     13e:	e8 22       	and	r14, r24
     140:	e8 22       	and	r14, r24
     142:	e8 22       	and	r14, r24
     144:	e8 22       	and	r14, r24
     146:	e8 22       	and	r14, r24
     148:	e8 22       	and	r14, r24
     14a:	e8 22       	and	r14, r24
     14c:	e8 22       	and	r14, r24
     14e:	de 22       	and	r13, r30
     150:	e3 22       	and	r14, r19
     152:	0a 24       	eor	r0, r10
     154:	03 24       	eor	r0, r3
     156:	03 24       	eor	r0, r3
     158:	03 24       	eor	r0, r3
     15a:	03 24       	eor	r0, r3
     15c:	03 24       	eor	r0, r3
     15e:	03 24       	eor	r0, r3
     160:	03 24       	eor	r0, r3
     162:	03 24       	eor	r0, r3
     164:	03 24       	eor	r0, r3
     166:	03 24       	eor	r0, r3
     168:	03 24       	eor	r0, r3
     16a:	03 24       	eor	r0, r3
     16c:	03 24       	eor	r0, r3
     16e:	03 24       	eor	r0, r3
     170:	03 24       	eor	r0, r3
     172:	03 24       	eor	r0, r3
     174:	03 24       	eor	r0, r3
     176:	03 24       	eor	r0, r3
     178:	03 24       	eor	r0, r3
     17a:	03 24       	eor	r0, r3
     17c:	3d 24       	eor	r3, r13
     17e:	54 24       	eor	r5, r4
     180:	03 24       	eor	r0, r3
     182:	03 24       	eor	r0, r3
     184:	03 24       	eor	r0, r3
     186:	03 24       	eor	r0, r3
     188:	3d 24       	eor	r3, r13
     18a:	03 24       	eor	r0, r3
     18c:	03 24       	eor	r0, r3
     18e:	03 24       	eor	r0, r3
     190:	03 24       	eor	r0, r3
     192:	03 24       	eor	r0, r3
     194:	03 24       	eor	r0, r3
     196:	03 24       	eor	r0, r3
     198:	03 24       	eor	r0, r3
     19a:	54 24       	eor	r5, r4
     19c:	03 24       	eor	r0, r3
     19e:	03 24       	eor	r0, r3
     1a0:	03 24       	eor	r0, r3
     1a2:	03 24       	eor	r0, r3
     1a4:	03 24       	eor	r0, r3
     1a6:	03 24       	eor	r0, r3
     1a8:	03 24       	eor	r0, r3
     1aa:	03 24       	eor	r0, r3
     1ac:	03 24       	eor	r0, r3
     1ae:	03 24       	eor	r0, r3
     1b0:	31 24       	eor	r3, r1
     1b2:	37 24       	eor	r3, r7
     1b4:	ac 25       	eor	r26, r12
     1b6:	cc 25       	eor	r28, r12
     1b8:	d0 25       	eor	r29, r0
     1ba:	dd 25       	eor	r29, r13
     1bc:	e1 25       	eor	r30, r1
     1be:	a6 25       	eor	r26, r6
     1c0:	a9 25       	eor	r26, r9

000001c2 <__trampolines_end>:
     1c2:	00 00       	nop
     1c4:	25 00       	.word	0x0025	; ????
     1c6:	28 00       	.word	0x0028	; ????
     1c8:	2b 00       	.word	0x002b	; ????

000001ca <u8g_avr_ddr_P>:
     1ca:	00 00 24 00 27 00 2a 00                             ..$.'.*.

000001d2 <u8g_dev_ssd13xx_sleep_off>:
     1d2:	ff e0 ff d1 af ff 32 ff d0 ff fe                    ......2....

000001dd <u8g_dev_ssd13xx_sleep_on>:
     1dd:	ff e0 ff d1 ae ff d0 ff fe                          .........

000001e6 <u8g_dev_ssd1306_128x64_data_start>:
     1e6:	ff e0 ff d1 10 00 ff fe                             ........

000001ee <u8g_dev_ssd1306_128x64_adafruit2_init_seq>:
     1ee:	ff d0 ff e0 ff c1 ff d1 ae d5 80 a8 3f d3 00 40     ............?..@
     1fe:	8d 14 20 00 a1 c8 da 12 81 cf d9 f1 db 40 2e a4     .. ..........@..
     20e:	a6 af ff d0 ff fe                                   ......

00000214 <u8g_font_fur17>:
     214:	00 1f 1e fe fa 11 04 05 08 aa 20 ff fb 18 fa 11     .......... .....
     224:	fb 00 00 00 07 00 00 02 11 11 08 03 00 c0 c0 c0     ................
     234:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 00 00 c0 c0 07 07     ................
     244:	07 0a 02 0a ce ce c6 c6 c4 c4 c4 0f 11 22 11 01     ............."..
     254:	00 01 18 03 18 03 18 03 30 06 30 3f fe 06 20 04     ........0.0?.. .
     264:	60 0c 60 0c 40 ff f8 18 c0 18 80 11 80 31 80 31     `.`.@........1.1
     274:	80 31 00 0b 15 2a 0d 01 fe 04 00 04 00 3f 00 7f     .1...*.......?..
     284:	80 c4 c0 c4 c0 c4 00 c4 00 f4 00 7f 00 3f c0 05     .............?..
     294:	e0 04 e0 04 60 c4 60 c4 60 e4 60 7f c0 3f 80 04     ....`.`.`.`..?..
     2a4:	00 04 00 13 11 33 15 01 00 3c 02 00 7e 04 00 e3     .....3...<..~...
     2b4:	0c 00 c3 08 00 c3 18 00 c3 10 00 c3 30 00 66 60     ............0.f`
     2c4:	00 3e 47 80 00 cf c0 00 98 60 01 98 60 01 18 60     .>G......`..`..`
     2d4:	02 18 60 06 18 60 04 0f c0 0c 07 80 0f 11 22 11     ..`..`........".
     2e4:	01 00 0f 00 3f 80 30 c0 30 c0 31 c0 3b 80 1f 00     ....?.0.0.1.;...
     2f4:	1c 18 76 18 67 18 e3 98 c1 d8 c0 f0 e0 70 60 78     ..v.g........p`x
     304:	7b fc 1f 8e 02 07 07 08 03 0a c0 c0 c0 c0 c0 c0     {...............
     314:	40 04 14 14 08 02 fd 30 30 60 60 60 e0 c0 c0 c0     @......00```....
     324:	c0 c0 c0 c0 c0 e0 60 60 60 30 30 04 14 14 08 02     ......```00.....
     334:	fd c0 40 60 60 60 30 30 30 30 30 30 30 30 30 30     ..@```0000000000
     344:	60 60 60 40 c0 09 09 12 0f 03 08 22 00 36 00 16     ```@.......".6..
     354:	00 1c 00 ff 80 9c 80 14 00 36 00 22 00 0e 0e 1c     .........6."....
     364:	18 05 00 02 00 02 00 02 00 02 00 02 00 02 00 ff     ................
     374:	fc 02 00 02 00 02 00 02 00 02 00 02 00 02 00 04     ................
     384:	06 06 06 01 fd 70 70 60 60 c0 c0 06 01 01 08 01     .....pp``.......
     394:	05 fc 02 03 03 06 02 00 c0 c0 c0 07 12 12 09 01     ................
     3a4:	ff 06 06 04 0c 0c 08 08 18 18 10 30 30 20 20 60     ...........00  `
     3b4:	60 40 c0 0a 11 22 0d 01 00 1e 00 3f 80 61 80 60     `@...".....?.a.`
     3c4:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
     3d4:	c0 c0 c0 61 c0 61 80 3f 80 1e 00 05 11 11 0d 03     ...a.a.?........
     3e4:	00 38 78 f8 d8 18 18 18 18 18 18 18 18 18 18 18     .8x.............
     3f4:	18 18 0a 11 22 0d 01 00 1e 00 7f 80 61 80 e0 c0     ....".......a...
     404:	e0 c0 00 c0 01 c0 03 80 03 80 07 00 0e 00 1c 00     ................
     414:	38 00 70 00 60 00 e0 00 ff c0 0a 11 22 0d 01 00     8.p.`......."...
     424:	1f 00 7f 80 60 c0 e0 c0 00 c0 00 c0 03 80 0e 00     ....`...........
     434:	07 80 01 c0 00 c0 00 c0 c0 c0 e0 c0 61 c0 7f 80     ............a...
     444:	1e 00 0b 11 22 0d 01 00 03 80 03 80 07 80 0d 80     ...."...........
     454:	0d 80 19 80 39 80 31 80 61 80 61 80 c1 80 ff e0     ....9.1.a.a.....
     464:	ff e0 01 80 01 80 01 80 01 80 0a 11 22 0d 01 00     ............"...
     474:	7f 80 60 00 60 00 60 00 60 00 6f 00 7f 80 61 80     ..`.`.`.`.o...a.
     484:	40 c0 00 c0 00 c0 00 c0 00 c0 c0 c0 e1 80 7f 00     @...............
     494:	1e 00 0b 11 22 0d 01 00 1f 00 3b 80 60 c0 e0 c0     ....".....;.`...
     4a4:	c0 00 c0 00 cf 00 df c0 f1 c0 e0 e0 c0 60 c0 60     .............`.`
     4b4:	c0 60 c0 60 60 c0 3b c0 1f 00 0a 11 22 0d 01 00     .`.``.;....."...
     4c4:	ff c0 00 c0 00 c0 01 80 01 80 03 80 03 00 03 00     ................
     4d4:	07 00 06 00 06 00 0e 00 0c 00 0c 00 1c 00 18 00     ................
     4e4:	38 00 0b 11 22 0d 01 00 1f 00 3b 80 60 c0 60 c0     8...".....;.`.`.
     4f4:	60 c0 60 c0 31 80 1f 00 3b 80 60 c0 c0 60 c0 60     `.`.1...;.`..`.`
     504:	c0 60 c0 60 60 e0 7b c0 1f 00 0b 11 22 0d 01 00     .`.``.{....."...
     514:	1f 00 7f c0 60 c0 c0 e0 c0 60 c0 60 c0 e0 e0 e0     ....`....`.`....
     524:	71 e0 3f 60 00 60 00 60 00 e0 60 c0 61 c0 7f 80     q.?`.`.`..`.a...
     534:	1f 00 02 0c 0c 06 02 00 c0 c0 c0 00 00 00 00 00     ................
     544:	00 c0 c0 c0 03 0f 0f 06 01 fd 60 60 60 00 00 00     ..........```...
     554:	00 00 00 60 60 60 c0 c0 c0 0e 0c 18 18 05 01 00     ...```..........
     564:	0c 00 3c 01 e0 07 00 38 00 e0 00 e0 00 3c 00 07     ..<....8.....<..
     574:	00 01 e0 00 3c 00 0c 0e 05 0a 18 05 04 ff fc 00     ....<...........
     584:	00 00 00 00 00 ff fc 0e 0c 18 18 05 01 c0 00 f0     ................
     594:	00 1e 00 03 80 00 70 00 1c 00 1c 00 f0 03 80 1e     ......p.........
     5a4:	00 f0 00 c0 00 09 11 22 0b 01 00 3c 00 ff 00 c3     ......."...<....
     5b4:	80 81 80 01 80 01 80 03 00 07 00 0e 00 1c 00 18     ................
     5c4:	00 18 00 18 00 00 00 00 00 18 00 18 00 14 16 42     ...............B
     5d4:	17 01 fb 01 fc 00 07 ff 00 1e 07 80 38 01 c0 30     ............8..0
     5e4:	00 e0 61 ec 60 63 fc 70 e3 1c 30 c6 0c 30 c6 0c     ..a.`c.p..0..0..
     5f4:	30 c6 0c 30 c6 0c 30 c6 0c 30 c6 0c 30 e3 1c 60     0..0..0..0..0..`
     604:	63 1f e0 61 e7 c0 30 00 00 38 00 00 1c 00 00 07     c..a..0..8......
     614:	dc 00 01 fc 00 10 11 22 11 01 00 03 80 03 80 07     ......."........
     624:	c0 06 c0 0e e0 0c 60 0c 70 18 30 18 30 38 38 3f     ......`.p.0.088?
     634:	f8 3f fc 60 0c 60 0c e0 06 c0 06 c0 07 0c 11 22     .?.`.`........."
     644:	10 02 00 ff 80 c3 e0 c0 70 c0 30 c0 30 c0 30 c0     ........p.0.0.0.
     654:	70 c0 e0 ff 80 c1 e0 c0 70 c0 30 c0 30 c0 30 c0     p.......p.0.0.0.
     664:	70 c3 e0 ff 80 0d 11 22 0f 01 00 0f c0 3f f0 30     p......".....?.0
     674:	38 60 18 60 18 c0 00 c0 00 c0 00 c0 00 c0 00 c0     8`.`............
     684:	00 c0 00 60 00 60 18 30 30 3f f0 0f c0 0d 11 22     ...`.`.00?....."
     694:	11 02 00 ff 00 c7 c0 c0 60 c0 30 c0 30 c0 18 c0     ........`.0.0...
     6a4:	18 c0 18 c0 18 c0 18 c0 18 c0 18 c0 30 c0 30 c0     ............0.0.
     6b4:	e0 c7 c0 ff 00 0b 11 22 0e 02 00 ff e0 c0 00 c0     ......."........
     6c4:	00 c0 00 c0 00 c0 00 c0 00 c0 00 ff c0 c0 00 c0     ................
     6d4:	00 c0 00 c0 00 c0 00 c0 00 c0 00 ff e0 0a 11 22     ..............."
     6e4:	0d 02 00 ff c0 c0 00 c0 00 c0 00 c0 00 c0 00 c0     ................
     6f4:	00 c0 00 ff 80 c0 00 c0 00 c0 00 c0 00 c0 00 c0     ................
     704:	00 c0 00 c0 00 0e 11 22 11 01 00 07 e0 1f f8 30     .......".......0
     714:	1c 60 0c 60 00 c0 00 c0 00 c0 00 c0 fc c0 0c c0     .`.`............
     724:	0c e0 0c 60 0c 70 0c 38 0c 1f fc 07 f8 0c 11 22     ...`.p.8......."
     734:	10 02 00 c0 30 c0 30 c0 30 c0 30 c0 30 c0 30 c0     ....0.0.0.0.0.0.
     744:	30 c0 30 ff f0 c0 30 c0 30 c0 30 c0 30 c0 30 c0     0.0...0.0.0.0.0.
     754:	30 c0 30 c0 30 02 11 11 06 02 00 c0 c0 c0 c0 c0     0.0.0...........
     764:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 0a 11 22 0d     ..............".
     774:	01 00 00 c0 00 c0 00 c0 00 c0 00 c0 00 c0 00 c0     ................
     784:	00 c0 00 c0 00 c0 00 c0 00 c0 00 c0 c0 c0 e1 80     ................
     794:	7f 80 3e 00 0c 11 22 0f 02 00 c0 60 c0 c0 c1 80     ..>..."....`....
     7a4:	c3 00 c7 00 ce 00 dc 00 f8 00 dc 00 de 00 ce 00     ................
     7b4:	c7 00 c3 80 c1 c0 c0 e0 c0 e0 c0 70 0a 11 22 0c     ...........p..".
     7c4:	02 00 c0 00 c0 00 c0 00 c0 00 c0 00 c0 00 c0 00     ................
     7d4:	c0 00 c0 00 c0 00 c0 00 c0 00 c0 00 c0 00 c0 00     ................
     7e4:	ff c0 ff c0 11 11 33 15 02 00 f0 07 80 f0 07 80     ......3.........
     7f4:	f0 07 80 d8 0d 80 d8 0d 80 dc 1d 80 cc 19 80 cc     ................
     804:	19 80 ce 39 80 c6 31 80 c6 31 80 c3 61 80 c3 61     ...9..1..1..a..a
     814:	80 c3 61 80 c1 c1 80 c1 c1 80 c1 c1 80 0d 11 22     ..a............"
     824:	11 02 00 e0 18 f0 18 f8 18 f8 18 dc 18 dc 18 ce     ................
     834:	18 c6 18 c7 18 c3 18 c3 98 c1 d8 c1 d8 c0 f8 c0     ................
     844:	f8 c0 78 c0 38 0f 11 22 11 01 00 07 c0 1e f0 30     ..x.8..".......0
     854:	18 60 0c 60 0c c0 06 c0 06 c0 06 c0 06 c0 06 c0     .`.`............
     864:	06 e0 0e 60 0c 60 0c 30 18 1e f0 07 c0 0b 11 22     ...`.`.0......."
     874:	0e 02 00 ff 00 c7 c0 c0 e0 c0 60 c0 60 c0 60 c0     ..........`.`.`.
     884:	e0 c1 c0 ff 80 c0 00 c0 00 c0 00 c0 00 c0 00 c0     ................
     894:	00 c0 00 c0 00 10 11 22 12 01 00 07 c0 1e f0 30     .......".......0
     8a4:	18 60 0c 60 0c c0 06 c0 06 c0 06 c0 06 c0 06 c0     .`.`............
     8b4:	06 e0 0e 60 0c 60 0c 30 18 1e f8 07 ff 0b 11 22     ...`.`.0......."
     8c4:	0f 02 00 ff 00 c7 c0 c0 e0 c0 60 c0 60 c0 60 c0     ..........`.`.`.
     8d4:	60 c1 c0 ff 00 c1 c0 c0 c0 c0 c0 c0 e0 c0 60 c0     `.............`.
     8e4:	60 c0 60 c0 60 0c 11 22 0f 01 00 1f 80 3f e0 60     `.`.`..".....?.`
     8f4:	70 c0 30 c0 00 e0 00 f0 00 7f 80 3f e0 03 f0 00     p.0........?....
     904:	70 00 30 c0 30 c0 30 60 70 7b e0 1f 80 0d 11 22     p.0.0.0`p{....."
     914:	0f 01 00 ff f8 03 00 03 00 03 00 03 00 03 00 03     ................
     924:	00 03 00 03 00 03 00 03 00 03 00 03 00 03 00 03     ................
     934:	00 03 00 03 00 0d 11 22 11 02 00 c0 18 c0 18 c0     ......."........
     944:	18 c0 18 c0 18 c0 18 c0 18 c0 18 c0 18 c0 18 c0     ................
     954:	18 c0 18 c0 18 60 38 60 30 3d e0 1f c0 0e 11 22     .....`8`0=....."
     964:	0f 01 00 c0 1c c0 18 e0 38 60 30 60 30 70 70 30     ........8`0`0pp0
     974:	60 30 60 38 e0 18 c0 18 c0 1d c0 0d 80 0d 80 0f     `0`8............
     984:	80 07 00 07 00 16 11 33 16 00 00 e0 38 1c 60 78     .......3....8.`x
     994:	1c 60 78 18 70 78 18 30 6c 38 30 cc 30 30 cc 30     .`x.px.0l80.00.0
     9a4:	18 ce 30 18 c6 70 19 86 60 1d 86 60 0d 83 60 0d     ..0..p..`..`..`.
     9b4:	83 c0 0f 03 c0 07 03 c0 07 01 c0 06 01 80 0e 11     ................
     9c4:	22 10 01 00 70 18 70 38 38 30 1c 60 1c e0 0e c0     "...p.p880.`....
     9d4:	07 80 07 80 07 80 07 c0 0d c0 1c e0 18 70 30 70     .............p0p
     9e4:	70 38 60 1c e0 1c 0e 11 22 0f 00 00 e0 1c 70 18     p8`.....".....p.
     9f4:	70 38 38 30 18 70 1c 60 0c c0 0e c0 07 80 03 80     p880.p.`........
     a04:	03 00 03 00 03 00 03 00 03 00 03 00 03 00 0c 11     ................
     a14:	22 0e 01 00 7f f0 00 30 00 70 00 e0 01 c0 01 c0     "......0.p......
     a24:	03 80 07 00 07 00 0e 00 1c 00 3c 00 38 00 70 00     ..........<.8.p.
     a34:	f0 00 e0 00 ff f0 04 16 16 09 02 fb f0 c0 c0 c0     ................
     a44:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
     a54:	c0 f0 07 12 12 09 01 ff c0 c0 40 60 60 20 30 30     ..........@`` 00
     a64:	10 10 18 18 08 0c 0c 04 04 06 04 16 16 0a 03 fb     ................
     a74:	f0 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30     .000000000000000
     a84:	30 30 30 30 30 f0 0b 0e 1c 17 06 00 04 00 0e 00     00000...........
     a94:	0a 00 1b 00 11 00 11 00 31 80 20 80 20 80 60 c0     ........1. . .`.
     aa4:	40 40 c0 60 80 20 80 20 0c 01 02 0c 00 fd ff f0     @@.`. . ........
     ab4:	04 04 04 05 00 0e c0 60 60 30 0a 0c 18 0d 01 00     .......``0......
     ac4:	1f 00 7b 80 60 c0 60 c0 00 c0 3f c0 78 c0 e0 c0     ..{.`.`...?.x...
     ad4:	c0 c0 c1 c0 77 c0 3c c0 0b 11 22 0e 02 00 c0 00     ....w.<...".....
     ae4:	c0 00 c0 00 c0 00 c0 00 cf 00 df c0 e0 c0 e0 e0     ................
     af4:	c0 60 c0 60 c0 60 c0 60 e0 e0 e0 c0 fb 80 cf 00     .`.`.`.`........
     b04:	0a 0c 18 0c 01 00 1f 00 7f 80 61 c0 c0 c0 c0 00     ..........a.....
     b14:	c0 00 c0 00 c0 00 c0 c0 61 c0 7f 80 1f 00 0b 11     ........a.......
     b24:	22 0e 01 00 00 60 00 60 00 60 00 60 00 60 1e 60     "....`.`.`.`.`.`
     b34:	7f e0 61 e0 e0 e0 c0 60 c0 60 c0 60 c0 60 e0 e0     ..a....`.`.`.`..
     b44:	60 e0 3b e0 1e 60 0a 0c 18 0d 01 00 1f 00 7f 80     `.;..`..........
     b54:	60 c0 c0 c0 c0 c0 ff c0 c0 00 c0 00 c0 c0 60 c0     `.............`.
     b64:	3f 80 1f 00 07 11 11 09 01 00 1e 3e 30 30 30 fe     ?..........>000.
     b74:	30 30 30 30 30 30 30 30 30 30 30 0b 11 22 0e 01     00000000000.."..
     b84:	fb 1f 60 3f e0 60 e0 e0 e0 c0 60 c0 60 c0 60 c0     ..`?.`....`.`.`.
     b94:	60 e0 e0 60 e0 7b e0 1e 60 00 60 60 e0 60 c0 3f     `..`.{..`.``.`.?
     ba4:	80 1f 00 0a 11 22 0e 02 00 c0 00 c0 00 c0 00 c0     ....."..........
     bb4:	00 c0 00 cf 00 fb 80 e1 c0 c0 c0 c0 c0 c0 c0 c0     ................
     bc4:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 02 11 11 05 01     ................
     bd4:	00 c0 c0 00 00 00 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
     be4:	c0 c0 03 16 16 07 02 fb 60 60 00 00 00 60 60 60     ........``...```
     bf4:	60 60 60 60 60 60 60 60 60 60 60 60 e0 c0 09 11     ````````````....
     c04:	22 0c 02 00 c0 00 c0 00 c0 00 c0 00 c0 00 c3 80     "...............
     c14:	c7 00 ce 00 dc 00 d8 00 f8 00 d8 00 cc 00 ce 00     ................
     c24:	c7 00 c3 00 c3 80 02 11 11 06 02 00 c0 c0 c0 c0     ................
     c34:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 12 0c 24     ...............$
     c44:	15 02 00 cf 1f 00 ff bf 80 e1 e1 c0 c0 c0 c0 c0     ................
     c54:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
     c64:	c0 c0 c0 c0 c0 c0 c0 0a 0c 18 0e 02 00 df 00 ff     ................
     c74:	80 e1 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
     c84:	c0 c0 c0 c0 c0 0b 0c 18 0d 01 00 1f 00 3f c0 60     .............?.`
     c94:	c0 e0 e0 c0 60 c0 60 c0 60 c0 60 e0 e0 60 c0 3f     ....`.`.`.`..`.?
     ca4:	c0 1f 00 0b 11 22 0e 02 fb cf 00 fb c0 e0 c0 e0     ....."..........
     cb4:	e0 c0 60 c0 60 c0 60 c0 60 e0 e0 e0 c0 fb c0 cf     ..`.`.`.`.......
     cc4:	00 c0 00 c0 00 c0 00 c0 00 c0 00 0b 11 22 0e 01     ............."..
     cd4:	fb 1e 60 7b e0 60 e0 e0 e0 c0 60 c0 60 c0 60 c0     ..`{.`....`.`.`.
     ce4:	60 e0 e0 60 e0 7b e0 1e 60 00 60 00 60 00 60 00     `..`.{..`.`.`.`.
     cf4:	60 00 60 07 0c 0c 09 02 00 de fc e0 c0 c0 c0 c0     `.`.............
     d04:	c0 c0 c0 c0 c0 09 0c 18 0b 01 00 3e 00 7f 80 c1     ...........>....
     d14:	80 c0 00 e0 00 7e 00 1f 80 03 80 c1 80 c1 80 77     .....~.........w
     d24:	00 3e 00 07 0f 0f 09 01 00 30 30 30 fe 30 30 30     .>.......000.000
     d34:	30 30 30 30 30 30 3a 1e 0a 0c 18 0e 02 00 c0 c0     000000:.........
     d44:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
     d54:	e1 c0 7f c0 3c c0 0b 0c 18 0c 01 00 c0 60 c0 c0     ....<........`..
     d64:	e0 c0 61 c0 61 80 31 80 33 00 3b 00 1b 00 1e 00     ..a.a.1.3.;.....
     d74:	1e 00 0c 00 12 0c 24 13 00 00 e0 e0 c0 60 e0 c0     ......$......`..
     d84:	61 a1 c0 71 b1 80 31 b1 80 33 31 80 33 1b 00 1b     a..q..1..31.3...
     d94:	1b 00 1e 1b 00 1e 0e 00 0e 0e 00 0c 0e 00 0b 0c     ................
     da4:	18 0d 01 00 e0 c0 71 c0 31 80 3b 00 1f 00 0e 00     ......q.1.;.....
     db4:	1e 00 1f 00 33 80 71 80 61 c0 c0 e0 0b 11 22 0c     ....3.q.a.....".
     dc4:	01 fb c0 60 c0 c0 e0 c0 61 c0 71 80 31 80 33 80     ...`....a.q.1.3.
     dd4:	3b 00 1b 00 1e 00 0e 00 0e 00 0c 00 0c 00 1c 00     ;...............
     de4:	18 00 18 00 08 0c 0c 0a 01 00 ff 03 07 0e 0c 18     ................
     df4:	38 30 60 e0 c0 ff 08 17 17 0b 02 fb 0f 0e 18 18     80`.............
     e04:	18 18 18 18 18 38 70 e0 f0 30 18 18 18 18 18 18     .....8p..0......
     e14:	18 0c 0f 01 19 19 08 04 fa 80 80 80 80 80 80 80     ................
     e24:	80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80     ................
     e34:	80 80 08 17 17 0b 02 fb e0 70 38 18 18 18 18 18     .........p8.....
     e44:	18 1c 0e 07 0e 1c 18 18 18 18 18 18 18 30 f0 0c     .............0..
     e54:	02 04 0c 00 05 3e 70 e7 e0 ff ff ff ff ff ff ff     .....>p.........
     e64:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     e74:	ff ff ff ff ff ff ff ff ff ff 00 00 00 07 00 00     ................
     e84:	02 11 11 08 03 fb c0 c0 00 00 00 c0 c0 c0 c0 c0     ................
     e94:	c0 c0 c0 c0 c0 c0 c0 0a 12 24 0e 02 fd 01 00 01     .........$......
     ea4:	00 01 00 1f 00 7f 80 62 c0 c6 c0 c4 00 c4 00 cc     .......b........
     eb4:	00 c8 00 c8 c0 79 c0 7f 80 1f 00 20 00 20 00 20     .....y..... . . 
     ec4:	00 0b 11 22 0d 01 00 0f 80 1d c0 30 60 30 00 30     ...".......0`0.0
     ed4:	00 30 00 fe 00 30 00 30 00 30 00 30 00 30 00 30     .0...0.0.0.0.0.0
     ee4:	00 30 00 30 00 30 00 ff e0 0b 0e 1c 0d 01 03 00     .0.0.0..........
     ef4:	20 80 20 5f 40 7b 80 60 80 40 40 40 40 40 40 40      . _@{.`.@@@@@@@
     f04:	40 60 80 71 80 5f 40 80 20 00 20 0c 11 22 0e 01     @`.q._@. . .."..
     f14:	00 c0 30 60 60 60 60 30 e0 30 c0 f9 f0 19 80 0f     ..0````0.0......
     f24:	80 0f 00 ff f0 06 00 06 00 06 00 06 00 06 00 06     ................
     f34:	00 06 00 01 16 16 08 04 fb 80 80 80 80 80 80 80     ................
     f44:	80 80 00 00 00 00 80 80 80 80 80 80 80 80 80 08     ................
     f54:	15 15 0a 01 fc 3e 7e c0 c0 c0 70 78 3e 77 e3 c3     .....>~...px>w..
     f64:	c7 ee 7c 1e 07 03 03 03 8e fc 07 02 02 07 00 0f     ..|.............
     f74:	c6 c6 11 11 33 13 01 00 03 e0 00 0f 78 00 38 0e     ....3.......x.8.
     f84:	00 23 f2 00 47 39 00 4e 19 00 8c 00 80 8c 00 80     .#..G9.N........
     f94:	8c 00 80 8c 00 80 8c 18 80 46 39 00 43 f1 00 20     .........F9.C.. 
     fa4:	02 00 30 06 00 0c 18 00 03 e0 00 09 0b 16 09 00     ..0.............
     fb4:	06 3e 00 7f 00 61 00 01 00 3f 00 71 00 41 00 43     .>...a...?.q.A.C
     fc4:	00 3d 00 00 00 ff 80 09 09 12 0d 02 01 31 80 33     .=...........1.3
     fd4:	00 63 00 e6 00 cc 00 e6 00 63 00 33 00 11 80 0c     .c.......c.3....
     fe4:	05 0a 0e 01 05 ff f0 00 10 00 10 00 10 00 10 ff     ................
     ff4:	11 11 33 13 01 00 03 e0 00 0f 78 00 38 0e 00 27     ..3.......x.8..'
    1004:	f2 00 46 39 00 46 19 00 86 18 80 87 e0 80 86 30     ..F9.F.........0
    1014:	80 86 10 80 86 18 80 46 19 00 46 19 00 20 02 00     .......F..F.. ..
    1024:	38 0e 00 0f 78 00 03 e0 00 07 01 01 07 00 0f fe     8...x...........
    1034:	05 06 06 07 01 0b 70 d8 88 88 d8 70 0e 0e 1c 18     ......p....p....
    1044:	05 00 02 00 02 00 02 00 02 00 ff fc 02 00 02 00     ................
    1054:	02 00 02 00 02 00 00 00 00 00 00 00 ff fc 07 09     ................
    1064:	09 09 01 08 3c 7e c6 06 0c 18 30 e0 fe 07 09 09     ....<~....0.....
    1074:	09 01 08 3c 7e c6 0e 18 0e 06 ce 7c 03 04 04 05     ...<~......|....
    1084:	02 0e 60 60 c0 80 ff 0a 15 2a 0d 01 fc 1f c0 3c     ..``.....*.....<
    1094:	80 7c 80 fc 80 fc 80 fc 80 7c 80 7c 80 3c 80 04     .|.......|.|.<..
    10a4:	80 04 80 04 80 04 80 04 80 04 80 04 80 04 80 04     ................
    10b4:	80 04 80 04 80 04 80 02 03 03 06 02 07 c0 c0 c0     ................
    10c4:	06 05 05 06 01 fa 40 78 0c 0c fc 03 09 09 07 02     ......@x........
    10d4:	08 60 e0 20 20 20 20 20 20 20 08 0b 0b 0a 01 06     .`.       ......
    10e4:	3c 7e c3 c1 c1 c1 c3 62 7c 00 ff 09 09 12 0d 02     <~.....b|.......
    10f4:	01 cc 00 66 00 63 00 33 00 39 80 33 00 63 00 66     ...f.c.3.9.3.c.f
    1104:	00 cc 00 0f 11 22 12 02 00 60 30 e0 20 20 60 20     ....."...`0.  ` 
    1114:	40 20 c0 20 80 21 00 23 00 22 18 06 18 04 28 0c     @ . .!.#."....(.
    1124:	48 08 c8 10 fe 30 08 20 08 60 08 10 11 22 13 02     H....0. .`..."..
    1134:	00 60 10 e0 30 20 20 20 60 20 c0 20 80 21 80 21     .`..0   ` . .!.!
    1144:	00 23 3e 06 77 04 63 0c 03 08 06 18 1c 10 30 20     .#>.w.c.......0 
    1154:	60 60 7f 11 11 33 13 01 00 7c 04 00 fe 0c 00 06     ``...3...|......
    1164:	08 00 18 10 00 1e 30 00 06 20 00 c6 60 00 ce 40     ......0.. ..`..@
    1174:	00 7c c6 00 01 86 00 01 0a 00 03 1a 00 02 32 00     .|............2.
    1184:	06 3f 80 04 02 00 08 02 00 18 02 00 0a 11 22 0c     .?............".
    1194:	01 fb 06 00 06 00 00 00 00 00 06 00 06 00 06 00     ................
    11a4:	0e 00 1c 00 70 00 60 00 c0 00 c0 00 c0 c0 f1 c0     ....p.`.........
    11b4:	7f 80 1f 00 10 17 2e 11 01 00 0e 00 06 00 03 00     ................
    11c4:	01 00 00 00 00 00 03 80 03 80 07 c0 06 c0 0e e0     ................
    11d4:	0c 60 0c 70 18 30 18 30 38 38 3f f8 3f fc 60 0c     .`.p.0.088?.?.`.
    11e4:	60 0c e0 06 c0 06 c0 07 10 17 2e 11 01 00 00 60     `..............`
    11f4:	00 c0 00 80 01 00 00 00 00 00 03 80 03 80 07 c0     ................
    1204:	06 c0 0e e0 0c 60 0c 70 18 30 18 30 38 38 3f f8     .....`.p.0.088?.
    1214:	3f fc 60 0c 60 0c e0 06 c0 06 c0 07 10 17 2e 11     ?.`.`...........
    1224:	01 00 03 80 03 c0 06 c0 04 60 00 00 00 00 03 80     .........`......
    1234:	03 80 07 c0 06 c0 0e e0 0c 60 0c 70 18 30 18 30     .........`.p.0.0
    1244:	38 38 3f f8 3f fc 60 0c 60 0c e0 06 c0 06 c0 07     88?.?.`.`.......
    1254:	10 16 2c 11 01 00 07 60 0d c0 00 00 00 00 00 00     ..,....`........
    1264:	03 80 03 80 07 c0 06 c0 0e e0 0c 60 0c 70 18 30     ...........`.p.0
    1274:	18 30 38 38 3f f8 3f fc 60 0c 60 0c e0 06 c0 06     .088?.?.`.`.....
    1284:	c0 07 10 16 2c 12 01 00 06 30 06 30 00 00 00 00     ....,....0.0....
    1294:	00 00 01 c0 03 c0 03 e0 07 60 06 60 06 70 0c 30     .........`.`.p.0
    12a4:	0c 38 1c 18 18 1c 3f fc 3f fc 30 06 60 06 60 07     .8....?.?.0.`.`.
    12b4:	e0 03 c0 03 10 18 30 11 01 00 03 80 06 c0 04 40     ......0........@
    12c4:	04 40 03 80 00 00 00 00 03 80 03 80 07 c0 06 c0     .@..............
    12d4:	06 e0 0c 60 0c 70 1c 30 18 30 18 18 3f f8 3f fc     ...`.p.0.0..?.?.
    12e4:	60 0c 60 0c e0 06 c0 06 c0 07 15 11 33 17 01 00     `.`.........3...
    12f4:	00 ff f8 00 f0 00 01 f0 00 01 b0 00 03 b0 00 03     ................
    1304:	30 00 07 30 00 06 30 00 0e 3f f8 0c 30 00 1c 30     0..0..0..?..0..0
    1314:	00 1f f0 00 38 30 00 30 30 00 70 30 00 60 30 00     ....80.00.p0.`0.
    1324:	c0 3f f8 0d 16 2c 0f 01 fb 0f c0 3f f0 30 38 60     .?...,.....?.08`
    1334:	18 60 18 c0 00 c0 00 c0 00 c0 00 c0 00 c0 00 c0     .`..............
    1344:	00 60 00 60 18 70 30 3f f0 0f c0 02 00 03 c0 00     .`.`.p0?........
    1354:	e0 00 60 07 e0 0b 17 2e 0e 02 00 30 00 18 00 0c     ..`........0....
    1364:	00 04 00 00 00 00 00 ff e0 c0 00 c0 00 c0 00 c0     ................
    1374:	00 c0 00 c0 00 c0 00 ff c0 c0 00 c0 00 c0 00 c0     ................
    1384:	00 c0 00 c0 00 c0 00 ff e0 0b 17 2e 0e 02 00 03     ................
    1394:	00 06 00 06 00 0c 00 00 00 00 00 ff e0 c0 00 c0     ................
    13a4:	00 c0 00 c0 00 c0 00 c0 00 c0 00 ff c0 c0 00 c0     ................
    13b4:	00 c0 00 c0 00 c0 00 c0 00 c0 00 ff e0 0b 17 2e     ................
    13c4:	0e 02 00 1e 00 1e 00 33 00 21 00 00 00 00 00 ff     .......3.!......
    13d4:	e0 c0 00 c0 00 c0 00 c0 00 c0 00 c0 00 c0 00 ff     ................
    13e4:	c0 c0 00 c0 00 c0 00 c0 00 c0 00 c0 00 c0 00 ff     ................
    13f4:	e0 0b 16 2c 0e 02 00 33 00 33 00 00 00 00 00 00     ...,...3.3......
    1404:	00 ff e0 c0 00 c0 00 c0 00 c0 00 c0 00 c0 00 c0     ................
    1414:	00 ff c0 c0 00 c0 00 c0 00 c0 00 c0 00 c0 00 c0     ................
    1424:	00 ff e0 04 17 17 06 00 00 c0 60 30 10 00 00 30     ..........`0...0
    1434:	30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30     0000000000000000
    1444:	04 17 17 06 02 00 30 60 40 c0 00 00 c0 c0 c0 c0     ......0`@.......
    1454:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 06 17 17     ................
    1464:	06 00 00 38 78 4c c4 00 00 30 30 30 30 30 30 30     ...8xL...0000000
    1474:	30 30 30 30 30 30 30 30 30 30 07 16 16 07 00 00     0000000000......
    1484:	c6 c6 00 00 00 30 30 30 30 30 30 30 30 30 30 30     .....00000000000
    1494:	30 30 30 30 30 30 0f 11 22 11 00 00 3f c0 31 f0     000000.."...?.1.
    14a4:	30 38 30 0c 30 0c 30 06 30 06 30 06 ff 06 30 06     080.0.0.0.0...0.
    14b4:	30 06 30 06 30 0c 30 1c 30 38 31 f0 3f c0 0d 16     0.0.0.0.081.?...
    14c4:	2c 11 02 00 0e c0 1f 80 00 00 00 00 00 00 e0 18     ,...............
    14d4:	f0 18 f8 18 f8 18 dc 18 dc 18 ce 18 c6 18 c7 18     ................
    14e4:	c3 18 c3 98 c1 d8 c1 d8 c0 f8 c0 f8 c0 78 c0 38     .............x.8
    14f4:	0f 18 30 11 01 00 0e 00 06 00 03 00 01 00 01 80     ..0.............
    1504:	00 00 00 00 07 c0 1e f0 30 18 60 0c 60 0c c0 06     ........0.`.`...
    1514:	c0 06 c0 06 c0 06 c0 06 c0 06 e0 0e 60 0c 60 0c     ............`.`.
    1524:	30 18 1e f0 07 c0 0f 18 30 11 01 00 00 e0 00 c0     0.......0.......
    1534:	01 80 01 00 03 00 00 00 00 00 07 c0 1e f0 30 18     ..............0.
    1544:	60 0c 60 0c c0 06 c0 06 c0 06 c0 06 c0 06 c0 06     `.`.............
    1554:	e0 0e 60 0c 60 0c 30 18 1e f0 07 c0 0f 18 30 11     ..`.`.0.......0.
    1564:	01 00 03 80 03 80 06 c0 04 40 0c 20 00 00 00 00     .........@. ....
    1574:	07 c0 1e f0 30 18 60 0c 60 0c c0 06 c0 06 c0 06     ....0.`.`.......
    1584:	c0 06 c0 06 c0 06 e0 0e 60 0c 60 0c 30 18 1e f0     ........`.`.0...
    1594:	07 c0 0f 16 2c 11 01 00 07 60 0d c0 00 00 00 00     ....,....`......
    15a4:	00 00 07 c0 1e f0 30 18 60 0c 60 0c c0 06 c0 06     ......0.`.`.....
    15b4:	c0 06 c0 06 c0 06 c0 06 e0 0e 60 0c 70 1c 38 38     ..........`.p.88
    15c4:	1f f0 07 c0 0f 16 2c 11 01 00 06 60 06 60 00 00     ......,....`.`..
    15d4:	00 00 00 00 07 c0 1e f0 30 18 60 0c 60 0c c0 06     ........0.`.`...
    15e4:	c0 06 c0 06 c0 06 c0 06 c0 06 e0 0e 60 0c 60 0c     ............`.`.
    15f4:	30 18 1e f0 07 c0 0d 0c 18 17 05 01 c0 18 60 30     0.............`0
    1604:	30 60 18 c0 0d 80 07 00 07 00 0d 80 18 c0 30 60     0`............0`
    1614:	60 30 c0 18 0f 15 2a 11 01 fe 00 04 00 0e 07 ec     `0....*.........
    1624:	1e f8 30 3c 60 3c 60 6e c0 e6 c0 c6 c1 c6 c3 86     ..0<`<`n........
    1634:	c3 06 c7 06 ee 0e 6c 0c 7c 0c 78 18 3e f0 6f c0     ......l.|.x.>.o.
    1644:	e0 00 40 00 0d 18 30 11 02 00 1c 00 0c 00 06 00     ..@...0.........
    1654:	02 00 01 00 00 00 00 00 c0 18 c0 18 c0 18 c0 18     ................
    1664:	c0 18 c0 18 c0 18 c0 18 c0 18 c0 18 c0 18 c0 18     ................
    1674:	e0 18 60 38 70 70 3f e0 1f c0 0d 18 30 11 02 00     ..`8pp?.....0...
    1684:	01 c0 01 80 03 00 02 00 06 00 00 00 00 00 c0 18     ................
    1694:	c0 18 c0 18 c0 18 c0 18 c0 18 c0 18 c0 18 c0 18     ................
    16a4:	c0 18 c0 18 c0 18 e0 18 60 38 70 70 3f e0 1f c0     ........`8pp?...
    16b4:	0d 18 30 11 02 00 07 00 07 00 0d 80 08 80 18 40     ..0............@
    16c4:	00 00 00 00 c0 18 c0 18 c0 18 c0 18 c0 18 c0 18     ................
    16d4:	c0 18 c0 18 c0 18 c0 18 c0 18 c0 18 e0 18 60 38     ..............`8
    16e4:	70 70 3f e0 1f c0 0d 16 2c 11 02 00 0c c0 0c c0     pp?.....,.......
    16f4:	00 00 00 00 00 00 c0 18 c0 18 c0 18 c0 18 c0 18     ................
    1704:	c0 18 c0 18 c0 18 c0 18 c0 18 c0 18 c0 18 c0 18     ................
    1714:	60 38 60 30 3d e0 1f c0 0e 17 2e 0f 00 00 00 c0     `8`0=...........
    1724:	01 80 01 80 03 00 00 00 00 00 e0 1c 70 18 70 38     ............p.p8
    1734:	38 30 18 70 1c 60 0c c0 0e c0 07 80 03 80 03 00     80.p.`..........
    1744:	03 00 03 00 03 00 03 00 03 00 03 00 0b 11 22 0e     ..............".
    1754:	02 00 c0 00 c0 00 c0 00 c0 00 ff 80 c1 c0 c0 e0     ................
    1764:	c0 60 c0 60 c0 60 c1 c0 ff 80 c0 00 c0 00 c0 00     .`.`.`..........
    1774:	c0 00 c0 00 0c 11 22 0d 01 00 1f 00 7f 80 e0 c0     ......".........
    1784:	c0 c0 c1 c0 c3 80 c7 00 c6 00 c6 00 c3 80 c1 e0     ................
    1794:	c0 70 c0 30 c0 30 cc 30 cf 60 c3 c0 0a 12 24 0d     .p.0.0.0.`....$.
    17a4:	01 00 18 00 0c 00 04 00 06 00 00 00 00 00 1f 00     ................
    17b4:	7b 80 60 c0 60 c0 00 c0 3f c0 78 c0 e0 c0 c0 c0     {.`.`...?.x.....
    17c4:	c1 c0 77 c0 3c c0 0a 13 26 0d 01 00 03 00 06 00     ..w.<...&.......
    17d4:	06 00 0c 00 08 00 00 00 00 00 1f 00 7b 80 60 c0     ............{.`.
    17e4:	60 c0 00 c0 3f c0 78 c0 e0 c0 c0 c0 c1 c0 77 c0     `...?.x.......w.
    17f4:	3c c0 0a 13 26 0d 01 00 0e 00 0e 00 1b 00 33 00     <...&.........3.
    1804:	21 80 00 00 00 00 1f 00 7b 80 60 c0 60 c0 00 c0     !.......{.`.`...
    1814:	3f c0 78 c0 e0 c0 c0 c0 c1 c0 77 c0 3c c0 0a 11     ?.x.......w.<...
    1824:	22 0d 01 00 1d 80 3f 00 00 00 00 00 00 00 1f 00     ".....?.........
    1834:	7b 80 60 c0 00 c0 07 c0 3f c0 70 c0 c0 c0 c1 c0     {.`.....?.p.....
    1844:	c1 c0 77 c0 3c c0 0a 11 22 0d 01 00 31 80 31 80     ..w.<..."...1.1.
    1854:	00 00 00 00 00 00 1f 00 7b 80 60 c0 60 c0 00 c0     ........{.`.`...
    1864:	3f c0 78 c0 e0 c0 c0 c0 c1 c0 77 c0 3c c0 0a 14     ?.x.......w.<...
    1874:	28 0d 01 00 0e 00 1b 00 11 00 11 00 1b 00 0e 00     (...............
    1884:	00 00 00 00 1f 00 7b 80 60 c0 60 c0 00 c0 3f c0     ......{.`.`...?.
    1894:	78 c0 e0 c0 c0 c0 c1 c0 77 c0 3e c0 12 0c 24 14     x.......w.>...$.
    18a4:	01 00 1e 1f 00 7f bf 80 61 e1 80 00 e0 c0 00 c0     ........a.......
    18b4:	c0 3f ff c0 78 c0 00 e0 c0 00 c0 e0 c0 c1 e1 80     .?..x...........
    18c4:	7f 3f 80 3e 1f 00 0a 11 22 0c 01 fb 1f 00 7f 80     .?.>....".......
    18d4:	61 c0 c0 c0 c0 00 c0 00 c0 00 c0 00 c0 c0 61 c0     a.............a.
    18e4:	7f 80 1f 00 08 00 0f 00 03 80 01 80 1f 00 0a 13     ................
    18f4:	26 0d 01 00 30 00 18 00 08 00 0c 00 06 00 00 00     &...0...........
    1904:	00 00 1f 00 7f 80 60 c0 c0 c0 c0 c0 ff c0 c0 00     ......`.........
    1914:	c0 00 c0 c0 60 c0 3f 80 1f 00 0a 13 26 0d 01 00     ....`.?.....&...
    1924:	03 00 07 00 06 00 0c 00 08 00 00 00 00 00 1f 00     ................
    1934:	7f 80 60 c0 c0 c0 c0 c0 ff c0 c0 00 c0 00 c0 c0     ..`.............
    1944:	60 c0 3f 80 1f 00 0a 13 26 0d 01 00 0c 00 1e 00     `.?.....&.......
    1954:	1a 00 33 00 21 00 00 00 00 00 1f 00 7f 80 60 c0     ..3.!.........`.
    1964:	c0 c0 c0 c0 ff c0 c0 00 c0 00 c0 c0 60 c0 3f 80     ............`.?.
    1974:	1f 00 0b 11 22 0d 01 00 31 80 31 80 00 00 00 00     ...."...1.1.....
    1984:	00 00 1f 00 3b c0 60 c0 e0 60 c0 60 ff e0 c0 00     ....;.`..`.`....
    1994:	c0 00 c0 60 60 c0 3b c0 1f 00 04 12 12 06 00 00     ...``.;.........
    19a4:	c0 60 30 10 00 00 30 30 30 30 30 30 30 30 30 30     .`0...0000000000
    19b4:	30 30 04 12 12 06 02 00 30 60 c0 80 00 00 c0 c0     00......0`......
    19c4:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 06 12 12 06 00 00     ................
    19d4:	78 78 cc 84 00 00 30 30 30 30 30 30 30 30 30 30     xx....0000000000
    19e4:	30 30 06 11 11 05 ff 00 cc cc 00 00 00 30 30 30     00...........000
    19f4:	30 30 30 30 30 30 30 30 30 0b 11 22 0d 01 00 61     000000000.."...a
    1a04:	80 3f 00 1e 00 77 00 03 80 1f c0 7f c0 60 e0 e0     .?...w.......`..
    1a14:	60 c0 60 c0 60 c0 60 c0 60 e0 60 60 c0 3f c0 1f     `.`.`.`.`.``.?..
    1a24:	00 0a 11 22 0e 02 00 19 00 3f 00 00 00 00 00 00     ...".....?......
    1a34:	00 df 00 ff 80 e1 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    1a44:	c0 c0 c0 c0 c0 c0 c0 c0 c0 0b 13 26 0d 01 00 38     ...........&...8
    1a54:	00 18 00 0c 00 04 00 02 00 00 00 00 00 1f 00 3f     ...............?
    1a64:	c0 60 c0 e0 e0 c0 60 c0 60 c0 60 c0 60 e0 e0 60     .`....`.`.`.`..`
    1a74:	c0 3f c0 1f 00 0b 13 26 0d 01 00 03 80 03 00 06     .?.....&........
    1a84:	00 04 00 0c 00 00 00 00 00 1f 00 3f c0 60 c0 e0     ...........?.`..
    1a94:	e0 c0 60 c0 60 c0 60 c0 60 e0 e0 60 c0 3f c0 1f     ..`.`.`.`..`.?..
    1aa4:	00 0b 13 26 0d 01 00 0e 00 0e 00 1b 00 11 00 31     ...&...........1
    1ab4:	80 00 00 00 00 1f 00 3f c0 60 c0 e0 e0 c0 60 c0     .......?.`....`.
    1ac4:	60 c0 60 c0 60 e0 e0 60 c0 3f c0 1f 00 0b 11 22     `.`.`..`.?....."
    1ad4:	0d 01 00 1d 80 3f 00 00 00 00 00 00 00 1f 00 3f     .....?.........?
    1ae4:	c0 60 c0 e0 e0 c0 60 c0 60 c0 60 c0 60 e0 e0 60     .`....`.`.`.`..`
    1af4:	c0 3f c0 1f 00 0b 11 22 0d 01 00 31 80 31 80 00     .?....."...1.1..
    1b04:	00 00 00 00 00 1f 00 3f c0 60 c0 e0 e0 c0 60 c0     .......?.`....`.
    1b14:	60 c0 60 c0 60 e0 e0 60 c0 3f c0 1f 00 0e 0a 14     `.`.`..`.?......
    1b24:	18 05 02 03 00 03 00 03 00 00 00 00 00 ff fc 00     ................
    1b34:	00 03 00 03 00 03 00 0b 0f 1e 0d 01 fe 00 20 00     .............. .
    1b44:	60 1f c0 3f c0 61 c0 e3 e0 c2 60 c6 60 cc 60 d8     `..?.a....`.`.`.
    1b54:	60 f8 e0 70 c0 7b c0 5f 00 c0 00 0a 13 26 0e 02     `..p.{._.....&..
    1b64:	00 30 00 18 00 18 00 0c 00 04 00 00 00 00 00 c0     .0..............
    1b74:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    1b84:	c0 e1 c0 77 c0 3c c0 0a 13 26 0e 02 00 03 00 06     ...w.<...&......
    1b94:	00 06 00 0c 00 08 00 00 00 00 00 c0 c0 c0 c0 c0     ................
    1ba4:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 e1 c0 77     ...............w
    1bb4:	c0 3c c0 0a 13 26 0e 02 00 0c 00 1e 00 1e 00 33     .<...&.........3
    1bc4:	00 21 00 00 00 00 00 c0 c0 c0 c0 c0 c0 c0 c0 c0     .!..............
    1bd4:	c0 c0 c0 c0 c0 c0 c0 c0 c0 e1 c0 77 c0 3c c0 0a     ...........w.<..
    1be4:	11 22 0e 02 00 33 00 33 00 00 00 00 00 00 00 c0     ."...3.3........
    1bf4:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    1c04:	c0 e1 c0 7f c0 3c c0 0b 17 2e 0c 01 fb 03 00 03     .....<..........
    1c14:	00 06 00 0c 00 00 00 00 00 c0 60 c0 c0 e0 c0 61     ..........`....a
    1c24:	c0 71 80 31 80 33 80 3b 00 1b 00 1e 00 0e 00 0e     .q.1.3.;........
    1c34:	00 0c 00 0c 00 dc 00 f8 00 70 00 0b 16 2c 0e 02     .........p...,..
    1c44:	fb c0 00 c0 00 c0 00 c0 00 c0 00 cf 00 fb c0 e0     ................
    1c54:	c0 e0 e0 c0 60 c0 60 c0 60 c0 60 e0 e0 e0 c0 fb     ....`.`.`.`.....
    1c64:	c0 cf 00 c0 00 c0 00 c0 00 c0 00 c0 00 0b 16 2c     ...............,
    1c74:	0d 01 fb 31 80 31 80 00 00 00 00 00 00 c0 60 e0     ...1.1........`.
    1c84:	60 60 e0 60 c0 71 c0 31 80 39 80 1b 80 1b 00 1f     ``.`.q.1.9......
    1c94:	00 0e 00 0e 00 0e 00 0c 00 0c 00 1c 00 18 00        ...............

00001ca3 <u8g_font_7x13>:
    1ca3:	01 07 0d 00 fe 09 01 5f 02 cf 20 ff fe 0b fe 0a     ......._.. .....
    1cb3:	fe 0d 00 70 32 19 79 80 80 80 80 80 80 80 00 80     ...p2.y.........
    1cc3:	28 33 73 a0 a0 a0 13 57 77 50 50 f8 50 f8 50 50     (3s....WwPP.P.PP
    1cd3:	13 57 77 20 78 a0 70 28 f0 20 02 69 79 44 a4 48     .Ww x.p(. .iyD.H
    1ce3:	10 10 20 48 94 88 02 67 77 60 90 90 60 94 88 74     .. H...gw`..`..t
    1cf3:	38 13 73 80 80 80 22 39 79 20 40 40 80 80 80 40     8.s..."9y @@...@
    1d03:	40 20 22 39 79 80 40 40 20 20 20 40 40 80 04 65     @ "9y.@@   @@..e
    1d13:	75 48 30 fc 30 48 14 55 75 20 20 f8 20 20 11 43     uH0.0H.Uu  .  .C
    1d23:	73 70 60 80 16 51 71 f8 21 33 73 40 e0 40 12 59     sp`..Qq.!3s@.@.Y
    1d33:	79 08 08 10 10 20 40 40 80 80 02 69 79 30 48 84     y.... @@...iy0H.
    1d43:	84 84 84 84 48 30 12 59 79 20 60 a0 20 20 20 20     ....H0.Yy `.    
    1d53:	20 f8 02 69 79 78 84 84 04 08 30 40 80 fc 02 69      ..iyx....0@...i
    1d63:	79 fc 04 08 10 38 04 04 84 78 02 69 79 08 18 28     y....8...x.iy..(
    1d73:	48 88 88 fc 08 08 02 69 79 fc 80 80 b8 c4 04 04     H......iy.......
    1d83:	84 78 02 69 79 38 40 80 80 b8 c4 84 84 78 02 69     .x.iy8@......x.i
    1d93:	79 fc 04 08 10 10 20 20 40 40 02 69 79 78 84 84     y.....  @@.iyx..
    1da3:	84 78 84 84 84 78 02 69 79 78 84 84 8c 74 04 04     .x...x.iyx...t..
    1db3:	08 70 21 38 78 40 e0 40 00 00 40 e0 40 11 48 78     .p!8x@.@..@.@.Hx
    1dc3:	20 70 20 00 00 70 60 80 12 59 79 08 10 20 40 80      p ..p`..Yy.. @.
    1dd3:	40 20 10 08 04 64 74 fc 00 00 fc 12 59 79 80 40     @ ...dt.....Yy.@
    1de3:	20 10 08 10 20 40 80 02 69 79 78 84 84 04 08 10      ... @..iyx.....
    1df3:	10 00 10 02 69 79 78 84 84 9c a4 ac 94 80 78 02     ....iyx.......x.
    1e03:	69 79 30 48 84 84 84 fc 84 84 84 02 69 79 f8 44     iy0H........iy.D
    1e13:	44 44 78 44 44 44 f8 02 69 79 78 84 80 80 80 80     DDxDDD..iyx.....
    1e23:	80 84 78 02 69 79 f8 44 44 44 44 44 44 44 f8 02     ..x.iy.DDDDDDD..
    1e33:	69 79 fc 80 80 80 f0 80 80 80 fc 02 69 79 fc 80     iy..........iy..
    1e43:	80 80 f0 80 80 80 80 02 69 79 78 84 80 80 80 9c     ........iyx.....
    1e53:	84 8c 74 02 69 79 84 84 84 84 fc 84 84 84 84 12     ..t.iy..........
    1e63:	59 79 f8 20 20 20 20 20 20 20 f8 02 69 79 1c 08     Yy.       ..iy..
    1e73:	08 08 08 08 08 88 70 02 69 79 84 88 90 a0 c0 a0     ......p.iy......
    1e83:	90 88 84 02 69 79 80 80 80 80 80 80 80 80 fc 02     ....iy..........
    1e93:	69 79 84 cc cc b4 b4 84 84 84 84 02 69 79 84 84     iy..........iy..
    1ea3:	c4 a4 94 8c 84 84 84 02 69 79 78 84 84 84 84 84     ........iyx.....
    1eb3:	84 84 78 02 69 79 f8 84 84 84 f8 80 80 80 80 01     ..x.iy..........
    1ec3:	6a 7a 78 84 84 84 84 84 a4 94 78 04 02 69 79 f8     jzx.......x..iy.
    1ed3:	84 84 84 f8 a0 90 88 84 02 69 79 78 84 80 80 78     .........iyx...x
    1ee3:	04 04 84 78 12 59 79 f8 20 20 20 20 20 20 20 20     ...x.Yy.        
    1ef3:	02 69 79 84 84 84 84 84 84 84 84 78 02 69 79 84     .iy........x.iy.
    1f03:	84 84 48 48 48 30 30 30 02 69 79 84 84 84 84 b4     ..HHH000.iy.....
    1f13:	b4 cc cc 84 02 69 79 84 84 48 48 30 48 48 84 84     .....iy..HH0HH..
    1f23:	12 59 79 88 88 50 50 20 20 20 20 20 02 69 79 fc     .Yy..PP     .iy.
    1f33:	04 08 10 30 20 40 80 fc 11 4b 7b f0 80 80 80 80     ...0 @...K{.....
    1f43:	80 80 80 80 80 f0 12 59 79 80 80 40 40 20 10 10     .......Yy..@@ ..
    1f53:	08 08 11 4b 7b f0 10 10 10 10 10 10 10 10 10 f0     ...K{...........
    1f63:	18 53 73 20 50 88 01 61 71 fc 2a 22 72 80 40 02     .Ss P..aq.*"r.@.
    1f73:	66 76 78 04 7c 84 8c 74 02 69 79 80 80 80 b8 c4     fvx.|..t.iy.....
    1f83:	84 84 c4 b8 02 66 76 78 84 80 80 84 78 02 69 79     .....fvx....x.iy
    1f93:	04 04 04 74 8c 84 84 8c 74 02 66 76 78 84 fc 80     ...t....t.fvx...
    1fa3:	84 78 02 69 79 38 44 40 40 f0 40 40 40 40 00 68     .x.iy8D@@.@@@@.h
    1fb3:	78 74 88 88 70 80 78 84 78 02 69 79 80 80 80 b8     xt..p.x.x.iy....
    1fc3:	c4 84 84 84 84 12 58 78 20 00 60 20 20 20 20 f8     ......Xx .`    .
    1fd3:	10 5a 7a 08 00 18 08 08 08 08 88 88 70 02 69 79     .Zz.........p.iy
    1fe3:	80 80 80 88 90 e0 90 88 84 12 59 79 60 20 20 20     ..........Yy`   
    1ff3:	20 20 20 20 f8 12 56 76 d0 a8 a8 a8 a8 88 02 66         ..Vv.......f
    2003:	76 b8 c4 84 84 84 84 02 66 76 78 84 84 84 84 78     v.......fvx....x
    2013:	00 68 78 b8 c4 84 c4 b8 80 80 80 00 68 78 74 8c     .hx.........hxt.
    2023:	84 8c 74 04 04 04 02 66 76 b8 44 40 40 40 40 02     ..t....fv.D@@@@.
    2033:	66 76 78 84 60 18 84 78 02 68 78 40 40 f0 40 40     fvx.`..x.hx@@.@@
    2043:	40 44 38 02 66 76 84 84 84 84 8c 74 12 56 76 88     @D8.fv.....t.Vv.
    2053:	88 88 50 50 20 12 56 76 88 88 a8 a8 a8 50 02 66     ..PP .Vv.....P.f
    2063:	76 84 48 30 30 48 84 00 68 78 84 84 84 8c 74 04     v.H00H..hx....t.
    2073:	84 78 02 66 76 fc 08 10 20 40 fc 11 5b 7b 38 40     .x.fv... @..[{8@
    2083:	40 40 20 c0 20 40 40 40 38 32 19 79 80 80 80 80     @@ . @@@82.y....
    2093:	80 80 80 80 80 11 5b 7b e0 10 10 10 20 18 20 10     ......[{.... . .
    20a3:	10 10 e0 18 53 73 48 a8 90 ff ff ff ff ff ff ff     ....SsH.........
    20b3:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    20c3:	ff ff ff ff ff ff ff ff ff ff 0d 00 70 32 19 79     ............p2.y
    20d3:	80 00 80 80 80 80 80 80 80 13 58 78 20 70 a8 a0     ..........Xx p..
    20e3:	a0 a8 70 20 02 69 79 38 44 40 40 e0 40 40 44 b8     ..p .iy8D@@.@@D.
    20f3:	03 66 76 84 78 48 48 78 84 02 59 79 88 88 50 50     .fv.xHHx..Yy..PP
    2103:	f8 20 f8 20 20 32 19 79 80 80 80 80 00 80 80 80     . .  2.y........
    2113:	80 12 4a 7a 60 90 80 60 90 90 60 10 90 60 19 42     ..Jz`..`..`..`.B
    2123:	72 90 90 02 69 79 78 84 b4 a4 a4 a4 b4 84 78 14     r...iyx.......x.
    2133:	57 77 70 08 78 88 78 00 f8 03 67 77 14 28 50 a0     Wwp.x.x...gw.(P.
    2143:	50 28 14 14 53 73 f8 08 08 16 41 71 f0 02 69 79     P(..Ss....Aq..iy
    2153:	78 84 b4 ac ac b4 ac 84 78 1a 51 71 f8 17 44 74     x.......x.Qq..Dt
    2163:	60 90 90 60 13 57 77 20 20 f8 20 20 00 f8 16 36     `..`.Ww  .  ...6
    2173:	76 40 a0 20 40 80 e0 16 36 76 e0 20 40 20 a0 40     v@. @...6v. @ .@
    2183:	2a 22 72 40 80 01 67 77 84 84 84 84 cc b4 80 02     *"r@..gw........
    2193:	69 79 7c e8 e8 e8 68 28 28 28 28 26 21 71 c0 20     iy|...h((((&!q. 
    21a3:	22 72 40 80 16 36 76 40 c0 40 40 40 e0 15 46 76     "r@..6v@.@@@..Fv
    21b3:	60 90 90 60 00 f0 03 67 77 a0 50 28 14 28 50 a0     `..`...gw.P(.(P.
    21c3:	02 6a 7a 40 c0 40 40 44 ec 14 14 1c 04 02 6a 7a     .jz@.@@D......jz
    21d3:	40 c0 40 40 48 f4 04 08 10 1c 02 6a 7a e0 20 40     @.@@H......jz. @
    21e3:	20 a4 4c 14 14 1c 04 02 69 79 20 00 20 20 40 80      .L.....iy .  @.
    21f3:	84 84 78 02 6a 7a 20 10 00 30 48 84 84 fc 84 84     ..x.jz ..0H.....
    2203:	02 6a 7a 10 20 00 30 48 84 84 fc 84 84 02 6a 7a     .jz. .0H......jz
    2213:	30 48 00 30 48 84 84 fc 84 84 02 6a 7a 64 98 00     0H.0H......jzd..
    2223:	30 48 84 84 fc 84 84 02 6a 7a 48 48 00 30 48 84     0H......jzHH.0H.
    2233:	84 fc 84 84 02 6a 7a 30 48 30 30 48 84 84 fc 84     .....jz0H00H....
    2243:	84 02 69 79 5c a0 a0 a0 b8 e0 a0 a0 bc 00 6b 7b     ..iy\.........k{
    2253:	78 84 80 80 80 80 80 84 78 10 20 02 6a 7a 20 10     x.......x. .jz .
    2263:	00 fc 80 80 f0 80 80 fc 02 6a 7a 10 20 00 fc 80     .........jz. ...
    2273:	80 f0 80 80 fc 02 6a 7a 30 48 00 fc 80 80 f0 80     ......jz0H......
    2283:	80 fc 02 6a 7a 48 48 00 fc 80 80 f0 80 80 fc 12     ...jzHH.........
    2293:	5a 7a 40 20 00 f8 20 20 20 20 20 f8 12 5a 7a 20     Zz@ ..     ..Zz 
    22a3:	40 00 f8 20 20 20 20 20 f8 12 5a 7a 20 50 00 f8     @..     ..Zz P..
    22b3:	20 20 20 20 20 f8 12 5a 7a 88 88 00 f8 20 20 20          ..Zz....   
    22c3:	20 20 f8 02 69 79 f8 44 44 44 e4 44 44 44 f8 02       ..iy.DDD.DDD..
    22d3:	6a 7a 64 98 00 84 c4 a4 a4 94 8c 84 02 6a 7a 20     jzd..........jz 
    22e3:	10 00 78 84 84 84 84 84 78 02 6a 7a 10 20 00 78     ..x.....x.jz. .x
    22f3:	84 84 84 84 84 78 02 6a 7a 30 48 00 78 84 84 84     .....x.jz0H.x...
    2303:	84 84 78 02 6a 7a 64 98 00 78 84 84 84 84 84 78     ..x.jzd..x.....x
    2313:	02 6a 7a 48 48 00 78 84 84 84 84 84 78 03 66 76     .jzHH.x.....x.fv
    2323:	84 48 30 30 48 84 01 6b 7b 04 78 8c 94 94 a4 a4     .H00H..k{.x.....
    2333:	a4 c4 78 80 02 6a 7a 20 10 00 84 84 84 84 84 84     ..x..jz ........
    2343:	78 02 6a 7a 10 20 00 84 84 84 84 84 84 78 02 6a     x.jz. .......x.j
    2353:	7a 30 48 00 84 84 84 84 84 84 78 02 6a 7a 48 48     z0H.......x.jzHH
    2363:	00 84 84 84 84 84 84 78 12 5a 7a 10 20 00 88 88     .......x.Zz. ...
    2373:	50 20 20 20 20 02 69 79 80 f8 84 84 84 f8 80 80     P    .iy........
    2383:	80 12 59 79 60 90 90 a0 a0 90 88 88 b0 02 69 79     ..Yy`.........iy
    2393:	20 10 00 78 04 7c 84 8c 74 02 69 79 10 20 00 78      ..x.|..t.iy. .x
    23a3:	04 7c 84 8c 74 02 69 79 30 48 00 78 04 7c 84 8c     .|..t.iy0H.x.|..
    23b3:	74 02 69 79 64 98 00 78 04 7c 84 8c 74 02 69 79     t.iyd..x.|..t.iy
    23c3:	48 48 00 78 04 7c 84 8c 74 02 6a 7a 30 48 30 00     HH.x.|..t.jz0H0.
    23d3:	78 04 7c 84 8c 74 02 66 76 68 14 7c 90 94 68 00     x.|..t.fvh.|..h.
    23e3:	68 78 78 84 80 80 84 78 10 20 02 69 79 20 10 00     hxx....x. .iy ..
    23f3:	78 84 fc 80 84 78 02 69 79 10 20 00 78 84 fc 80     x....x.iy. .x...
    2403:	84 78 02 69 79 30 48 00 78 84 fc 80 84 78 02 69     .x.iy0H.x....x.i
    2413:	79 48 48 00 78 84 fc 80 84 78 12 59 79 40 20 00     yHH.x....x.Yy@ .
    2423:	60 20 20 20 20 f8 12 59 79 20 40 00 60 20 20 20     `    ..Yy @.`   
    2433:	20 f8 12 59 79 60 90 00 60 20 20 20 20 f8 12 59      ..Yy`..`    ..Y
    2443:	79 90 90 00 60 20 20 20 20 f8 02 6a 7a 48 30 50     y...`    ..jzH0P
    2453:	08 78 84 84 84 84 78 02 69 79 64 98 00 b8 c4 84     .x....x.iyd.....
    2463:	84 84 84 02 69 79 20 10 00 78 84 84 84 84 78 02     ....iy ..x....x.
    2473:	69 79 10 20 00 78 84 84 84 84 78 02 69 79 30 48     iy. .x....x.iy0H
    2483:	00 78 84 84 84 84 78 02 69 79 64 98 00 78 84 84     .x....x.iyd..x..
    2493:	84 84 78 02 69 79 48 48 00 78 84 84 84 84 78 13     ..x.iyHH.x....x.
    24a3:	57 77 20 20 00 f8 00 20 20 01 68 78 04 78 8c 94     Ww  ...  .hx.x..
    24b3:	a4 c4 78 80 02 69 79 20 10 00 84 84 84 84 8c 74     ..x..iy .......t
    24c3:	02 69 79 10 20 00 84 84 84 84 8c 74 02 69 79 30     .iy. ......t.iy0
    24d3:	48 00 84 84 84 84 8c 74 02 69 79 48 48 00 84 84     H......t.iyHH...
    24e3:	84 84 8c 74 00 6b 7b 10 20 00 84 84 84 8c 74 04     ...t.k{. .....t.
    24f3:	84 78 00 6a 7a 80 80 b8 c4 84 84 c4 b8 80 80 00     .x.jz...........
    2503:	6b 7b 48 48 00 84 84 84 8c 74 04 84 78              k{HH.....t..x

00002510 <__ctors_start>:
    2510:	da 19       	sub	r29, r10

00002512 <__ctors_end>:
    2512:	11 24       	eor	r1, r1
    2514:	1f be       	out	0x3f, r1	; 63
    2516:	cf ef       	ldi	r28, 0xFF	; 255
    2518:	d8 e0       	ldi	r29, 0x08	; 8
    251a:	de bf       	out	0x3e, r29	; 62
    251c:	cd bf       	out	0x3d, r28	; 61

0000251e <__do_copy_data>:
    251e:	11 e0       	ldi	r17, 0x01	; 1
    2520:	a0 e0       	ldi	r26, 0x00	; 0
    2522:	b1 e0       	ldi	r27, 0x01	; 1
    2524:	e2 ea       	ldi	r30, 0xA2	; 162
    2526:	fc e4       	ldi	r31, 0x4C	; 76
    2528:	02 c0       	rjmp	.+4      	; 0x252e <__do_copy_data+0x10>
    252a:	05 90       	lpm	r0, Z+
    252c:	0d 92       	st	X+, r0
    252e:	ae 33       	cpi	r26, 0x3E	; 62
    2530:	b1 07       	cpc	r27, r17
    2532:	d9 f7       	brne	.-10     	; 0x252a <__do_copy_data+0xc>

00002534 <__do_clear_bss>:
    2534:	22 e0       	ldi	r18, 0x02	; 2
    2536:	ae e3       	ldi	r26, 0x3E	; 62
    2538:	b1 e0       	ldi	r27, 0x01	; 1
    253a:	01 c0       	rjmp	.+2      	; 0x253e <.do_clear_bss_start>

0000253c <.do_clear_bss_loop>:
    253c:	1d 92       	st	X+, r1

0000253e <.do_clear_bss_start>:
    253e:	a5 33       	cpi	r26, 0x35	; 53
    2540:	b2 07       	cpc	r27, r18
    2542:	e1 f7       	brne	.-8      	; 0x253c <.do_clear_bss_loop>

00002544 <__do_global_ctors>:
    2544:	15 e2       	ldi	r17, 0x25	; 37
    2546:	c2 e1       	ldi	r28, 0x12	; 18
    2548:	d5 e2       	ldi	r29, 0x25	; 37
    254a:	04 c0       	rjmp	.+8      	; 0x2554 <__do_global_ctors+0x10>
    254c:	22 97       	sbiw	r28, 0x02	; 2
    254e:	fe 01       	movw	r30, r28
    2550:	0e 94 2e 26 	call	0x4c5c	; 0x4c5c <__tablejump__>
    2554:	c0 31       	cpi	r28, 0x10	; 16
    2556:	d1 07       	cpc	r29, r17
    2558:	c9 f7       	brne	.-14     	; 0x254c <__do_global_ctors+0x8>
    255a:	0e 94 16 16 	call	0x2c2c	; 0x2c2c <main>
    255e:	0c 94 4f 26 	jmp	0x4c9e	; 0x4c9e <_exit>

00002562 <__bad_interrupt>:
    2562:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00002566 <_ZN8VEML6075C1Ev>:
	// Despite the datasheet saying this isn't the default on startup, it appears
	// like it is. So tell the thing to actually start gathering data.
	config = 0;
	config |= VEML6075_CONF_SD_OFF;
	// App note only provided math for this one...
	config |= VEML6075_CONF_IT_100MS;
    2566:	20 e1       	ldi	r18, 0x10	; 16
    2568:	fc 01       	movw	r30, r24
    256a:	20 83       	st	Z, r18
    256c:	08 95       	ret

0000256e <_ZN8VEML60756getUVAEv>:
}
uint16_t VEML6075::getDevID() {
	return read16(VEML6075_REG_DEVID);
}

double VEML6075::getUVA() {
    256e:	cf 92       	push	r12
    2570:	df 92       	push	r13
    2572:	ef 92       	push	r14
    2574:	ff 92       	push	r15
    2576:	0f 93       	push	r16
    2578:	1f 93       	push	r17
    257a:	cf 93       	push	r28
    257c:	df 93       	push	r29
    257e:	ec 01       	movw	r28, r24
	double comp_vis = abs(raw_vis - raw_dark);
    2580:	0d 81       	ldd	r16, Y+5	; 0x05
    2582:	1e 81       	ldd	r17, Y+6	; 0x06
	double comp_ir = abs(raw_ir - raw_dark);
	double comp_uva = abs(raw_uva - raw_dark);
    2584:	89 81       	ldd	r24, Y+1	; 0x01
    2586:	9a 81       	ldd	r25, Y+2	; 0x02
    2588:	80 1b       	sub	r24, r16
    258a:	91 0b       	sbc	r25, r17
    258c:	bc 01       	movw	r22, r24
    258e:	22 f4       	brpl	.+8      	; 0x2598 <_ZN8VEML60756getUVAEv+0x2a>
    2590:	66 27       	eor	r22, r22
    2592:	77 27       	eor	r23, r23
    2594:	68 1b       	sub	r22, r24
    2596:	79 0b       	sbc	r23, r25
    2598:	88 27       	eor	r24, r24
    259a:	77 fd       	sbrc	r23, 7
    259c:	80 95       	com	r24
    259e:	98 2f       	mov	r25, r24
    25a0:	0e 94 e3 1a 	call	0x35c6	; 0x35c6 <__floatsisf>
    25a4:	6b 01       	movw	r12, r22
    25a6:	7c 01       	movw	r14, r24
uint16_t VEML6075::getDevID() {
	return read16(VEML6075_REG_DEVID);
}

double VEML6075::getUVA() {
	double comp_vis = abs(raw_vis - raw_dark);
    25a8:	8f 81       	ldd	r24, Y+7	; 0x07
    25aa:	98 85       	ldd	r25, Y+8	; 0x08
    25ac:	80 1b       	sub	r24, r16
    25ae:	91 0b       	sbc	r25, r17
    25b0:	bc 01       	movw	r22, r24
    25b2:	22 f4       	brpl	.+8      	; 0x25bc <_ZN8VEML60756getUVAEv+0x4e>
    25b4:	66 27       	eor	r22, r22
    25b6:	77 27       	eor	r23, r23
    25b8:	68 1b       	sub	r22, r24
    25ba:	79 0b       	sbc	r23, r25
    25bc:	88 27       	eor	r24, r24
    25be:	77 fd       	sbrc	r23, 7
    25c0:	80 95       	com	r24
    25c2:	98 2f       	mov	r25, r24
    25c4:	0e 94 e3 1a 	call	0x35c6	; 0x35c6 <__floatsisf>
	double comp_ir = abs(raw_ir - raw_dark);
	double comp_uva = abs(raw_uva - raw_dark);
	comp_uva -= VEML6075_UVI_UVA_VIS_COEFF * comp_vis;
    25c8:	28 eb       	ldi	r18, 0xB8	; 184
    25ca:	3e e1       	ldi	r19, 0x1E	; 30
    25cc:	45 e5       	ldi	r20, 0x55	; 85
    25ce:	50 e4       	ldi	r21, 0x40	; 64
    25d0:	0e 94 97 1b 	call	0x372e	; 0x372e <__mulsf3>
    25d4:	9b 01       	movw	r18, r22
    25d6:	ac 01       	movw	r20, r24
    25d8:	c7 01       	movw	r24, r14
    25da:	b6 01       	movw	r22, r12
    25dc:	0e 94 df 19 	call	0x33be	; 0x33be <__subsf3>
    25e0:	6b 01       	movw	r12, r22
    25e2:	7c 01       	movw	r14, r24
	return read16(VEML6075_REG_DEVID);
}

double VEML6075::getUVA() {
	double comp_vis = abs(raw_vis - raw_dark);
	double comp_ir = abs(raw_ir - raw_dark);
    25e4:	89 85       	ldd	r24, Y+9	; 0x09
    25e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    25e8:	80 1b       	sub	r24, r16
    25ea:	91 0b       	sbc	r25, r17
    25ec:	bc 01       	movw	r22, r24
    25ee:	22 f4       	brpl	.+8      	; 0x25f8 <_ZN8VEML60756getUVAEv+0x8a>
    25f0:	66 27       	eor	r22, r22
    25f2:	77 27       	eor	r23, r23
    25f4:	68 1b       	sub	r22, r24
    25f6:	79 0b       	sbc	r23, r25
    25f8:	88 27       	eor	r24, r24
    25fa:	77 fd       	sbrc	r23, 7
    25fc:	80 95       	com	r24
    25fe:	98 2f       	mov	r25, r24
    2600:	0e 94 e3 1a 	call	0x35c6	; 0x35c6 <__floatsisf>
	double comp_uva = abs(raw_uva - raw_dark);
	comp_uva -= VEML6075_UVI_UVA_VIS_COEFF * comp_vis;
	comp_uva -= VEML6075_UVI_UVA_IR_COEFF * comp_ir;
    2604:	20 e0       	ldi	r18, 0x00	; 0
    2606:	30 e0       	ldi	r19, 0x00	; 0
    2608:	40 e2       	ldi	r20, 0x20	; 32
    260a:	50 e4       	ldi	r21, 0x40	; 64
    260c:	0e 94 97 1b 	call	0x372e	; 0x372e <__mulsf3>
    2610:	9b 01       	movw	r18, r22
    2612:	ac 01       	movw	r20, r24
    2614:	c7 01       	movw	r24, r14
    2616:	b6 01       	movw	r22, r12
    2618:	0e 94 df 19 	call	0x33be	; 0x33be <__subsf3>
return abs(comp_uva);
    261c:	0e 94 b0 1a 	call	0x3560	; 0x3560 <__fixsfsi>
    2620:	9b 01       	movw	r18, r22
    2622:	77 23       	and	r23, r23
    2624:	24 f4       	brge	.+8      	; 0x262e <_ZN8VEML60756getUVAEv+0xc0>
    2626:	22 27       	eor	r18, r18
    2628:	33 27       	eor	r19, r19
    262a:	26 1b       	sub	r18, r22
    262c:	37 0b       	sbc	r19, r23
    262e:	b9 01       	movw	r22, r18
    2630:	88 27       	eor	r24, r24
    2632:	77 fd       	sbrc	r23, 7
    2634:	80 95       	com	r24
    2636:	98 2f       	mov	r25, r24
    2638:	0e 94 e3 1a 	call	0x35c6	; 0x35c6 <__floatsisf>
}
    263c:	df 91       	pop	r29
    263e:	cf 91       	pop	r28
    2640:	1f 91       	pop	r17
    2642:	0f 91       	pop	r16
    2644:	ff 90       	pop	r15
    2646:	ef 90       	pop	r14
    2648:	df 90       	pop	r13
    264a:	cf 90       	pop	r12
    264c:	08 95       	ret

0000264e <_ZN8VEML60756getUVBEv>:
double VEML6075::getUVB() {
    264e:	cf 92       	push	r12
    2650:	df 92       	push	r13
    2652:	ef 92       	push	r14
    2654:	ff 92       	push	r15
    2656:	0f 93       	push	r16
    2658:	1f 93       	push	r17
    265a:	cf 93       	push	r28
    265c:	df 93       	push	r29
    265e:	ec 01       	movw	r28, r24
	double comp_vis = abs(raw_vis - raw_dark);
    2660:	0d 81       	ldd	r16, Y+5	; 0x05
    2662:	1e 81       	ldd	r17, Y+6	; 0x06
	double comp_ir = abs(raw_ir - raw_dark);
	double comp_uvb = abs(raw_uvb - raw_dark);
    2664:	8b 81       	ldd	r24, Y+3	; 0x03
    2666:	9c 81       	ldd	r25, Y+4	; 0x04
    2668:	80 1b       	sub	r24, r16
    266a:	91 0b       	sbc	r25, r17
    266c:	bc 01       	movw	r22, r24
    266e:	22 f4       	brpl	.+8      	; 0x2678 <_ZN8VEML60756getUVBEv+0x2a>
    2670:	66 27       	eor	r22, r22
    2672:	77 27       	eor	r23, r23
    2674:	68 1b       	sub	r22, r24
    2676:	79 0b       	sbc	r23, r25
    2678:	88 27       	eor	r24, r24
    267a:	77 fd       	sbrc	r23, 7
    267c:	80 95       	com	r24
    267e:	98 2f       	mov	r25, r24
    2680:	0e 94 e3 1a 	call	0x35c6	; 0x35c6 <__floatsisf>
    2684:	6b 01       	movw	r12, r22
    2686:	7c 01       	movw	r14, r24
	comp_uva -= VEML6075_UVI_UVA_VIS_COEFF * comp_vis;
	comp_uva -= VEML6075_UVI_UVA_IR_COEFF * comp_ir;
return abs(comp_uva);
}
double VEML6075::getUVB() {
	double comp_vis = abs(raw_vis - raw_dark);
    2688:	8f 81       	ldd	r24, Y+7	; 0x07
    268a:	98 85       	ldd	r25, Y+8	; 0x08
    268c:	80 1b       	sub	r24, r16
    268e:	91 0b       	sbc	r25, r17
    2690:	bc 01       	movw	r22, r24
    2692:	22 f4       	brpl	.+8      	; 0x269c <_ZN8VEML60756getUVBEv+0x4e>
    2694:	66 27       	eor	r22, r22
    2696:	77 27       	eor	r23, r23
    2698:	68 1b       	sub	r22, r24
    269a:	79 0b       	sbc	r23, r25
    269c:	88 27       	eor	r24, r24
    269e:	77 fd       	sbrc	r23, 7
    26a0:	80 95       	com	r24
    26a2:	98 2f       	mov	r25, r24
    26a4:	0e 94 e3 1a 	call	0x35c6	; 0x35c6 <__floatsisf>
	double comp_ir = abs(raw_ir - raw_dark);
	double comp_uvb = abs(raw_uvb - raw_dark);
	comp_uvb -= VEML6075_UVI_UVB_VIS_COEFF * comp_vis;
    26a8:	21 e7       	ldi	r18, 0x71	; 113
    26aa:	3d e3       	ldi	r19, 0x3D	; 61
    26ac:	4a e6       	ldi	r20, 0x6A	; 106
    26ae:	50 e4       	ldi	r21, 0x40	; 64
    26b0:	0e 94 97 1b 	call	0x372e	; 0x372e <__mulsf3>
    26b4:	9b 01       	movw	r18, r22
    26b6:	ac 01       	movw	r20, r24
    26b8:	c7 01       	movw	r24, r14
    26ba:	b6 01       	movw	r22, r12
    26bc:	0e 94 df 19 	call	0x33be	; 0x33be <__subsf3>
    26c0:	6b 01       	movw	r12, r22
    26c2:	7c 01       	movw	r14, r24
	comp_uva -= VEML6075_UVI_UVA_IR_COEFF * comp_ir;
return abs(comp_uva);
}
double VEML6075::getUVB() {
	double comp_vis = abs(raw_vis - raw_dark);
	double comp_ir = abs(raw_ir - raw_dark);
    26c4:	89 85       	ldd	r24, Y+9	; 0x09
    26c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    26c8:	80 1b       	sub	r24, r16
    26ca:	91 0b       	sbc	r25, r17
    26cc:	bc 01       	movw	r22, r24
    26ce:	22 f4       	brpl	.+8      	; 0x26d8 <_ZN8VEML60756getUVBEv+0x8a>
    26d0:	66 27       	eor	r22, r22
    26d2:	77 27       	eor	r23, r23
    26d4:	68 1b       	sub	r22, r24
    26d6:	79 0b       	sbc	r23, r25
    26d8:	88 27       	eor	r24, r24
    26da:	77 fd       	sbrc	r23, 7
    26dc:	80 95       	com	r24
    26de:	98 2f       	mov	r25, r24
    26e0:	0e 94 e3 1a 	call	0x35c6	; 0x35c6 <__floatsisf>
	double comp_uvb = abs(raw_uvb - raw_dark);
	comp_uvb -= VEML6075_UVI_UVB_VIS_COEFF * comp_vis;
	comp_uvb -= VEML6075_UVI_UVB_IR_COEFF * comp_ir;
    26e4:	20 e0       	ldi	r18, 0x00	; 0
    26e6:	30 e0       	ldi	r19, 0x00	; 0
    26e8:	40 e3       	ldi	r20, 0x30	; 48
    26ea:	50 e4       	ldi	r21, 0x40	; 64
    26ec:	0e 94 97 1b 	call	0x372e	; 0x372e <__mulsf3>
    26f0:	9b 01       	movw	r18, r22
    26f2:	ac 01       	movw	r20, r24
    26f4:	c7 01       	movw	r24, r14
    26f6:	b6 01       	movw	r22, r12
    26f8:	0e 94 df 19 	call	0x33be	; 0x33be <__subsf3>
return abs(comp_uvb);
    26fc:	0e 94 b0 1a 	call	0x3560	; 0x3560 <__fixsfsi>
    2700:	9b 01       	movw	r18, r22
    2702:	77 23       	and	r23, r23
    2704:	24 f4       	brge	.+8      	; 0x270e <_ZN8VEML60756getUVBEv+0xc0>
    2706:	22 27       	eor	r18, r18
    2708:	33 27       	eor	r19, r19
    270a:	26 1b       	sub	r18, r22
    270c:	37 0b       	sbc	r19, r23
    270e:	b9 01       	movw	r22, r18
    2710:	88 27       	eor	r24, r24
    2712:	77 fd       	sbrc	r23, 7
    2714:	80 95       	com	r24
    2716:	98 2f       	mov	r25, r24
    2718:	0e 94 e3 1a 	call	0x35c6	; 0x35c6 <__floatsisf>
}
    271c:	df 91       	pop	r29
    271e:	cf 91       	pop	r28
    2720:	1f 91       	pop	r17
    2722:	0f 91       	pop	r16
    2724:	ff 90       	pop	r15
    2726:	ef 90       	pop	r14
    2728:	df 90       	pop	r13
    272a:	cf 90       	pop	r12
    272c:	08 95       	ret

0000272e <_ZN8VEML60756read16Eh>:
uint16_t VEML6075::read16(uint8_t reg) {
	//slave,command,slave,datalow with ack, datahigh without ack
	uint8_t msb = 0;
	uint8_t lsb = 0;
	
TWCR = 0;
    272e:	ec eb       	ldi	r30, 0xBC	; 188
    2730:	f0 e0       	ldi	r31, 0x00	; 0
    2732:	10 82       	st	Z, r1
TWCR =(1<<TWINT)|(1<<TWSTA)|(1<<TWEN); //start
    2734:	84 ea       	ldi	r24, 0xA4	; 164
    2736:	80 83       	st	Z, r24
while(!(TWCR &(1<<TWINT))); //wait till start condition has been send
    2738:	80 81       	ld	r24, Z
    273a:	88 23       	and	r24, r24
    273c:	ec f7       	brge	.-6      	; 0x2738 <_ZN8VEML60756read16Eh+0xa>
if((TWSR & 0xF8) != TW_START){error=0xF8;} //248 error
    273e:	80 91 b9 00 	lds	r24, 0x00B9
    2742:	88 7f       	andi	r24, 0xF8	; 248
    2744:	88 30       	cpi	r24, 0x08	; 8
    2746:	19 f0       	breq	.+6      	; 0x274e <_ZN8VEML60756read16Eh+0x20>
    2748:	88 ef       	ldi	r24, 0xF8	; 248
    274a:	80 93 7c 01 	sts	0x017C, r24
	
//transmit address
TWDR = VEML6075_ADDR;//write
    274e:	80 e2       	ldi	r24, 0x20	; 32
    2750:	80 93 bb 00 	sts	0x00BB, r24
TWCR = (1<<TWINT)|(1<<TWEN);
    2754:	84 e8       	ldi	r24, 0x84	; 132
    2756:	80 93 bc 00 	sts	0x00BC, r24
while(!(TWCR &(1<<TWINT)));
    275a:	ec eb       	ldi	r30, 0xBC	; 188
    275c:	f0 e0       	ldi	r31, 0x00	; 0
    275e:	80 81       	ld	r24, Z
    2760:	88 23       	and	r24, r24
    2762:	ec f7       	brge	.-6      	; 0x275e <_ZN8VEML60756read16Eh+0x30>
if(error==0){
    2764:	80 91 7c 01 	lds	r24, 0x017C
    2768:	81 11       	cpse	r24, r1
    276a:	08 c0       	rjmp	.+16     	; 0x277c <_ZN8VEML60756read16Eh+0x4e>
	if( (TWSR & 0xF8) != TW_MT_SLA_ACK)  {error=0x18;} //24
    276c:	80 91 b9 00 	lds	r24, 0x00B9
    2770:	88 7f       	andi	r24, 0xF8	; 248
    2772:	88 31       	cpi	r24, 0x18	; 24
    2774:	19 f0       	breq	.+6      	; 0x277c <_ZN8VEML60756read16Eh+0x4e>
    2776:	88 e1       	ldi	r24, 0x18	; 24
    2778:	80 93 7c 01 	sts	0x017C, r24
}

//command transmit
TWDR = reg; //check ID
    277c:	60 93 bb 00 	sts	0x00BB, r22
TWCR = (1<<TWINT)|(1<<TWEN);
    2780:	84 e8       	ldi	r24, 0x84	; 132
    2782:	80 93 bc 00 	sts	0x00BC, r24
while(!(TWCR &(1<<TWINT)));
    2786:	ec eb       	ldi	r30, 0xBC	; 188
    2788:	f0 e0       	ldi	r31, 0x00	; 0
    278a:	80 81       	ld	r24, Z
    278c:	88 23       	and	r24, r24
    278e:	ec f7       	brge	.-6      	; 0x278a <_ZN8VEML60756read16Eh+0x5c>
if(error==0){
    2790:	80 91 7c 01 	lds	r24, 0x017C
    2794:	81 11       	cpse	r24, r1
    2796:	08 c0       	rjmp	.+16     	; 0x27a8 <_ZN8VEML60756read16Eh+0x7a>
	if ( (TWSR & 0xF8) != TW_MT_DATA_ACK )  {error=0x28;}//40
    2798:	80 91 b9 00 	lds	r24, 0x00B9
    279c:	88 7f       	andi	r24, 0xF8	; 248
    279e:	88 32       	cpi	r24, 0x28	; 40
    27a0:	19 f0       	breq	.+6      	; 0x27a8 <_ZN8VEML60756read16Eh+0x7a>
    27a2:	88 e2       	ldi	r24, 0x28	; 40
    27a4:	80 93 7c 01 	sts	0x017C, r24
}

TWCR=(1<<TWINT)|(1<<TWSTA)|(1<<TWEN); //repeated start
    27a8:	84 ea       	ldi	r24, 0xA4	; 164
    27aa:	80 93 bc 00 	sts	0x00BC, r24
while(!(TWCR &(1<<TWINT)));
    27ae:	ec eb       	ldi	r30, 0xBC	; 188
    27b0:	f0 e0       	ldi	r31, 0x00	; 0
    27b2:	80 81       	ld	r24, Z
    27b4:	88 23       	and	r24, r24
    27b6:	ec f7       	brge	.-6      	; 0x27b2 <_ZN8VEML60756read16Eh+0x84>
if((TWSR & 0xF8) != TW_REP_START){error=0x10;} //16 error
    27b8:	80 91 b9 00 	lds	r24, 0x00B9
    27bc:	88 7f       	andi	r24, 0xF8	; 248
    27be:	80 31       	cpi	r24, 0x10	; 16
    27c0:	19 f0       	breq	.+6      	; 0x27c8 <_ZN8VEML60756read16Eh+0x9a>
    27c2:	80 e1       	ldi	r24, 0x10	; 16
    27c4:	80 93 7c 01 	sts	0x017C, r24

TWDR=VEML6075_ADDR|0x01; //read
    27c8:	81 e2       	ldi	r24, 0x21	; 33
    27ca:	80 93 bb 00 	sts	0x00BB, r24
TWCR=(1<<TWINT)|(1<<TWEN); //resend address with read bit
    27ce:	84 e8       	ldi	r24, 0x84	; 132
    27d0:	80 93 bc 00 	sts	0x00BC, r24
while(!(TWCR &(1<<TWINT)));
    27d4:	ec eb       	ldi	r30, 0xBC	; 188
    27d6:	f0 e0       	ldi	r31, 0x00	; 0
    27d8:	80 81       	ld	r24, Z
    27da:	88 23       	and	r24, r24
    27dc:	ec f7       	brge	.-6      	; 0x27d8 <_ZN8VEML60756read16Eh+0xaa>
if(error==0){
    27de:	80 91 7c 01 	lds	r24, 0x017C
    27e2:	81 11       	cpse	r24, r1
    27e4:	08 c0       	rjmp	.+16     	; 0x27f6 <_ZN8VEML60756read16Eh+0xc8>
	if ( (TWSR & 0xF8) != TW_MR_SLA_ACK )  {error=0x40;}//64
    27e6:	80 91 b9 00 	lds	r24, 0x00B9
    27ea:	88 7f       	andi	r24, 0xF8	; 248
    27ec:	80 34       	cpi	r24, 0x40	; 64
    27ee:	19 f0       	breq	.+6      	; 0x27f6 <_ZN8VEML60756read16Eh+0xc8>
    27f0:	80 e4       	ldi	r24, 0x40	; 64
    27f2:	80 93 7c 01 	sts	0x017C, r24
}

//reading data LSB
TWCR=(1<<TWINT)|(1<<TWEA)|(1<<TWEN); // ack
    27f6:	84 ec       	ldi	r24, 0xC4	; 196
    27f8:	80 93 bc 00 	sts	0x00BC, r24
while(!(TWCR &(1<<TWINT)));
    27fc:	ec eb       	ldi	r30, 0xBC	; 188
    27fe:	f0 e0       	ldi	r31, 0x00	; 0
    2800:	80 81       	ld	r24, Z
    2802:	88 23       	and	r24, r24
    2804:	ec f7       	brge	.-6      	; 0x2800 <_ZN8VEML60756read16Eh+0xd2>
if(error==0){
    2806:	80 91 7c 01 	lds	r24, 0x017C
    280a:	81 11       	cpse	r24, r1
    280c:	08 c0       	rjmp	.+16     	; 0x281e <_ZN8VEML60756read16Eh+0xf0>
	if ( (TWSR & 0xF8) != TW_MR_DATA_ACK )  {error=0x50;}//80
    280e:	80 91 b9 00 	lds	r24, 0x00B9
    2812:	88 7f       	andi	r24, 0xF8	; 248
    2814:	80 35       	cpi	r24, 0x50	; 80
    2816:	19 f0       	breq	.+6      	; 0x281e <_ZN8VEML60756read16Eh+0xf0>
    2818:	80 e5       	ldi	r24, 0x50	; 80
    281a:	80 93 7c 01 	sts	0x017C, r24
}
lsb=TWDR; //38 devID
    281e:	80 91 bb 00 	lds	r24, 0x00BB
//reading data MSB
TWCR = (1<<TWINT)|(1<<TWEN); //no ack
    2822:	94 e8       	ldi	r25, 0x84	; 132
    2824:	90 93 bc 00 	sts	0x00BC, r25
while(!(TWCR &(1<<TWINT)));
    2828:	ec eb       	ldi	r30, 0xBC	; 188
    282a:	f0 e0       	ldi	r31, 0x00	; 0
    282c:	90 81       	ld	r25, Z
    282e:	99 23       	and	r25, r25
    2830:	ec f7       	brge	.-6      	; 0x282c <_ZN8VEML60756read16Eh+0xfe>
msb=TWDR;
    2832:	20 91 bb 00 	lds	r18, 0x00BB
if(error==0){
    2836:	90 91 7c 01 	lds	r25, 0x017C
    283a:	91 11       	cpse	r25, r1
    283c:	08 c0       	rjmp	.+16     	; 0x284e <_ZN8VEML60756read16Eh+0x120>
	if ( (TWSR & 0xF8) != TW_MR_DATA_NACK )  {error=0x58;}//88
    283e:	90 91 b9 00 	lds	r25, 0x00B9
    2842:	98 7f       	andi	r25, 0xF8	; 248
    2844:	98 35       	cpi	r25, 0x58	; 88
    2846:	19 f0       	breq	.+6      	; 0x284e <_ZN8VEML60756read16Eh+0x120>
    2848:	98 e5       	ldi	r25, 0x58	; 88
    284a:	90 93 7c 01 	sts	0x017C, r25
}

TWCR =(1<<TWINT)|(1<<TWEN)|(1<<TWSTO); //stop
    284e:	94 e9       	ldi	r25, 0x94	; 148
    2850:	90 93 bc 00 	sts	0x00BC, r25
		
return (msb << 8) | lsb;
    2854:	90 e0       	ldi	r25, 0x00	; 0
}
    2856:	92 2b       	or	r25, r18
    2858:	08 95       	ret

0000285a <_ZN8VEML60754pollEv>:
	}
	
return true;
}
// Poll sensor for latest values and cache them
void VEML6075::poll() {
    285a:	cf 93       	push	r28
    285c:	df 93       	push	r29
    285e:	ec 01       	movw	r28, r24
	raw_uva = read16(VEML6075_REG_UVA);
    2860:	67 e0       	ldi	r22, 0x07	; 7
    2862:	0e 94 97 13 	call	0x272e	; 0x272e <_ZN8VEML60756read16Eh>
    2866:	9a 83       	std	Y+2, r25	; 0x02
    2868:	89 83       	std	Y+1, r24	; 0x01
	raw_uvb = read16(VEML6075_REG_UVB);
    286a:	69 e0       	ldi	r22, 0x09	; 9
    286c:	ce 01       	movw	r24, r28
    286e:	0e 94 97 13 	call	0x272e	; 0x272e <_ZN8VEML60756read16Eh>
    2872:	9c 83       	std	Y+4, r25	; 0x04
    2874:	8b 83       	std	Y+3, r24	; 0x03
	raw_dark = read16(VEML6075_REG_DUMMY);
    2876:	68 e0       	ldi	r22, 0x08	; 8
    2878:	ce 01       	movw	r24, r28
    287a:	0e 94 97 13 	call	0x272e	; 0x272e <_ZN8VEML60756read16Eh>
    287e:	9e 83       	std	Y+6, r25	; 0x06
    2880:	8d 83       	std	Y+5, r24	; 0x05
	raw_vis = read16(VEML6075_REG_UVCOMP1);
    2882:	6a e0       	ldi	r22, 0x0A	; 10
    2884:	ce 01       	movw	r24, r28
    2886:	0e 94 97 13 	call	0x272e	; 0x272e <_ZN8VEML60756read16Eh>
    288a:	98 87       	std	Y+8, r25	; 0x08
    288c:	8f 83       	std	Y+7, r24	; 0x07
	raw_ir = read16(VEML6075_REG_UVCOMP2);
    288e:	6b e0       	ldi	r22, 0x0B	; 11
    2890:	ce 01       	movw	r24, r28
    2892:	0e 94 97 13 	call	0x272e	; 0x272e <_ZN8VEML60756read16Eh>
    2896:	9a 87       	std	Y+10, r25	; 0x0a
    2898:	89 87       	std	Y+9, r24	; 0x09
}
    289a:	df 91       	pop	r29
    289c:	cf 91       	pop	r28
    289e:	08 95       	ret

000028a0 <_ZN8VEML60758getDevIDEv>:
uint16_t VEML6075::getDevID() {
	return read16(VEML6075_REG_DEVID);
    28a0:	6c e0       	ldi	r22, 0x0C	; 12
    28a2:	0e 94 97 13 	call	0x272e	; 0x272e <_ZN8VEML60756read16Eh>
}
    28a6:	08 95       	ret

000028a8 <_ZN8VEML60757write16Ehj>:
		
return (msb << 8) | lsb;
}
void VEML6075::write16(uint8_t reg, uint16_t data) {
//slave address, command, datalow, datahigh
TWCR = 0;
    28a8:	ec eb       	ldi	r30, 0xBC	; 188
    28aa:	f0 e0       	ldi	r31, 0x00	; 0
    28ac:	10 82       	st	Z, r1
TWCR =(1<<TWINT)|(1<<TWEN)|(1<<TWSTA); //start
    28ae:	84 ea       	ldi	r24, 0xA4	; 164
    28b0:	80 83       	st	Z, r24
while(!(TWCR &(1<<TWINT))); //wait till start condition has been send
    28b2:	80 81       	ld	r24, Z
    28b4:	88 23       	and	r24, r24
    28b6:	ec f7       	brge	.-6      	; 0x28b2 <_ZN8VEML60757write16Ehj+0xa>
if((TWSR & 0xF8) != TW_START){error=0x08;} //8 error
    28b8:	80 91 b9 00 	lds	r24, 0x00B9
    28bc:	88 7f       	andi	r24, 0xF8	; 248
    28be:	88 30       	cpi	r24, 0x08	; 8
    28c0:	19 f0       	breq	.+6      	; 0x28c8 <_ZN8VEML60757write16Ehj+0x20>
    28c2:	88 e0       	ldi	r24, 0x08	; 8
    28c4:	80 93 7c 01 	sts	0x017C, r24

//transmit address
TWDR=VEML6075_ADDR; //write
    28c8:	80 e2       	ldi	r24, 0x20	; 32
    28ca:	80 93 bb 00 	sts	0x00BB, r24
TWCR=(1<<TWINT)|(1<<TWEN);
    28ce:	84 e8       	ldi	r24, 0x84	; 132
    28d0:	80 93 bc 00 	sts	0x00BC, r24
while(!(TWCR &(1<<TWINT)));
    28d4:	ec eb       	ldi	r30, 0xBC	; 188
    28d6:	f0 e0       	ldi	r31, 0x00	; 0
    28d8:	80 81       	ld	r24, Z
    28da:	88 23       	and	r24, r24
    28dc:	ec f7       	brge	.-6      	; 0x28d8 <_ZN8VEML60757write16Ehj+0x30>
if(error==0){
    28de:	80 91 7c 01 	lds	r24, 0x017C
    28e2:	81 11       	cpse	r24, r1
    28e4:	08 c0       	rjmp	.+16     	; 0x28f6 <_ZN8VEML60757write16Ehj+0x4e>
	if( (TWSR & 0xF8) != TW_MT_SLA_ACK)  {error=0x18;} //24
    28e6:	80 91 b9 00 	lds	r24, 0x00B9
    28ea:	88 7f       	andi	r24, 0xF8	; 248
    28ec:	88 31       	cpi	r24, 0x18	; 24
    28ee:	19 f0       	breq	.+6      	; 0x28f6 <_ZN8VEML60757write16Ehj+0x4e>
    28f0:	88 e1       	ldi	r24, 0x18	; 24
    28f2:	80 93 7c 01 	sts	0x017C, r24
}
//command transmit
TWDR = reg;
    28f6:	60 93 bb 00 	sts	0x00BB, r22
TWCR = (1<<TWINT)|(1<<TWEN);
    28fa:	84 e8       	ldi	r24, 0x84	; 132
    28fc:	80 93 bc 00 	sts	0x00BC, r24
while(!(TWCR &(1<<TWINT)));
    2900:	ec eb       	ldi	r30, 0xBC	; 188
    2902:	f0 e0       	ldi	r31, 0x00	; 0
    2904:	80 81       	ld	r24, Z
    2906:	88 23       	and	r24, r24
    2908:	ec f7       	brge	.-6      	; 0x2904 <_ZN8VEML60757write16Ehj+0x5c>
if(error==0){
    290a:	80 91 7c 01 	lds	r24, 0x017C
    290e:	81 11       	cpse	r24, r1
    2910:	08 c0       	rjmp	.+16     	; 0x2922 <_ZN8VEML60757write16Ehj+0x7a>
	if ( (TWSR & 0xF8) != TW_MT_DATA_ACK )  {error=0x28;}//40	
    2912:	80 91 b9 00 	lds	r24, 0x00B9
    2916:	88 7f       	andi	r24, 0xF8	; 248
    2918:	88 32       	cpi	r24, 0x28	; 40
    291a:	19 f0       	breq	.+6      	; 0x2922 <_ZN8VEML60757write16Ehj+0x7a>
    291c:	88 e2       	ldi	r24, 0x28	; 40
    291e:	80 93 7c 01 	sts	0x017C, r24
} 
TWDR = 0xFF & data ;
    2922:	40 93 bb 00 	sts	0x00BB, r20
TWCR = (1<<TWINT)|(1<<TWEN);//begin transmission
    2926:	84 e8       	ldi	r24, 0x84	; 132
    2928:	80 93 bc 00 	sts	0x00BC, r24
while(!(TWCR &(1<<TWINT))); //till has been sent
    292c:	ec eb       	ldi	r30, 0xBC	; 188
    292e:	f0 e0       	ldi	r31, 0x00	; 0
    2930:	80 81       	ld	r24, Z
    2932:	88 23       	and	r24, r24
    2934:	ec f7       	brge	.-6      	; 0x2930 <_ZN8VEML60757write16Ehj+0x88>
if(error==0){
    2936:	80 91 7c 01 	lds	r24, 0x017C
    293a:	81 11       	cpse	r24, r1
    293c:	08 c0       	rjmp	.+16     	; 0x294e <_ZN8VEML60757write16Ehj+0xa6>
	if ( (TWSR & 0xF8) != TW_MT_DATA_ACK )  {error=0x28;}//40
    293e:	80 91 b9 00 	lds	r24, 0x00B9
    2942:	88 7f       	andi	r24, 0xF8	; 248
    2944:	88 32       	cpi	r24, 0x28	; 40
    2946:	19 f0       	breq	.+6      	; 0x294e <_ZN8VEML60757write16Ehj+0xa6>
    2948:	88 e2       	ldi	r24, 0x28	; 40
    294a:	80 93 7c 01 	sts	0x017C, r24
}
TWDR =(0xFF & (data >> 8));
    294e:	50 93 bb 00 	sts	0x00BB, r21
TWCR = (1<<TWINT)|(1<<TWEN);//begin transmission
    2952:	84 e8       	ldi	r24, 0x84	; 132
    2954:	80 93 bc 00 	sts	0x00BC, r24
while(!(TWCR &(1<<TWINT))); //till has been sent
    2958:	ec eb       	ldi	r30, 0xBC	; 188
    295a:	f0 e0       	ldi	r31, 0x00	; 0
    295c:	80 81       	ld	r24, Z
    295e:	88 23       	and	r24, r24
    2960:	ec f7       	brge	.-6      	; 0x295c <_ZN8VEML60757write16Ehj+0xb4>
if(error==0){
    2962:	80 91 7c 01 	lds	r24, 0x017C
    2966:	81 11       	cpse	r24, r1
    2968:	08 c0       	rjmp	.+16     	; 0x297a <_ZN8VEML60757write16Ehj+0xd2>
	if ( (TWSR & 0xF8) != TW_MT_DATA_ACK )  {error=0x28;}//40
    296a:	80 91 b9 00 	lds	r24, 0x00B9
    296e:	88 7f       	andi	r24, 0xF8	; 248
    2970:	88 32       	cpi	r24, 0x28	; 40
    2972:	19 f0       	breq	.+6      	; 0x297a <_ZN8VEML60757write16Ehj+0xd2>
    2974:	88 e2       	ldi	r24, 0x28	; 40
    2976:	80 93 7c 01 	sts	0x017C, r24
}
TWCR =(1<<TWINT)|(1<<TWSTO)|(1<<TWEN); //stop	
    297a:	84 e9       	ldi	r24, 0x94	; 148
    297c:	80 93 bc 00 	sts	0x00BC, r24
    2980:	08 95       	ret

00002982 <_ZN8VEML60755beginEv>:
	config |= VEML6075_CONF_SD_OFF;
	// App note only provided math for this one...
	config |= VEML6075_CONF_IT_100MS;
}

bool VEML6075::begin() {
    2982:	cf 93       	push	r28
    2984:	df 93       	push	r29
    2986:	ec 01       	movw	r28, r24
	// Write config to make sure device is enabled
	write16(VEML6075_REG_CONF, 0b0000000000010000);//config 
    2988:	40 e1       	ldi	r20, 0x10	; 16
    298a:	50 e0       	ldi	r21, 0x00	; 0
    298c:	60 e0       	ldi	r22, 0x00	; 0
    298e:	0e 94 54 14 	call	0x28a8	; 0x28a8 <_ZN8VEML60757write16Ehj>
	if (getDevID() != VEML6075_DEVID) {
    2992:	ce 01       	movw	r24, r28
    2994:	0e 94 50 14 	call	0x28a0	; 0x28a0 <_ZN8VEML60758getDevIDEv>
    2998:	21 e0       	ldi	r18, 0x01	; 1
    299a:	86 97       	sbiw	r24, 0x26	; 38
    299c:	09 f0       	breq	.+2      	; 0x29a0 <_ZN8VEML60755beginEv+0x1e>
    299e:	20 e0       	ldi	r18, 0x00	; 0
		return false;
	}
	
return true;
}
    29a0:	82 2f       	mov	r24, r18
    29a2:	df 91       	pop	r29
    29a4:	cf 91       	pop	r28
    29a6:	08 95       	ret

000029a8 <_Z7reversePci>:
const char *PALE_INDEX_NAME[]={"LOW","MEDIUM","HIGH","EXTREME"};

// reverses a string 'str' of length 'len'
void reverse(char *str, int len)
{
	int i=0, j=len-1, temp;
    29a8:	9b 01       	movw	r18, r22
    29aa:	21 50       	subi	r18, 0x01	; 1
    29ac:	31 09       	sbc	r19, r1
	while (i<j)
    29ae:	12 16       	cp	r1, r18
    29b0:	13 06       	cpc	r1, r19
    29b2:	8c f4       	brge	.+34     	; 0x29d6 <_Z7reversePci+0x2e>
    29b4:	dc 01       	movw	r26, r24
    29b6:	a6 0f       	add	r26, r22
    29b8:	b7 1f       	adc	r27, r23
    29ba:	fc 01       	movw	r30, r24
const char *PALE_INDEX_NAME[]={"LOW","MEDIUM","HIGH","EXTREME"};

// reverses a string 'str' of length 'len'
void reverse(char *str, int len)
{
	int i=0, j=len-1, temp;
    29bc:	40 e0       	ldi	r20, 0x00	; 0
    29be:	50 e0       	ldi	r21, 0x00	; 0
	while (i<j)
	{
		temp = str[i];
    29c0:	80 81       	ld	r24, Z
		str[i] = str[j];
    29c2:	9e 91       	ld	r25, -X
    29c4:	91 93       	st	Z+, r25
		str[j] = temp;
    29c6:	8c 93       	st	X, r24
		i++; j--;
    29c8:	4f 5f       	subi	r20, 0xFF	; 255
    29ca:	5f 4f       	sbci	r21, 0xFF	; 255
    29cc:	21 50       	subi	r18, 0x01	; 1
    29ce:	31 09       	sbc	r19, r1

// reverses a string 'str' of length 'len'
void reverse(char *str, int len)
{
	int i=0, j=len-1, temp;
	while (i<j)
    29d0:	42 17       	cp	r20, r18
    29d2:	53 07       	cpc	r21, r19
    29d4:	ac f3       	brlt	.-22     	; 0x29c0 <_Z7reversePci+0x18>
    29d6:	08 95       	ret

000029d8 <_Z8intToStriPci>:

// Converts a given integer x to string str[].  d is the number
// of digits required in output. If d is more than the number
// of digits in x, then 0s are added at the beginning.
int intToStr(int x, char str[], int d)
{
    29d8:	ef 92       	push	r14
    29da:	ff 92       	push	r15
    29dc:	0f 93       	push	r16
    29de:	1f 93       	push	r17
    29e0:	cf 93       	push	r28
    29e2:	df 93       	push	r29
    29e4:	8b 01       	movw	r16, r22
    29e6:	7a 01       	movw	r14, r20
	int i = 0;
	while (x)
    29e8:	00 97       	sbiw	r24, 0x00	; 0
    29ea:	81 f0       	breq	.+32     	; 0x2a0c <_Z8intToStriPci+0x34>
    29ec:	fb 01       	movw	r30, r22
// Converts a given integer x to string str[].  d is the number
// of digits required in output. If d is more than the number
// of digits in x, then 0s are added at the beginning.
int intToStr(int x, char str[], int d)
{
	int i = 0;
    29ee:	c0 e0       	ldi	r28, 0x00	; 0
    29f0:	d0 e0       	ldi	r29, 0x00	; 0
	while (x)
	{
		str[i++] = (x%10) + '0';
    29f2:	2a e0       	ldi	r18, 0x0A	; 10
    29f4:	30 e0       	ldi	r19, 0x00	; 0
    29f6:	21 96       	adiw	r28, 0x01	; 1
    29f8:	b9 01       	movw	r22, r18
    29fa:	0e 94 18 26 	call	0x4c30	; 0x4c30 <__divmodhi4>
    29fe:	80 5d       	subi	r24, 0xD0	; 208
    2a00:	81 93       	st	Z+, r24
		x = x/10;
    2a02:	86 2f       	mov	r24, r22
    2a04:	97 2f       	mov	r25, r23
// of digits required in output. If d is more than the number
// of digits in x, then 0s are added at the beginning.
int intToStr(int x, char str[], int d)
{
	int i = 0;
	while (x)
    2a06:	00 97       	sbiw	r24, 0x00	; 0
    2a08:	b1 f7       	brne	.-20     	; 0x29f6 <_Z8intToStriPci+0x1e>
    2a0a:	02 c0       	rjmp	.+4      	; 0x2a10 <_Z8intToStriPci+0x38>
// Converts a given integer x to string str[].  d is the number
// of digits required in output. If d is more than the number
// of digits in x, then 0s are added at the beginning.
int intToStr(int x, char str[], int d)
{
	int i = 0;
    2a0c:	c0 e0       	ldi	r28, 0x00	; 0
    2a0e:	d0 e0       	ldi	r29, 0x00	; 0
		x = x/10;
	}
	
	// If number of digits required is more, then
	// add 0s at the beginning
	while (i < d)
    2a10:	ce 15       	cp	r28, r14
    2a12:	df 05       	cpc	r29, r15
    2a14:	64 f4       	brge	.+24     	; 0x2a2e <_Z8intToStriPci+0x56>
    2a16:	f8 01       	movw	r30, r16
    2a18:	ec 0f       	add	r30, r28
    2a1a:	fd 1f       	adc	r31, r29
    2a1c:	c8 01       	movw	r24, r16
    2a1e:	8e 0d       	add	r24, r14
    2a20:	9f 1d       	adc	r25, r15
	str[i++] = '0';
    2a22:	20 e3       	ldi	r18, 0x30	; 48
    2a24:	21 93       	st	Z+, r18
		x = x/10;
	}
	
	// If number of digits required is more, then
	// add 0s at the beginning
	while (i < d)
    2a26:	e8 17       	cp	r30, r24
    2a28:	f9 07       	cpc	r31, r25
    2a2a:	e1 f7       	brne	.-8      	; 0x2a24 <_Z8intToStriPci+0x4c>
    2a2c:	e7 01       	movw	r28, r14
	str[i++] = '0';
	reverse(str, i);	
    2a2e:	be 01       	movw	r22, r28
    2a30:	c8 01       	movw	r24, r16
    2a32:	0e 94 d4 14 	call	0x29a8	; 0x29a8 <_Z7reversePci>
	str[i] = '\0';
    2a36:	f8 01       	movw	r30, r16
    2a38:	ec 0f       	add	r30, r28
    2a3a:	fd 1f       	adc	r31, r29
    2a3c:	10 82       	st	Z, r1
	return i;
}
    2a3e:	ce 01       	movw	r24, r28
    2a40:	df 91       	pop	r29
    2a42:	cf 91       	pop	r28
    2a44:	1f 91       	pop	r17
    2a46:	0f 91       	pop	r16
    2a48:	ff 90       	pop	r15
    2a4a:	ef 90       	pop	r14
    2a4c:	08 95       	ret

00002a4e <_Z4ftoadPci>:
// Converts a floating point number to string.
void ftoa(double n, char *res, int afterpoint)
{
    2a4e:	2f 92       	push	r2
    2a50:	3f 92       	push	r3
    2a52:	4f 92       	push	r4
    2a54:	5f 92       	push	r5
    2a56:	6f 92       	push	r6
    2a58:	7f 92       	push	r7
    2a5a:	8f 92       	push	r8
    2a5c:	9f 92       	push	r9
    2a5e:	af 92       	push	r10
    2a60:	bf 92       	push	r11
    2a62:	cf 92       	push	r12
    2a64:	df 92       	push	r13
    2a66:	ef 92       	push	r14
    2a68:	ff 92       	push	r15
    2a6a:	0f 93       	push	r16
    2a6c:	1f 93       	push	r17
    2a6e:	cf 93       	push	r28
    2a70:	df 93       	push	r29
    2a72:	6b 01       	movw	r12, r22
    2a74:	7c 01       	movw	r14, r24
    2a76:	ea 01       	movw	r28, r20
    2a78:	89 01       	movw	r16, r18
	// Extract integer part
	int ipart = (int)n;
    2a7a:	0e 94 b0 1a 	call	0x3560	; 0x3560 <__fixsfsi>
    2a7e:	4b 01       	movw	r8, r22
    2a80:	5c 01       	movw	r10, r24
	
	// convert integer part to string

	//int i = intToStr(ipart, res, 0);

	int i = intToStr(ipart, res, 1); //forces to show 0 at the beginning
    2a82:	41 e0       	ldi	r20, 0x01	; 1
    2a84:	50 e0       	ldi	r21, 0x00	; 0
    2a86:	be 01       	movw	r22, r28
    2a88:	c4 01       	movw	r24, r8
    2a8a:	0e 94 ec 14 	call	0x29d8	; 0x29d8 <_Z8intToStriPci>
    2a8e:	1c 01       	movw	r2, r24

	// check for display option after point
	if (afterpoint != 0)
    2a90:	01 15       	cp	r16, r1
    2a92:	11 05       	cpc	r17, r1
    2a94:	b1 f1       	breq	.+108    	; 0x2b02 <_Z4ftoadPci+0xb4>
	{
		res[i] = '.';  // add dot
    2a96:	fe 01       	movw	r30, r28
    2a98:	e8 0f       	add	r30, r24
    2a9a:	f9 1f       	adc	r31, r25
    2a9c:	8e e2       	ldi	r24, 0x2E	; 46
    2a9e:	80 83       	st	Z, r24
		
		// Get the value of fraction part upto given no.
		// of points after dot. The third parameter is needed
		// to handle cases like 233.007
		fpart = fpart * pow(10, afterpoint);
    2aa0:	b8 01       	movw	r22, r16
    2aa2:	88 27       	eor	r24, r24
    2aa4:	77 fd       	sbrc	r23, 7
    2aa6:	80 95       	com	r24
    2aa8:	98 2f       	mov	r25, r24
    2aaa:	0e 94 e3 1a 	call	0x35c6	; 0x35c6 <__floatsisf>
    2aae:	9b 01       	movw	r18, r22
    2ab0:	ac 01       	movw	r20, r24
    2ab2:	60 e0       	ldi	r22, 0x00	; 0
    2ab4:	70 e0       	ldi	r23, 0x00	; 0
    2ab6:	80 e2       	ldi	r24, 0x20	; 32
    2ab8:	91 e4       	ldi	r25, 0x41	; 65
    2aba:	0e 94 fa 1b 	call	0x37f4	; 0x37f4 <pow>
    2abe:	2b 01       	movw	r4, r22
    2ac0:	3c 01       	movw	r6, r24
{
	// Extract integer part
	int ipart = (int)n;
	
	// Extract floating part
	double fpart =(double) (n - (double)ipart);
    2ac2:	b4 01       	movw	r22, r8
    2ac4:	88 27       	eor	r24, r24
    2ac6:	77 fd       	sbrc	r23, 7
    2ac8:	80 95       	com	r24
    2aca:	98 2f       	mov	r25, r24
    2acc:	0e 94 e3 1a 	call	0x35c6	; 0x35c6 <__floatsisf>
    2ad0:	9b 01       	movw	r18, r22
    2ad2:	ac 01       	movw	r20, r24
    2ad4:	c7 01       	movw	r24, r14
    2ad6:	b6 01       	movw	r22, r12
    2ad8:	0e 94 df 19 	call	0x33be	; 0x33be <__subsf3>
    2adc:	9b 01       	movw	r18, r22
    2ade:	ac 01       	movw	r20, r24
		// Get the value of fraction part upto given no.
		// of points after dot. The third parameter is needed
		// to handle cases like 233.007
		fpart = fpart * pow(10, afterpoint);
		
		intToStr((int)fpart, res + i + 1, afterpoint);
    2ae0:	8f ef       	ldi	r24, 0xFF	; 255
    2ae2:	28 1a       	sub	r2, r24
    2ae4:	38 0a       	sbc	r3, r24
    2ae6:	c2 0d       	add	r28, r2
    2ae8:	d3 1d       	adc	r29, r3
		res[i] = '.';  // add dot
		
		// Get the value of fraction part upto given no.
		// of points after dot. The third parameter is needed
		// to handle cases like 233.007
		fpart = fpart * pow(10, afterpoint);
    2aea:	c3 01       	movw	r24, r6
    2aec:	b2 01       	movw	r22, r4
    2aee:	0e 94 97 1b 	call	0x372e	; 0x372e <__mulsf3>
		
		intToStr((int)fpart, res + i + 1, afterpoint);
    2af2:	0e 94 b0 1a 	call	0x3560	; 0x3560 <__fixsfsi>
    2af6:	dc 01       	movw	r26, r24
    2af8:	cb 01       	movw	r24, r22
    2afa:	a8 01       	movw	r20, r16
    2afc:	be 01       	movw	r22, r28
    2afe:	0e 94 ec 14 	call	0x29d8	; 0x29d8 <_Z8intToStriPci>
	}
}	
    2b02:	df 91       	pop	r29
    2b04:	cf 91       	pop	r28
    2b06:	1f 91       	pop	r17
    2b08:	0f 91       	pop	r16
    2b0a:	ff 90       	pop	r15
    2b0c:	ef 90       	pop	r14
    2b0e:	df 90       	pop	r13
    2b10:	cf 90       	pop	r12
    2b12:	bf 90       	pop	r11
    2b14:	af 90       	pop	r10
    2b16:	9f 90       	pop	r9
    2b18:	8f 90       	pop	r8
    2b1a:	7f 90       	pop	r7
    2b1c:	6f 90       	pop	r6
    2b1e:	5f 90       	pop	r5
    2b20:	4f 90       	pop	r4
    2b22:	3f 90       	pop	r3
    2b24:	2f 90       	pop	r2
    2b26:	08 95       	ret

00002b28 <_Z20battery_full_markingv>:
	
}


void battery_full_marking(void)
{
    2b28:	0f 93       	push	r16
	u8g_SetFont(&u8g, u8g_font_7x13);
    2b2a:	63 ea       	ldi	r22, 0xA3	; 163
    2b2c:	7c e1       	ldi	r23, 0x1C	; 28
    2b2e:	8d e7       	ldi	r24, 0x7D	; 125
    2b30:	91 e0       	ldi	r25, 0x01	; 1
    2b32:	0e 94 92 20 	call	0x4124	; 0x4124 <u8g_SetFont>
	u8g_DrawBox(&u8g,bat_marking_start+2,55,12,7);      //up to 93 on the right
    2b36:	07 e0       	ldi	r16, 0x07	; 7
    2b38:	2c e0       	ldi	r18, 0x0C	; 12
    2b3a:	47 e3       	ldi	r20, 0x37	; 55
    2b3c:	62 e0       	ldi	r22, 0x02	; 2
    2b3e:	8d e7       	ldi	r24, 0x7D	; 125
    2b40:	91 e0       	ldi	r25, 0x01	; 1
    2b42:	0e 94 ca 23 	call	0x4794	; 0x4794 <u8g_DrawBox>
	u8g_DrawBox(&u8g,bat_marking_start,57,2,3);
    2b46:	03 e0       	ldi	r16, 0x03	; 3
    2b48:	22 e0       	ldi	r18, 0x02	; 2
    2b4a:	49 e3       	ldi	r20, 0x39	; 57
    2b4c:	60 e0       	ldi	r22, 0x00	; 0
    2b4e:	8d e7       	ldi	r24, 0x7D	; 125
    2b50:	91 e0       	ldi	r25, 0x01	; 1
    2b52:	0e 94 ca 23 	call	0x4794	; 0x4794 <u8g_DrawBox>
}
    2b56:	0f 91       	pop	r16
    2b58:	08 95       	ret

00002b5a <_Z20battery_half_markingv>:

void battery_half_marking(void)
{
    2b5a:	0f 93       	push	r16
	u8g_SetFont(&u8g, u8g_font_7x13);
    2b5c:	63 ea       	ldi	r22, 0xA3	; 163
    2b5e:	7c e1       	ldi	r23, 0x1C	; 28
    2b60:	8d e7       	ldi	r24, 0x7D	; 125
    2b62:	91 e0       	ldi	r25, 0x01	; 1
    2b64:	0e 94 92 20 	call	0x4124	; 0x4124 <u8g_SetFont>
	u8g_DrawFrame(&u8g,bat_marking_start+2,55,12,7);      //up to 93 on the right
    2b68:	07 e0       	ldi	r16, 0x07	; 7
    2b6a:	2c e0       	ldi	r18, 0x0C	; 12
    2b6c:	47 e3       	ldi	r20, 0x37	; 55
    2b6e:	62 e0       	ldi	r22, 0x02	; 2
    2b70:	8d e7       	ldi	r24, 0x7D	; 125
    2b72:	91 e0       	ldi	r25, 0x01	; 1
    2b74:	0e 94 7c 23 	call	0x46f8	; 0x46f8 <u8g_DrawFrame>
	
	u8g_DrawBox(&u8g,bat_marking_start+2,55,6,7);
    2b78:	26 e0       	ldi	r18, 0x06	; 6
    2b7a:	47 e3       	ldi	r20, 0x37	; 55
    2b7c:	62 e0       	ldi	r22, 0x02	; 2
    2b7e:	8d e7       	ldi	r24, 0x7D	; 125
    2b80:	91 e0       	ldi	r25, 0x01	; 1
    2b82:	0e 94 ca 23 	call	0x4794	; 0x4794 <u8g_DrawBox>
	u8g_DrawBox(&u8g,bat_marking_start,57,2,3); 
    2b86:	03 e0       	ldi	r16, 0x03	; 3
    2b88:	22 e0       	ldi	r18, 0x02	; 2
    2b8a:	49 e3       	ldi	r20, 0x39	; 57
    2b8c:	60 e0       	ldi	r22, 0x00	; 0
    2b8e:	8d e7       	ldi	r24, 0x7D	; 125
    2b90:	91 e0       	ldi	r25, 0x01	; 1
    2b92:	0e 94 ca 23 	call	0x4794	; 0x4794 <u8g_DrawBox>
	
}
    2b96:	0f 91       	pop	r16
    2b98:	08 95       	ret

00002b9a <_Z19battery_low_markingv>:


void battery_low_marking(void)
{
    2b9a:	0f 93       	push	r16
	u8g_SetFont(&u8g, u8g_font_7x13);
    2b9c:	63 ea       	ldi	r22, 0xA3	; 163
    2b9e:	7c e1       	ldi	r23, 0x1C	; 28
    2ba0:	8d e7       	ldi	r24, 0x7D	; 125
    2ba2:	91 e0       	ldi	r25, 0x01	; 1
    2ba4:	0e 94 92 20 	call	0x4124	; 0x4124 <u8g_SetFont>
	//u8g_DrawFrame(&u8g,68,5,12,7);      //up to 93 on the right
	//u8g_DrawBox(&u8g,66,7,2,3);
	
	u8g_DrawFrame(&u8g,bat_marking_start+2,55,12,7);      //up to 93 on the right
    2ba8:	07 e0       	ldi	r16, 0x07	; 7
    2baa:	2c e0       	ldi	r18, 0x0C	; 12
    2bac:	47 e3       	ldi	r20, 0x37	; 55
    2bae:	62 e0       	ldi	r22, 0x02	; 2
    2bb0:	8d e7       	ldi	r24, 0x7D	; 125
    2bb2:	91 e0       	ldi	r25, 0x01	; 1
    2bb4:	0e 94 7c 23 	call	0x46f8	; 0x46f8 <u8g_DrawFrame>
	u8g_DrawBox(&u8g,bat_marking_start,57,2,3);
    2bb8:	03 e0       	ldi	r16, 0x03	; 3
    2bba:	22 e0       	ldi	r18, 0x02	; 2
    2bbc:	49 e3       	ldi	r20, 0x39	; 57
    2bbe:	60 e0       	ldi	r22, 0x00	; 0
    2bc0:	8d e7       	ldi	r24, 0x7D	; 125
    2bc2:	91 e0       	ldi	r25, 0x01	; 1
    2bc4:	0e 94 ca 23 	call	0x4794	; 0x4794 <u8g_DrawBox>
}
    2bc8:	0f 91       	pop	r16
    2bca:	08 95       	ret

00002bcc <_Z9u8g_setupv>:
				   found=0;
				   
				   
				 
void u8g_setup(void)
{
    2bcc:	0f 93       	push	r16
	// CS: not used
	// A0: PB0 --> PN(1,0) //DC!!
	// RST: PB1,  --> PN(1,1) 
	//    Arguments for u8g_InitHWSPI are: CS, A0, Reset
		
	u8g_InitHWSPI(&u8g, &u8g_dev_ssd1306_128x64_hw_spi,U8G_PIN_NONE,PN(1,0), PN(1,1));
    2bce:	61 e0       	ldi	r22, 0x01	; 1
    2bd0:	81 e0       	ldi	r24, 0x01	; 1
    2bd2:	0e 94 b1 1d 	call	0x3b62	; 0x3b62 <u8g_Pin>
    2bd6:	08 2f       	mov	r16, r24
    2bd8:	60 e0       	ldi	r22, 0x00	; 0
    2bda:	81 e0       	ldi	r24, 0x01	; 1
    2bdc:	0e 94 b1 1d 	call	0x3b62	; 0x3b62 <u8g_Pin>
    2be0:	28 2f       	mov	r18, r24
    2be2:	4f ef       	ldi	r20, 0xFF	; 255
    2be4:	68 e0       	ldi	r22, 0x08	; 8
    2be6:	71 e0       	ldi	r23, 0x01	; 1
    2be8:	8d e7       	ldi	r24, 0x7D	; 125
    2bea:	91 e0       	ldi	r25, 0x01	; 1
    2bec:	0e 94 9f 21 	call	0x433e	; 0x433e <u8g_InitHWSPI>
	//u8g_InitHWSPI(&u8g, &u8g_dev_sh1106_128x64_hw_spi,U8G_PIN_NONE,PN(2,1), PN(2,2));
	u8g_SetRot180(&u8g); //flip screen, if required
    2bf0:	8d e7       	ldi	r24, 0x7D	; 125
    2bf2:	91 e0       	ldi	r25, 0x01	; 1
    2bf4:	0e 94 78 24 	call	0x48f0	; 0x48f0 <u8g_SetRot180>
	//u8g_SetColorIndex(&u8g, 1); 	
}
    2bf8:	0f 91       	pop	r16
    2bfa:	08 95       	ret

00002bfc <_Z12system_setupv>:

void system_setup() {
	
//pc4=sda(in),	pc5=scl(in)  
DDRC=0b00000000;
    2bfc:	17 b8       	out	0x07, r1	; 7
PORTC=0b00100000;//pullups high on SCL I2C 0b00100000;
    2bfe:	80 e2       	ldi	r24, 0x20	; 32
    2c00:	88 b9       	out	0x08, r24	; 8

DDRD = 0b00000000;
    2c02:	1a b8       	out	0x0a, r1	; 10
PORTD = 0b00000000; //output 0 and input tri-state
    2c04:	1b b8       	out	0x0b, r1	; 11

//pb3=MOSI(out), pb5=sck(out),pb1=res(out), pb0=dc(out)
DDRB = 0b00101011;
    2c06:	8b e2       	ldi	r24, 0x2B	; 43
    2c08:	84 b9       	out	0x04, r24	; 4
PORTB = 0b00000000; //output 0 and input tri-state
    2c0a:	15 b8       	out	0x05, r1	; 5
adc6=battery vref40
2.6v=>0.5v
*/

//ADMUX adlar=0, mux 0111 UV-feedback, mux 0110 battery voltage feedback
ADMUX=0b00000110;
    2c0c:	86 e0       	ldi	r24, 0x06	; 6
    2c0e:	80 93 7c 00 	sts	0x007C, r24
ADCSRA=0b11000111; //with 128 clk division from 8MHz now ok
    2c12:	87 ec       	ldi	r24, 0xC7	; 199
    2c14:	80 93 7a 00 	sts	0x007A, r24

//timer control 8 bit
//output is 8MHz/(256*250)=8ms tick
TCNT0 = 0x00; //set timer to 0
    2c18:	16 bc       	out	0x26, r1	; 38
OCR0A = 249; //runs to value 0:249, to get exact ms
    2c1a:	89 ef       	ldi	r24, 0xF9	; 249
    2c1c:	87 bd       	out	0x27, r24	; 39
TCCR0A = 0b00000010; //CTC operation mode
    2c1e:	82 e0       	ldi	r24, 0x02	; 2
    2c20:	84 bd       	out	0x24, r24	; 36
TCCR0B = 0b10000100; // force compare match A, prescaler to 256
    2c22:	94 e8       	ldi	r25, 0x84	; 132
    2c24:	95 bd       	out	0x25, r25	; 37
TIMSK0= 0b00000010; //masked compare match A 
    2c26:	80 93 6e 00 	sts	0x006E, r24
    2c2a:	08 95       	ret

00002c2c <main>:

}


int main(void){
    2c2c:	cf 93       	push	r28
    2c2e:	df 93       	push	r29
    2c30:	cd b7       	in	r28, 0x3d	; 61
    2c32:	de b7       	in	r29, 0x3e	; 62
    2c34:	ce 56       	subi	r28, 0x6E	; 110
    2c36:	d1 09       	sbc	r29, r1
    2c38:	0f b6       	in	r0, 0x3f	; 63
    2c3a:	f8 94       	cli
    2c3c:	de bf       	out	0x3e, r29	; 62
    2c3e:	0f be       	out	0x3f, r0	; 63
    2c40:	cd bf       	out	0x3d, r28	; 61

system_setup();
    2c42:	0e 94 fe 15 	call	0x2bfc	; 0x2bfc <_Z12system_setupv>
u8g_setup();
    2c46:	0e 94 e6 15 	call	0x2bcc	; 0x2bcc <_Z9u8g_setupv>

//cli();  // disable interrupts
sei();	//enable interrupts
    2c4a:	78 94       	sei

//I2C setup
//stantard mode <=100khz
//8mhz/(16+2*TWBR*prescaler), prescaler to 1 so prescaler atleast 32
TWBR = 32;
    2c4c:	80 e2       	ldi	r24, 0x20	; 32
    2c4e:	80 93 b8 00 	sts	0x00B8, r24
TWSR=0x00; //prescaler to 1
    2c52:	10 92 b9 00 	sts	0x00B9, r1
TWAR=0x00;
    2c56:	10 92 ba 00 	sts	0x00BA, r1
TWCR=(1<<TWIE)|(1<<TWEN); //interrupts and enabled
    2c5a:	85 e0       	ldi	r24, 0x05	; 5
    2c5c:	80 93 bc 00 	sts	0x00BC, r24
//end of I2C setup

veml6075.begin();
    2c60:	81 e7       	ldi	r24, 0x71	; 113
    2c62:	91 e0       	ldi	r25, 0x01	; 1
    2c64:	0e 94 c1 14 	call	0x2982	; 0x2982 <_ZN8VEML60755beginEv>


//temp chars for printing


char UV_A[10]={0,0,0,0,0,0,0,0,0,0};
    2c68:	fe 01       	movw	r30, r28
    2c6a:	eb 59       	subi	r30, 0x9B	; 155
    2c6c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c6e:	8a e0       	ldi	r24, 0x0A	; 10
    2c70:	df 01       	movw	r26, r30
    2c72:	98 2f       	mov	r25, r24
    2c74:	1d 92       	st	X+, r1
    2c76:	9a 95       	dec	r25
    2c78:	e9 f7       	brne	.-6      	; 0x2c74 <main+0x48>
char UV_B[10]={0,0,0,0,0,0,0,0,0,0};
    2c7a:	3a 97       	sbiw	r30, 0x0a	; 10
    2c7c:	df 01       	movw	r26, r30
    2c7e:	98 2f       	mov	r25, r24
    2c80:	1d 92       	st	X+, r1
    2c82:	9a 95       	dec	r25
    2c84:	e9 f7       	brne	.-6      	; 0x2c80 <main+0x54>
char UV_I[10]={0,0,0,0,0,0,0,0,0,0};		
    2c86:	3a 97       	sbiw	r30, 0x0a	; 10
    2c88:	df 01       	movw	r26, r30
    2c8a:	98 2f       	mov	r25, r24
    2c8c:	1d 92       	st	X+, r1
    2c8e:	9a 95       	dec	r25
    2c90:	e9 f7       	brne	.-6      	; 0x2c8c <main+0x60>
char UV_calc_total[10]={0,0,0,0,0,0,0,0,0,0};
    2c92:	3a 97       	sbiw	r30, 0x0a	; 10
    2c94:	df 01       	movw	r26, r30
    2c96:	98 2f       	mov	r25, r24
    2c98:	1d 92       	st	X+, r1
    2c9a:	9a 95       	dec	r25
    2c9c:	e9 f7       	brne	.-6      	; 0x2c98 <main+0x6c>
char battery[10]={0,0,0,0,0,0,0,0,0,0};
    2c9e:	3a 97       	sbiw	r30, 0x0a	; 10
    2ca0:	df 01       	movw	r26, r30
    2ca2:	98 2f       	mov	r25, r24
    2ca4:	1d 92       	st	X+, r1
    2ca6:	9a 95       	dec	r25
    2ca8:	e9 f7       	brne	.-6      	; 0x2ca4 <main+0x78>
char secs[10]={0,0,0,0,0,0,0,0,0,0};
    2caa:	3a 97       	sbiw	r30, 0x0a	; 10
    2cac:	df 01       	movw	r26, r30
    2cae:	98 2f       	mov	r25, r24
    2cb0:	1d 92       	st	X+, r1
    2cb2:	9a 95       	dec	r25
    2cb4:	e9 f7       	brne	.-6      	; 0x2cb0 <main+0x84>
char mins[10]={0,0,0,0,0,0,0,0,0,0};
    2cb6:	3a 97       	sbiw	r30, 0x0a	; 10
    2cb8:	df 01       	movw	r26, r30
    2cba:	98 2f       	mov	r25, r24
    2cbc:	1d 92       	st	X+, r1
    2cbe:	9a 95       	dec	r25
    2cc0:	e9 f7       	brne	.-6      	; 0x2cbc <main+0x90>
char hours[10]={0,0,0,0,0,0,0,0,0,0};
    2cc2:	3a 97       	sbiw	r30, 0x0a	; 10
    2cc4:	df 01       	movw	r26, r30
    2cc6:	98 2f       	mov	r25, r24
    2cc8:	1d 92       	st	X+, r1
    2cca:	9a 95       	dec	r25
    2ccc:	e9 f7       	brne	.-6      	; 0x2cc8 <main+0x9c>
	
char UV_index[10]={0,0,0,0,0,0,0,0,0,0};	
    2cce:	3a 97       	sbiw	r30, 0x0a	; 10
    2cd0:	df 01       	movw	r26, r30
    2cd2:	1d 92       	st	X+, r1
    2cd4:	8a 95       	dec	r24
    2cd6:	e9 f7       	brne	.-6      	; 0x2cd2 <main+0xa6>

char UV_test[20]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}; //test
    2cd8:	74 97       	sbiw	r30, 0x14	; 20
    2cda:	84 e1       	ldi	r24, 0x14	; 20
    2cdc:	df 01       	movw	r26, r30
    2cde:	1d 92       	st	X+, r1
    2ce0:	8a 95       	dec	r24
    2ce2:	e9 f7       	brne	.-6      	; 0x2cde <main+0xb2>
//char pulse_test[20]; //test
//char collisions[20]; //test

		//	battery voltage level check at start
		ADCSRA |= (1 << ADSC);
    2ce4:	ea e7       	ldi	r30, 0x7A	; 122
    2ce6:	f0 e0       	ldi	r31, 0x00	; 0
    2ce8:	80 81       	ld	r24, Z
    2cea:	80 64       	ori	r24, 0x40	; 64
    2cec:	80 83       	st	Z, r24
		while(ADCSRA & _BV(ADSC));    // wait until conversion is complete
    2cee:	80 81       	ld	r24, Z
    2cf0:	86 fd       	sbrc	r24, 6
    2cf2:	fd cf       	rjmp	.-6      	; 0x2cee <main+0xc2>
		battery_voltage_lvl=0;
    2cf4:	10 92 68 01 	sts	0x0168, r1
    2cf8:	10 92 67 01 	sts	0x0167, r1
    2cfc:	84 e0       	ldi	r24, 0x04	; 4
    2cfe:	90 e0       	ldi	r25, 0x00	; 0
		for(int i=0;i < OVERSAMPLING;i++ ){
			ADCSRA |= (1<<ADSC);
    2d00:	ea e7       	ldi	r30, 0x7A	; 122
    2d02:	f0 e0       	ldi	r31, 0x00	; 0
			while(ADCSRA & _BV(ADSC));    // wait until conversion is complete
			battery_voltage_lvl+=ADC;		
    2d04:	a8 e7       	ldi	r26, 0x78	; 120
    2d06:	b0 e0       	ldi	r27, 0x00	; 0
		//	battery voltage level check at start
		ADCSRA |= (1 << ADSC);
		while(ADCSRA & _BV(ADSC));    // wait until conversion is complete
		battery_voltage_lvl=0;
		for(int i=0;i < OVERSAMPLING;i++ ){
			ADCSRA |= (1<<ADSC);
    2d08:	20 81       	ld	r18, Z
    2d0a:	20 64       	ori	r18, 0x40	; 64
    2d0c:	20 83       	st	Z, r18
			while(ADCSRA & _BV(ADSC));    // wait until conversion is complete
    2d0e:	20 81       	ld	r18, Z
    2d10:	26 fd       	sbrc	r18, 6
    2d12:	fd cf       	rjmp	.-6      	; 0x2d0e <main+0xe2>
			battery_voltage_lvl+=ADC;		
    2d14:	2d 91       	ld	r18, X+
    2d16:	3c 91       	ld	r19, X
    2d18:	11 97       	sbiw	r26, 0x01	; 1
    2d1a:	40 91 67 01 	lds	r20, 0x0167
    2d1e:	50 91 68 01 	lds	r21, 0x0168
    2d22:	24 0f       	add	r18, r20
    2d24:	35 1f       	adc	r19, r21
    2d26:	30 93 68 01 	sts	0x0168, r19
    2d2a:	20 93 67 01 	sts	0x0167, r18
    2d2e:	01 97       	sbiw	r24, 0x01	; 1

		//	battery voltage level check at start
		ADCSRA |= (1 << ADSC);
		while(ADCSRA & _BV(ADSC));    // wait until conversion is complete
		battery_voltage_lvl=0;
		for(int i=0;i < OVERSAMPLING;i++ ){
    2d30:	00 97       	sbiw	r24, 0x00	; 0
    2d32:	51 f7       	brne	.-44     	; 0x2d08 <main+0xdc>
			ADCSRA |= (1<<ADSC);
			while(ADCSRA & _BV(ADSC));    // wait until conversion is complete
			battery_voltage_lvl+=ADC;		
		}
		battery_voltage_lvl=round(battery_voltage_lvl/OVERSAMPLING);
    2d34:	60 91 67 01 	lds	r22, 0x0167
    2d38:	70 91 68 01 	lds	r23, 0x0168
    2d3c:	76 95       	lsr	r23
    2d3e:	67 95       	ror	r22
    2d40:	76 95       	lsr	r23
    2d42:	67 95       	ror	r22
    2d44:	80 e0       	ldi	r24, 0x00	; 0
    2d46:	90 e0       	ldi	r25, 0x00	; 0
    2d48:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <__floatunsisf>
    2d4c:	0e 94 46 1c 	call	0x388c	; 0x388c <round>
    2d50:	0e 94 b5 1a 	call	0x356a	; 0x356a <__fixunssfsi>
    2d54:	70 93 68 01 	sts	0x0168, r23
    2d58:	60 93 67 01 	sts	0x0167, r22
		batterylevelcheck = 1;	
    2d5c:	81 e0       	ldi	r24, 0x01	; 1
    2d5e:	80 93 3e 01 	sts	0x013E, r24

	//main loop
	testing_min=60;
    2d62:	8c e3       	ldi	r24, 0x3C	; 60
    2d64:	90 e0       	ldi	r25, 0x00	; 0
    2d66:	90 93 70 01 	sts	0x0170, r25
    2d6a:	80 93 6f 01 	sts	0x016F, r24
				battery_low_marking();
			}
			//u8g_DrawStr(&u8g, 84, 63, battery);
			//u8g_DrawStr(&u8g, 120, 63, "V");
			
			for(uint8_t i=0;i<sizeof(PALE_INDEX_NUMBER);i++){
    2d6e:	11 e0       	ldi	r17, 0x01	; 1
    2d70:	68 94       	set
    2d72:	77 24       	eor	r7, r7
    2d74:	71 f8       	bld	r7, 1

	 while(1)
	 {
	 
		
		if(cmd_pulse==1)	//triggered in interrupt
    2d76:	80 91 3f 01 	lds	r24, 0x013F
    2d7a:	88 23       	and	r24, r24
    2d7c:	09 f4       	brne	.+2      	; 0x2d80 <main+0x154>
    2d7e:	e2 c0       	rjmp	.+452    	; 0x2f44 <main+0x318>
		{
	
				veml6075.poll();
    2d80:	81 e7       	ldi	r24, 0x71	; 113
    2d82:	91 e0       	ldi	r25, 0x01	; 1
    2d84:	0e 94 2d 14 	call	0x285a	; 0x285a <_ZN8VEML60754pollEv>
				UVA = veml6075.getUVA();
    2d88:	81 e7       	ldi	r24, 0x71	; 113
    2d8a:	91 e0       	ldi	r25, 0x01	; 1
    2d8c:	0e 94 b7 12 	call	0x256e	; 0x256e <_ZN8VEML60756getUVAEv>
    2d90:	4b 01       	movw	r8, r22
    2d92:	5c 01       	movw	r10, r24
    2d94:	60 93 58 01 	sts	0x0158, r22
    2d98:	70 93 59 01 	sts	0x0159, r23
    2d9c:	80 93 5a 01 	sts	0x015A, r24
    2da0:	90 93 5b 01 	sts	0x015B, r25
				UVB = veml6075.getUVB();
    2da4:	81 e7       	ldi	r24, 0x71	; 113
    2da6:	91 e0       	ldi	r25, 0x01	; 1
    2da8:	0e 94 27 13 	call	0x264e	; 0x264e <_ZN8VEML60756getUVBEv>
    2dac:	6b 01       	movw	r12, r22
    2dae:	7c 01       	movw	r14, r24
    2db0:	60 93 54 01 	sts	0x0154, r22
    2db4:	70 93 55 01 	sts	0x0155, r23
    2db8:	80 93 56 01 	sts	0x0156, r24
    2dbc:	90 93 57 01 	sts	0x0157, r25
				UVgah =(double) ((UVA*0.001100110011)+(UVB*0.00125))/2;
    2dc0:	21 e9       	ldi	r18, 0x91	; 145
    2dc2:	31 e3       	ldi	r19, 0x31	; 49
    2dc4:	40 e9       	ldi	r20, 0x90	; 144
    2dc6:	5a e3       	ldi	r21, 0x3A	; 58
    2dc8:	c5 01       	movw	r24, r10
    2dca:	b4 01       	movw	r22, r8
    2dcc:	0e 94 97 1b 	call	0x372e	; 0x372e <__mulsf3>
    2dd0:	4b 01       	movw	r8, r22
    2dd2:	5c 01       	movw	r10, r24
    2dd4:	2a e0       	ldi	r18, 0x0A	; 10
    2dd6:	37 ed       	ldi	r19, 0xD7	; 215
    2dd8:	43 ea       	ldi	r20, 0xA3	; 163
    2dda:	5a e3       	ldi	r21, 0x3A	; 58
    2ddc:	c7 01       	movw	r24, r14
    2dde:	b6 01       	movw	r22, r12
    2de0:	0e 94 97 1b 	call	0x372e	; 0x372e <__mulsf3>
    2de4:	9b 01       	movw	r18, r22
    2de6:	ac 01       	movw	r20, r24
    2de8:	c5 01       	movw	r24, r10
    2dea:	b4 01       	movw	r22, r8
    2dec:	0e 94 e0 19 	call	0x33c0	; 0x33c0 <__addsf3>
    2df0:	20 e0       	ldi	r18, 0x00	; 0
    2df2:	30 e0       	ldi	r19, 0x00	; 0
    2df4:	40 e0       	ldi	r20, 0x00	; 0
    2df6:	5f e3       	ldi	r21, 0x3F	; 63
    2df8:	0e 94 97 1b 	call	0x372e	; 0x372e <__mulsf3>
    2dfc:	60 93 50 01 	sts	0x0150, r22
    2e00:	70 93 51 01 	sts	0x0151, r23
    2e04:	80 93 52 01 	sts	0x0152, r24
    2e08:	90 93 53 01 	sts	0x0153, r25
				
				//ftoa(UVA, UV_now, 2); //convert float to string
				UVtot=(double)UVtot+UV; //calculating the dose
    2e0c:	20 91 4c 01 	lds	r18, 0x014C
    2e10:	30 91 4d 01 	lds	r19, 0x014D
    2e14:	40 91 4e 01 	lds	r20, 0x014E
    2e18:	50 91 4f 01 	lds	r21, 0x014F
    2e1c:	60 91 48 01 	lds	r22, 0x0148
    2e20:	70 91 49 01 	lds	r23, 0x0149
    2e24:	80 91 4a 01 	lds	r24, 0x014A
    2e28:	90 91 4b 01 	lds	r25, 0x014B
    2e2c:	0e 94 e0 19 	call	0x33c0	; 0x33c0 <__addsf3>
    2e30:	60 93 48 01 	sts	0x0148, r22
    2e34:	70 93 49 01 	sts	0x0149, r23
    2e38:	80 93 4a 01 	sts	0x014A, r24
    2e3c:	90 93 4b 01 	sts	0x014B, r25
				
			testing_min++;	
    2e40:	20 91 6f 01 	lds	r18, 0x016F
    2e44:	30 91 70 01 	lds	r19, 0x0170
    2e48:	2f 5f       	subi	r18, 0xFF	; 255
    2e4a:	3f 4f       	sbci	r19, 0xFF	; 255
    2e4c:	30 93 70 01 	sts	0x0170, r19
    2e50:	20 93 6f 01 	sts	0x016F, r18
			if (testing_min>=60) //once every minute
    2e54:	20 91 6f 01 	lds	r18, 0x016F
    2e58:	30 91 70 01 	lds	r19, 0x0170
    2e5c:	2c 33       	cpi	r18, 0x3C	; 60
    2e5e:	31 05       	cpc	r19, r1
    2e60:	5c f1       	brlt	.+86     	; 0x2eb8 <main+0x28c>
			{
			
				UV_total=(double)UV_total+UVtot;
    2e62:	20 91 44 01 	lds	r18, 0x0144
    2e66:	30 91 45 01 	lds	r19, 0x0145
    2e6a:	40 91 46 01 	lds	r20, 0x0146
    2e6e:	50 91 47 01 	lds	r21, 0x0147
    2e72:	0e 94 e0 19 	call	0x33c0	; 0x33c0 <__addsf3>
    2e76:	60 93 44 01 	sts	0x0144, r22
    2e7a:	70 93 45 01 	sts	0x0145, r23
    2e7e:	80 93 46 01 	sts	0x0146, r24
    2e82:	90 93 47 01 	sts	0x0147, r25
				UV_t=(double)UV_total/60;
    2e86:	20 e0       	ldi	r18, 0x00	; 0
    2e88:	30 e0       	ldi	r19, 0x00	; 0
    2e8a:	40 e7       	ldi	r20, 0x70	; 112
    2e8c:	52 e4       	ldi	r21, 0x42	; 66
    2e8e:	0e 94 48 1a 	call	0x3490	; 0x3490 <__divsf3>
    2e92:	60 93 40 01 	sts	0x0140, r22
    2e96:	70 93 41 01 	sts	0x0141, r23
    2e9a:	80 93 42 01 	sts	0x0142, r24
    2e9e:	90 93 43 01 	sts	0x0143, r25
						
				testing_min=0;
    2ea2:	10 92 70 01 	sts	0x0170, r1
    2ea6:	10 92 6f 01 	sts	0x016F, r1
				ftoa(UV_t,UV_calc_total , 3);
    2eaa:	23 e0       	ldi	r18, 0x03	; 3
    2eac:	30 e0       	ldi	r19, 0x00	; 0
    2eae:	ae 01       	movw	r20, r28
    2eb0:	49 5b       	subi	r20, 0xB9	; 185
    2eb2:	5f 4f       	sbci	r21, 0xFF	; 255
    2eb4:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <_Z4ftoadPci>
					
			}
			if(batterylevelcheck)
    2eb8:	80 91 3e 01 	lds	r24, 0x013E
    2ebc:	88 23       	and	r24, r24
    2ebe:	f9 f0       	breq	.+62     	; 0x2efe <main+0x2d2>
			{
		
				bat=(float)0.0164946*battery_voltage_lvl; //battery voltage level if resistors have low % tolerances
    2ec0:	60 91 67 01 	lds	r22, 0x0167
    2ec4:	70 91 68 01 	lds	r23, 0x0168
    2ec8:	80 e0       	ldi	r24, 0x00	; 0
    2eca:	90 e0       	ldi	r25, 0x00	; 0
    2ecc:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <__floatunsisf>
    2ed0:	2f ea       	ldi	r18, 0xAF	; 175
    2ed2:	3f e1       	ldi	r19, 0x1F	; 31
    2ed4:	47 e8       	ldi	r20, 0x87	; 135
    2ed6:	5c e3       	ldi	r21, 0x3C	; 60
    2ed8:	0e 94 97 1b 	call	0x372e	; 0x372e <__mulsf3>
    2edc:	60 93 5c 01 	sts	0x015C, r22
    2ee0:	70 93 5d 01 	sts	0x015D, r23
    2ee4:	80 93 5e 01 	sts	0x015E, r24
    2ee8:	90 93 5f 01 	sts	0x015F, r25
				//10bit adc value is multiplied by 3.23v reference and divided by 0.2=> 3.23*5.25=17 and finally divided by 2^10
				
				ftoa(bat, battery, 2); //convert float to string
    2eec:	22 e0       	ldi	r18, 0x02	; 2
    2eee:	30 e0       	ldi	r19, 0x00	; 0
    2ef0:	ae 01       	movw	r20, r28
    2ef2:	43 5c       	subi	r20, 0xC3	; 195
    2ef4:	5f 4f       	sbci	r21, 0xFF	; 255
    2ef6:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <_Z4ftoadPci>
				batterylevelcheck=0;	
    2efa:	10 92 3e 01 	sts	0x013E, r1
			}
					
			intToStr(timer_seconds, secs, 2); //seconds
    2efe:	80 91 65 01 	lds	r24, 0x0165
    2f02:	90 91 66 01 	lds	r25, 0x0166
    2f06:	42 e0       	ldi	r20, 0x02	; 2
    2f08:	50 e0       	ldi	r21, 0x00	; 0
    2f0a:	be 01       	movw	r22, r28
    2f0c:	6d 5c       	subi	r22, 0xCD	; 205
    2f0e:	7f 4f       	sbci	r23, 0xFF	; 255
    2f10:	0e 94 ec 14 	call	0x29d8	; 0x29d8 <_Z8intToStriPci>
			intToStr(timer_minutes, mins, 2); //mins
    2f14:	80 91 63 01 	lds	r24, 0x0163
    2f18:	90 91 64 01 	lds	r25, 0x0164
    2f1c:	42 e0       	ldi	r20, 0x02	; 2
    2f1e:	50 e0       	ldi	r21, 0x00	; 0
    2f20:	be 01       	movw	r22, r28
    2f22:	67 5d       	subi	r22, 0xD7	; 215
    2f24:	7f 4f       	sbci	r23, 0xFF	; 255
    2f26:	0e 94 ec 14 	call	0x29d8	; 0x29d8 <_Z8intToStriPci>
			intToStr(timer_hours, hours, 2); //hours
    2f2a:	80 91 61 01 	lds	r24, 0x0161
    2f2e:	90 91 62 01 	lds	r25, 0x0162
    2f32:	42 e0       	ldi	r20, 0x02	; 2
    2f34:	50 e0       	ldi	r21, 0x00	; 0
    2f36:	be 01       	movw	r22, r28
    2f38:	61 5e       	subi	r22, 0xE1	; 225
    2f3a:	7f 4f       	sbci	r23, 0xFF	; 255
    2f3c:	0e 94 ec 14 	call	0x29d8	; 0x29d8 <_Z8intToStriPci>

		cmd_pulse=0;
    2f40:	10 92 3f 01 	sts	0x013F, r1
		}
		
		ftoa(UVA, UV_A, 1);
    2f44:	60 91 58 01 	lds	r22, 0x0158
    2f48:	70 91 59 01 	lds	r23, 0x0159
    2f4c:	80 91 5a 01 	lds	r24, 0x015A
    2f50:	90 91 5b 01 	lds	r25, 0x015B
    2f54:	21 e0       	ldi	r18, 0x01	; 1
    2f56:	30 e0       	ldi	r19, 0x00	; 0
    2f58:	ae 01       	movw	r20, r28
    2f5a:	4b 59       	subi	r20, 0x9B	; 155
    2f5c:	5f 4f       	sbci	r21, 0xFF	; 255
    2f5e:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <_Z4ftoadPci>
		ftoa(UVB, UV_B, 1);
    2f62:	60 91 54 01 	lds	r22, 0x0154
    2f66:	70 91 55 01 	lds	r23, 0x0155
    2f6a:	80 91 56 01 	lds	r24, 0x0156
    2f6e:	90 91 57 01 	lds	r25, 0x0157
    2f72:	21 e0       	ldi	r18, 0x01	; 1
    2f74:	30 e0       	ldi	r19, 0x00	; 0
    2f76:	ae 01       	movw	r20, r28
    2f78:	45 5a       	subi	r20, 0xA5	; 165
    2f7a:	5f 4f       	sbci	r21, 0xFF	; 255
    2f7c:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <_Z4ftoadPci>
		ftoa(UVgah, UV_I, 4);
    2f80:	60 91 50 01 	lds	r22, 0x0150
    2f84:	70 91 51 01 	lds	r23, 0x0151
    2f88:	80 91 52 01 	lds	r24, 0x0152
    2f8c:	90 91 53 01 	lds	r25, 0x0153
    2f90:	24 e0       	ldi	r18, 0x04	; 4
    2f92:	30 e0       	ldi	r19, 0x00	; 0
    2f94:	ae 01       	movw	r20, r28
    2f96:	4f 5a       	subi	r20, 0xAF	; 175
    2f98:	5f 4f       	sbci	r21, 0xFF	; 255
    2f9a:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <_Z4ftoadPci>
		intToStr(error, UV_test, 3); //seconds
    2f9e:	80 91 7c 01 	lds	r24, 0x017C
    2fa2:	43 e0       	ldi	r20, 0x03	; 3
    2fa4:	50 e0       	ldi	r21, 0x00	; 0
    2fa6:	be 01       	movw	r22, r28
    2fa8:	6f 5f       	subi	r22, 0xFF	; 255
    2faa:	7f 4f       	sbci	r23, 0xFF	; 255
    2fac:	90 e0       	ldi	r25, 0x00	; 0
    2fae:	0e 94 ec 14 	call	0x29d8	; 0x29d8 <_Z8intToStriPci>
	 
		
		//printing to display
		u8g_FirstPage(&u8g);
    2fb2:	8d e7       	ldi	r24, 0x7D	; 125
    2fb4:	91 e0       	ldi	r25, 0x01	; 1
    2fb6:	0e 94 bc 21 	call	0x4378	; 0x4378 <u8g_FirstPage>
				battery_low_marking();
			}
			//u8g_DrawStr(&u8g, 84, 63, battery);
			//u8g_DrawStr(&u8g, 120, 63, "V");
			
			for(uint8_t i=0;i<sizeof(PALE_INDEX_NUMBER);i++){
    2fba:	b1 2c       	mov	r11, r1
    2fbc:	0f 2e       	mov	r0, r31
    2fbe:	f3 e0       	ldi	r31, 0x03	; 3
    2fc0:	af 2e       	mov	r10, r31
    2fc2:	f0 2d       	mov	r31, r0
    2fc4:	04 e0       	ldi	r16, 0x04	; 4
		
		//printing to display
		u8g_FirstPage(&u8g);
		do
		{
			u8g_SetFont(&u8g, u8g_font_7x13);
    2fc6:	63 ea       	ldi	r22, 0xA3	; 163
    2fc8:	7c e1       	ldi	r23, 0x1C	; 28
    2fca:	8d e7       	ldi	r24, 0x7D	; 125
    2fcc:	91 e0       	ldi	r25, 0x01	; 1
    2fce:	0e 94 92 20 	call	0x4124	; 0x4124 <u8g_SetFont>
			u8g_DrawStr(&u8g, time_marking_start, 63, hours);
    2fd2:	9e 01       	movw	r18, r28
    2fd4:	21 5e       	subi	r18, 0xE1	; 225
    2fd6:	3f 4f       	sbci	r19, 0xFF	; 255
    2fd8:	4f e3       	ldi	r20, 0x3F	; 63
    2fda:	64 e1       	ldi	r22, 0x14	; 20
    2fdc:	8d e7       	ldi	r24, 0x7D	; 125
    2fde:	91 e0       	ldi	r25, 0x01	; 1
    2fe0:	0e 94 0a 20 	call	0x4014	; 0x4014 <u8g_DrawStr>
			u8g_DrawStr(&u8g, time_marking_start+14, 63, ":");
    2fe4:	24 e2       	ldi	r18, 0x24	; 36
    2fe6:	31 e0       	ldi	r19, 0x01	; 1
    2fe8:	4f e3       	ldi	r20, 0x3F	; 63
    2fea:	62 e2       	ldi	r22, 0x22	; 34
    2fec:	8d e7       	ldi	r24, 0x7D	; 125
    2fee:	91 e0       	ldi	r25, 0x01	; 1
    2ff0:	0e 94 0a 20 	call	0x4014	; 0x4014 <u8g_DrawStr>
			u8g_DrawStr(&u8g, time_marking_start+21, 63, mins);
    2ff4:	9e 01       	movw	r18, r28
    2ff6:	27 5d       	subi	r18, 0xD7	; 215
    2ff8:	3f 4f       	sbci	r19, 0xFF	; 255
    2ffa:	4f e3       	ldi	r20, 0x3F	; 63
    2ffc:	69 e2       	ldi	r22, 0x29	; 41
    2ffe:	8d e7       	ldi	r24, 0x7D	; 125
    3000:	91 e0       	ldi	r25, 0x01	; 1
    3002:	0e 94 0a 20 	call	0x4014	; 0x4014 <u8g_DrawStr>
			u8g_DrawStr(&u8g, time_marking_start+35, 63, ":");
    3006:	24 e2       	ldi	r18, 0x24	; 36
    3008:	31 e0       	ldi	r19, 0x01	; 1
    300a:	4f e3       	ldi	r20, 0x3F	; 63
    300c:	67 e3       	ldi	r22, 0x37	; 55
    300e:	8d e7       	ldi	r24, 0x7D	; 125
    3010:	91 e0       	ldi	r25, 0x01	; 1
    3012:	0e 94 0a 20 	call	0x4014	; 0x4014 <u8g_DrawStr>
			u8g_DrawStr(&u8g, time_marking_start+42,63, secs);
    3016:	9e 01       	movw	r18, r28
    3018:	2d 5c       	subi	r18, 0xCD	; 205
    301a:	3f 4f       	sbci	r19, 0xFF	; 255
    301c:	4f e3       	ldi	r20, 0x3F	; 63
    301e:	6e e3       	ldi	r22, 0x3E	; 62
    3020:	8d e7       	ldi	r24, 0x7D	; 125
    3022:	91 e0       	ldi	r25, 0x01	; 1
    3024:	0e 94 0a 20 	call	0x4014	; 0x4014 <u8g_DrawStr>
			if (bat >= 2.3){			
    3028:	23 e3       	ldi	r18, 0x33	; 51
    302a:	33 e3       	ldi	r19, 0x33	; 51
    302c:	43 e1       	ldi	r20, 0x13	; 19
    302e:	50 e4       	ldi	r21, 0x40	; 64
    3030:	60 91 5c 01 	lds	r22, 0x015C
    3034:	70 91 5d 01 	lds	r23, 0x015D
    3038:	80 91 5e 01 	lds	r24, 0x015E
    303c:	90 91 5f 01 	lds	r25, 0x015F
    3040:	0e 94 93 1b 	call	0x3726	; 0x3726 <__gesf2>
    3044:	88 23       	and	r24, r24
    3046:	14 f0       	brlt	.+4      	; 0x304c <main+0x420>
				battery_full_marking();
    3048:	0e 94 94 15 	call	0x2b28	; 0x2b28 <_Z20battery_full_markingv>
			}
			if (bat < 2.3 && bat >= 2.1){			
    304c:	c0 90 5c 01 	lds	r12, 0x015C
    3050:	d0 90 5d 01 	lds	r13, 0x015D
    3054:	e0 90 5e 01 	lds	r14, 0x015E
    3058:	f0 90 5f 01 	lds	r15, 0x015F
    305c:	23 e3       	ldi	r18, 0x33	; 51
    305e:	33 e3       	ldi	r19, 0x33	; 51
    3060:	43 e1       	ldi	r20, 0x13	; 19
    3062:	50 e4       	ldi	r21, 0x40	; 64
    3064:	c7 01       	movw	r24, r14
    3066:	b6 01       	movw	r22, r12
    3068:	0e 94 44 1a 	call	0x3488	; 0x3488 <__cmpsf2>
    306c:	88 23       	and	r24, r24
    306e:	64 f4       	brge	.+24     	; 0x3088 <main+0x45c>
    3070:	26 e6       	ldi	r18, 0x66	; 102
    3072:	36 e6       	ldi	r19, 0x66	; 102
    3074:	46 e0       	ldi	r20, 0x06	; 6
    3076:	50 e4       	ldi	r21, 0x40	; 64
    3078:	c7 01       	movw	r24, r14
    307a:	b6 01       	movw	r22, r12
    307c:	0e 94 93 1b 	call	0x3726	; 0x3726 <__gesf2>
    3080:	88 23       	and	r24, r24
    3082:	14 f0       	brlt	.+4      	; 0x3088 <main+0x45c>
				battery_half_marking();
    3084:	0e 94 ad 15 	call	0x2b5a	; 0x2b5a <_Z20battery_half_markingv>
			}
			if (bat < 2.1){			
    3088:	26 e6       	ldi	r18, 0x66	; 102
    308a:	36 e6       	ldi	r19, 0x66	; 102
    308c:	46 e0       	ldi	r20, 0x06	; 6
    308e:	50 e4       	ldi	r21, 0x40	; 64
    3090:	60 91 5c 01 	lds	r22, 0x015C
    3094:	70 91 5d 01 	lds	r23, 0x015D
    3098:	80 91 5e 01 	lds	r24, 0x015E
    309c:	90 91 5f 01 	lds	r25, 0x015F
    30a0:	0e 94 44 1a 	call	0x3488	; 0x3488 <__cmpsf2>
    30a4:	88 23       	and	r24, r24
    30a6:	14 f4       	brge	.+4      	; 0x30ac <main+0x480>
				battery_low_marking();
    30a8:	0e 94 cd 15 	call	0x2b9a	; 0x2b9a <_Z19battery_low_markingv>
			}
			//u8g_DrawStr(&u8g, 84, 63, battery);
			//u8g_DrawStr(&u8g, 120, 63, "V");
			
			for(uint8_t i=0;i<sizeof(PALE_INDEX_NUMBER);i++){
				if(UVgah < PALE_INDEX_NUMBER[i]){
    30ac:	c0 90 50 01 	lds	r12, 0x0150
    30b0:	d0 90 51 01 	lds	r13, 0x0151
    30b4:	e0 90 52 01 	lds	r14, 0x0152
    30b8:	f0 90 53 01 	lds	r15, 0x0153
    30bc:	20 e0       	ldi	r18, 0x00	; 0
    30be:	30 e0       	ldi	r19, 0x00	; 0
    30c0:	40 e4       	ldi	r20, 0x40	; 64
    30c2:	50 e4       	ldi	r21, 0x40	; 64
    30c4:	c7 01       	movw	r24, r14
    30c6:	b6 01       	movw	r22, r12
    30c8:	0e 94 44 1a 	call	0x3488	; 0x3488 <__cmpsf2>
    30cc:	88 23       	and	r24, r24
    30ce:	7c f1       	brlt	.+94     	; 0x312e <main+0x502>
    30d0:	20 e0       	ldi	r18, 0x00	; 0
    30d2:	30 e0       	ldi	r19, 0x00	; 0
    30d4:	40 ea       	ldi	r20, 0xA0	; 160
    30d6:	50 e4       	ldi	r21, 0x40	; 64
    30d8:	c7 01       	movw	r24, r14
    30da:	b6 01       	movw	r22, r12
    30dc:	0e 94 44 1a 	call	0x3488	; 0x3488 <__cmpsf2>
    30e0:	88 23       	and	r24, r24
    30e2:	fc f0       	brlt	.+62     	; 0x3122 <main+0x4f6>
    30e4:	20 e0       	ldi	r18, 0x00	; 0
    30e6:	30 e0       	ldi	r19, 0x00	; 0
    30e8:	40 ee       	ldi	r20, 0xE0	; 224
    30ea:	50 e4       	ldi	r21, 0x40	; 64
    30ec:	c7 01       	movw	r24, r14
    30ee:	b6 01       	movw	r22, r12
    30f0:	0e 94 44 1a 	call	0x3488	; 0x3488 <__cmpsf2>
    30f4:	88 23       	and	r24, r24
    30f6:	bc f0       	brlt	.+46     	; 0x3126 <main+0x4fa>
    30f8:	20 e0       	ldi	r18, 0x00	; 0
    30fa:	30 e0       	ldi	r19, 0x00	; 0
    30fc:	4e e7       	ldi	r20, 0x7E	; 126
    30fe:	53 e4       	ldi	r21, 0x43	; 67
    3100:	c7 01       	movw	r24, r14
    3102:	b6 01       	movw	r22, r12
    3104:	0e 94 44 1a 	call	0x3488	; 0x3488 <__cmpsf2>
    3108:	88 23       	and	r24, r24
    310a:	7c f0       	brlt	.+30     	; 0x312a <main+0x4fe>
    310c:	20 e0       	ldi	r18, 0x00	; 0
    310e:	30 e0       	ldi	r19, 0x00	; 0
    3110:	a9 01       	movw	r20, r18
    3112:	c7 01       	movw	r24, r14
    3114:	b6 01       	movw	r22, r12
    3116:	0e 94 44 1a 	call	0x3488	; 0x3488 <__cmpsf2>
    311a:	88 23       	and	r24, r24
    311c:	5c f4       	brge	.+22     	; 0x3134 <main+0x508>
				battery_low_marking();
			}
			//u8g_DrawStr(&u8g, 84, 63, battery);
			//u8g_DrawStr(&u8g, 120, 63, "V");
			
			for(uint8_t i=0;i<sizeof(PALE_INDEX_NUMBER);i++){
    311e:	80 2f       	mov	r24, r16
    3120:	07 c0       	rjmp	.+14     	; 0x3130 <main+0x504>
    3122:	81 2f       	mov	r24, r17
    3124:	05 c0       	rjmp	.+10     	; 0x3130 <main+0x504>
    3126:	87 2d       	mov	r24, r7
    3128:	03 c0       	rjmp	.+6      	; 0x3130 <main+0x504>
    312a:	8a 2d       	mov	r24, r10
    312c:	01 c0       	rjmp	.+2      	; 0x3130 <main+0x504>
    312e:	8b 2d       	mov	r24, r11
				if(UVgah < PALE_INDEX_NUMBER[i]){
					index=i;
    3130:	80 93 60 01 	sts	0x0160, r24
			//if(index >0){
			//	index--;
			//}
			
			
			intToStr(index,  UV_index, 3);
    3134:	80 91 60 01 	lds	r24, 0x0160
    3138:	43 e0       	ldi	r20, 0x03	; 3
    313a:	50 e0       	ldi	r21, 0x00	; 0
    313c:	be 01       	movw	r22, r28
    313e:	6b 5e       	subi	r22, 0xEB	; 235
    3140:	7f 4f       	sbci	r23, 0xFF	; 255
    3142:	90 e0       	ldi	r25, 0x00	; 0
    3144:	0e 94 ec 14 	call	0x29d8	; 0x29d8 <_Z8intToStriPci>
			
			//u8g_DrawStr(&u8g, index_marking_start, 63, UV_index);
			u8g_DrawStr(&u8g, index_marking_start, 63, PALE_INDEX_NAME[index]);
    3148:	e0 91 60 01 	lds	r30, 0x0160
    314c:	f0 e0       	ldi	r31, 0x00	; 0
    314e:	ee 0f       	add	r30, r30
    3150:	ff 1f       	adc	r31, r31
    3152:	e0 50       	subi	r30, 0x00	; 0
    3154:	ff 4f       	sbci	r31, 0xFF	; 255
    3156:	20 81       	ld	r18, Z
    3158:	31 81       	ldd	r19, Z+1	; 0x01
    315a:	4f e3       	ldi	r20, 0x3F	; 63
    315c:	60 e5       	ldi	r22, 0x50	; 80
    315e:	8d e7       	ldi	r24, 0x7D	; 125
    3160:	91 e0       	ldi	r25, 0x01	; 1
    3162:	0e 94 0a 20 	call	0x4014	; 0x4014 <u8g_DrawStr>
						
			
			u8g_SetFont(&u8g, u8g_font_fur17);
    3166:	64 e1       	ldi	r22, 0x14	; 20
    3168:	72 e0       	ldi	r23, 0x02	; 2
    316a:	8d e7       	ldi	r24, 0x7D	; 125
    316c:	91 e0       	ldi	r25, 0x01	; 1
    316e:	0e 94 92 20 	call	0x4124	; 0x4124 <u8g_SetFont>
						
			//display the current UV index
			
			u8g_DrawStr(&u8g, 10, 19, "UV index:");
    3172:	2c e1       	ldi	r18, 0x1C	; 28
    3174:	31 e0       	ldi	r19, 0x01	; 1
    3176:	43 e1       	ldi	r20, 0x13	; 19
    3178:	6a e0       	ldi	r22, 0x0A	; 10
    317a:	8d e7       	ldi	r24, 0x7D	; 125
    317c:	91 e0       	ldi	r25, 0x01	; 1
    317e:	0e 94 0a 20 	call	0x4014	; 0x4014 <u8g_DrawStr>
			
			if(UVgah<10){
    3182:	20 e0       	ldi	r18, 0x00	; 0
    3184:	30 e0       	ldi	r19, 0x00	; 0
    3186:	40 e2       	ldi	r20, 0x20	; 32
    3188:	51 e4       	ldi	r21, 0x41	; 65
    318a:	60 91 50 01 	lds	r22, 0x0150
    318e:	70 91 51 01 	lds	r23, 0x0151
    3192:	80 91 52 01 	lds	r24, 0x0152
    3196:	90 91 53 01 	lds	r25, 0x0153
    319a:	0e 94 44 1a 	call	0x3488	; 0x3488 <__cmpsf2>
    319e:	88 23       	and	r24, r24
    31a0:	4c f4       	brge	.+18     	; 0x31b4 <main+0x588>
				u8g_DrawStr(&u8g, 25, 44, UV_I);
    31a2:	9e 01       	movw	r18, r28
    31a4:	2f 5a       	subi	r18, 0xAF	; 175
    31a6:	3f 4f       	sbci	r19, 0xFF	; 255
    31a8:	4c e2       	ldi	r20, 0x2C	; 44
    31aa:	69 e1       	ldi	r22, 0x19	; 25
    31ac:	8d e7       	ldi	r24, 0x7D	; 125
    31ae:	91 e0       	ldi	r25, 0x01	; 1
    31b0:	0e 94 0a 20 	call	0x4014	; 0x4014 <u8g_DrawStr>
			}
			if(UVgah >=10 ){
    31b4:	20 e0       	ldi	r18, 0x00	; 0
    31b6:	30 e0       	ldi	r19, 0x00	; 0
    31b8:	40 e2       	ldi	r20, 0x20	; 32
    31ba:	51 e4       	ldi	r21, 0x41	; 65
    31bc:	60 91 50 01 	lds	r22, 0x0150
    31c0:	70 91 51 01 	lds	r23, 0x0151
    31c4:	80 91 52 01 	lds	r24, 0x0152
    31c8:	90 91 53 01 	lds	r25, 0x0153
    31cc:	0e 94 93 1b 	call	0x3726	; 0x3726 <__gesf2>
    31d0:	88 23       	and	r24, r24
    31d2:	4c f0       	brlt	.+18     	; 0x31e6 <main+0x5ba>
				u8g_DrawStr(&u8g, 12, 44, UV_I);
    31d4:	9e 01       	movw	r18, r28
    31d6:	2f 5a       	subi	r18, 0xAF	; 175
    31d8:	3f 4f       	sbci	r19, 0xFF	; 255
    31da:	4c e2       	ldi	r20, 0x2C	; 44
    31dc:	6c e0       	ldi	r22, 0x0C	; 12
    31de:	8d e7       	ldi	r24, 0x7D	; 125
    31e0:	91 e0       	ldi	r25, 0x01	; 1
    31e2:	0e 94 0a 20 	call	0x4014	; 0x4014 <u8g_DrawStr>
				
			}
			
			u8g_SetFont(&u8g, u8g_font_7x13);
    31e6:	63 ea       	ldi	r22, 0xA3	; 163
    31e8:	7c e1       	ldi	r23, 0x1C	; 28
    31ea:	8d e7       	ldi	r24, 0x7D	; 125
    31ec:	91 e0       	ldi	r25, 0x01	; 1
    31ee:	0e 94 92 20 	call	0x4124	; 0x4124 <u8g_SetFont>
				u8g_DrawStr(&u8g, 84, 50, UV_calc_total);
				u8g_DrawStr(&u8g, 100, 50, "W");
			}
			*/
	
		} while ( u8g_NextPage(&u8g) );
    31f2:	8d e7       	ldi	r24, 0x7D	; 125
    31f4:	91 e0       	ldi	r25, 0x01	; 1
    31f6:	0e 94 c2 21 	call	0x4384	; 0x4384 <u8g_NextPage>
		intToStr(error, UV_test, 3); //seconds
	 
		
		//printing to display
		u8g_FirstPage(&u8g);
		do
    31fa:	81 11       	cpse	r24, r1
    31fc:	e4 ce       	rjmp	.-568    	; 0x2fc6 <main+0x39a>
				u8g_DrawStr(&u8g, 100, 50, "W");
			}
			*/
	
		} while ( u8g_NextPage(&u8g) );
		u8g_Delay(200);
    31fe:	88 ec       	ldi	r24, 0xC8	; 200
    3200:	90 e0       	ldi	r25, 0x00	; 0
    3202:	0e 94 14 1e 	call	0x3c28	; 0x3c28 <u8g_Delay>
		}
    3206:	b7 cd       	rjmp	.-1170   	; 0x2d76 <main+0x14a>

00003208 <__vector_14>:


// interrupts with timer0 idea is to check battery voltages
// and also get the time
ISR (TIMER0_COMPA_vect)  //interrupts every 8ms
{
    3208:	1f 92       	push	r1
    320a:	0f 92       	push	r0
    320c:	0f b6       	in	r0, 0x3f	; 63
    320e:	0f 92       	push	r0
    3210:	11 24       	eor	r1, r1
    3212:	2f 93       	push	r18
    3214:	3f 93       	push	r19
    3216:	4f 93       	push	r20
    3218:	5f 93       	push	r21
    321a:	6f 93       	push	r22
    321c:	7f 93       	push	r23
    321e:	8f 93       	push	r24
    3220:	9f 93       	push	r25
    3222:	af 93       	push	r26
    3224:	bf 93       	push	r27
    3226:	ef 93       	push	r30
    3228:	ff 93       	push	r31

	
	timer_1s++;
    322a:	80 91 6d 01 	lds	r24, 0x016D
    322e:	90 91 6e 01 	lds	r25, 0x016E
    3232:	01 96       	adiw	r24, 0x01	; 1
    3234:	90 93 6e 01 	sts	0x016E, r25
    3238:	80 93 6d 01 	sts	0x016D, r24
	if(timer_1s >= 125)		//625*1.6ms=1s
    323c:	80 91 6d 01 	lds	r24, 0x016D
    3240:	90 91 6e 01 	lds	r25, 0x016E
    3244:	8d 37       	cpi	r24, 0x7D	; 125
    3246:	91 05       	cpc	r25, r1
    3248:	08 f4       	brcc	.+2      	; 0x324c <__vector_14+0x44>
    324a:	a3 c0       	rjmp	.+326    	; 0x3392 <__vector_14+0x18a>
	{
		cmd_pulse=1; //1 second has passed time to refresh display
    324c:	81 e0       	ldi	r24, 0x01	; 1
    324e:	80 93 3f 01 	sts	0x013F, r24
		timer_seconds++; //increase if under 59 sec
    3252:	80 91 65 01 	lds	r24, 0x0165
    3256:	90 91 66 01 	lds	r25, 0x0166
    325a:	01 96       	adiw	r24, 0x01	; 1
    325c:	90 93 66 01 	sts	0x0166, r25
    3260:	80 93 65 01 	sts	0x0165, r24
		
		timer_1s-=125;
    3264:	80 91 6d 01 	lds	r24, 0x016D
    3268:	90 91 6e 01 	lds	r25, 0x016E
    326c:	8d 57       	subi	r24, 0x7D	; 125
    326e:	91 09       	sbc	r25, r1
    3270:	90 93 6e 01 	sts	0x016E, r25
    3274:	80 93 6d 01 	sts	0x016D, r24
		if(timer_seconds > 59)
    3278:	80 91 65 01 	lds	r24, 0x0165
    327c:	90 91 66 01 	lds	r25, 0x0166
    3280:	cc 97       	sbiw	r24, 0x3c	; 60
    3282:	08 f4       	brcc	.+2      	; 0x3286 <__vector_14+0x7e>
    3284:	86 c0       	rjmp	.+268    	; 0x3392 <__vector_14+0x18a>
		{
			timer_seconds-=60; //zero if
    3286:	80 91 65 01 	lds	r24, 0x0165
    328a:	90 91 66 01 	lds	r25, 0x0166
    328e:	cc 97       	sbiw	r24, 0x3c	; 60
    3290:	90 93 66 01 	sts	0x0166, r25
    3294:	80 93 65 01 	sts	0x0165, r24
			timer_1min++;
    3298:	80 91 6b 01 	lds	r24, 0x016B
    329c:	90 91 6c 01 	lds	r25, 0x016C
    32a0:	01 96       	adiw	r24, 0x01	; 1
    32a2:	90 93 6c 01 	sts	0x016C, r25
    32a6:	80 93 6b 01 	sts	0x016B, r24
			timer_minutes++; //increase if under 59 min
    32aa:	80 91 63 01 	lds	r24, 0x0163
    32ae:	90 91 64 01 	lds	r25, 0x0164
    32b2:	01 96       	adiw	r24, 0x01	; 1
    32b4:	90 93 64 01 	sts	0x0164, r25
    32b8:	80 93 63 01 	sts	0x0163, r24
			if(timer_minutes > 59)
    32bc:	80 91 63 01 	lds	r24, 0x0163
    32c0:	90 91 64 01 	lds	r25, 0x0164
    32c4:	cc 97       	sbiw	r24, 0x3c	; 60
    32c6:	08 f1       	brcs	.+66     	; 0x330a <__vector_14+0x102>
			{
				timer_minutes-=60; //zero if
    32c8:	80 91 63 01 	lds	r24, 0x0163
    32cc:	90 91 64 01 	lds	r25, 0x0164
    32d0:	cc 97       	sbiw	r24, 0x3c	; 60
    32d2:	90 93 64 01 	sts	0x0164, r25
    32d6:	80 93 63 01 	sts	0x0163, r24
				timer_hours++;
    32da:	80 91 61 01 	lds	r24, 0x0161
    32de:	90 91 62 01 	lds	r25, 0x0162
    32e2:	01 96       	adiw	r24, 0x01	; 1
    32e4:	90 93 62 01 	sts	0x0162, r25
    32e8:	80 93 61 01 	sts	0x0161, r24
				if(timer_hours > 98) // no more than 2 digits for hours in display
    32ec:	80 91 61 01 	lds	r24, 0x0161
    32f0:	90 91 62 01 	lds	r25, 0x0162
    32f4:	83 36       	cpi	r24, 0x63	; 99
    32f6:	91 05       	cpc	r25, r1
    32f8:	20 f0       	brcs	.+8      	; 0x3302 <__vector_14+0xfa>
				{
					timer_hours=0; //zero the timer
    32fa:	10 92 62 01 	sts	0x0162, r1
    32fe:	10 92 61 01 	sts	0x0161, r1
				}
				
				//1hour reached
				timer_1h=0;
    3302:	10 92 6a 01 	sts	0x016A, r1
    3306:	10 92 69 01 	sts	0x0169, r1
				
			}
			
			battery_voltage_lvl=0;
    330a:	10 92 68 01 	sts	0x0168, r1
    330e:	10 92 67 01 	sts	0x0167, r1
    3312:	84 e0       	ldi	r24, 0x04	; 4
    3314:	90 e0       	ldi	r25, 0x00	; 0
			for(int i=0;i < OVERSAMPLING;i++ ){
				ADCSRA |= (1<<ADSC);
    3316:	ea e7       	ldi	r30, 0x7A	; 122
    3318:	f0 e0       	ldi	r31, 0x00	; 0
				while(ADCSRA & _BV(ADSC));    // wait until conversion is complete
				battery_voltage_lvl+=ADC;
    331a:	a8 e7       	ldi	r26, 0x78	; 120
    331c:	b0 e0       	ldi	r27, 0x00	; 0
				
			}
			
			battery_voltage_lvl=0;
			for(int i=0;i < OVERSAMPLING;i++ ){
				ADCSRA |= (1<<ADSC);
    331e:	20 81       	ld	r18, Z
    3320:	20 64       	ori	r18, 0x40	; 64
    3322:	20 83       	st	Z, r18
				while(ADCSRA & _BV(ADSC));    // wait until conversion is complete
    3324:	20 81       	ld	r18, Z
    3326:	26 fd       	sbrc	r18, 6
    3328:	fd cf       	rjmp	.-6      	; 0x3324 <__vector_14+0x11c>
				battery_voltage_lvl+=ADC;
    332a:	2d 91       	ld	r18, X+
    332c:	3c 91       	ld	r19, X
    332e:	11 97       	sbiw	r26, 0x01	; 1
    3330:	40 91 67 01 	lds	r20, 0x0167
    3334:	50 91 68 01 	lds	r21, 0x0168
    3338:	24 0f       	add	r18, r20
    333a:	35 1f       	adc	r19, r21
    333c:	30 93 68 01 	sts	0x0168, r19
    3340:	20 93 67 01 	sts	0x0167, r18
    3344:	01 97       	sbiw	r24, 0x01	; 1
				timer_1h=0;
				
			}
			
			battery_voltage_lvl=0;
			for(int i=0;i < OVERSAMPLING;i++ ){
    3346:	00 97       	sbiw	r24, 0x00	; 0
    3348:	51 f7       	brne	.-44     	; 0x331e <__vector_14+0x116>
				ADCSRA |= (1<<ADSC);
				while(ADCSRA & _BV(ADSC));    // wait until conversion is complete
				battery_voltage_lvl+=ADC;
			}
			battery_voltage_lvl=round(battery_voltage_lvl/OVERSAMPLING);
    334a:	60 91 67 01 	lds	r22, 0x0167
    334e:	70 91 68 01 	lds	r23, 0x0168
    3352:	76 95       	lsr	r23
    3354:	67 95       	ror	r22
    3356:	76 95       	lsr	r23
    3358:	67 95       	ror	r22
    335a:	80 e0       	ldi	r24, 0x00	; 0
    335c:	90 e0       	ldi	r25, 0x00	; 0
    335e:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <__floatunsisf>
    3362:	0e 94 46 1c 	call	0x388c	; 0x388c <round>
    3366:	0e 94 b5 1a 	call	0x356a	; 0x356a <__fixunssfsi>
    336a:	70 93 68 01 	sts	0x0168, r23
    336e:	60 93 67 01 	sts	0x0167, r22
			batterylevelcheck = 1;
    3372:	81 e0       	ldi	r24, 0x01	; 1
    3374:	80 93 3e 01 	sts	0x013E, r24
			timer_1min=0;				  // set minute timer to 0
    3378:	10 92 6c 01 	sts	0x016C, r1
    337c:	10 92 6b 01 	sts	0x016B, r1

			
			
			timer_1h++;
    3380:	80 91 69 01 	lds	r24, 0x0169
    3384:	90 91 6a 01 	lds	r25, 0x016A
    3388:	01 96       	adiw	r24, 0x01	; 1
    338a:	90 93 6a 01 	sts	0x016A, r25
    338e:	80 93 69 01 	sts	0x0169, r24
		timer_1h=0;
	}
	timer_1h++;
	*/

}
    3392:	ff 91       	pop	r31
    3394:	ef 91       	pop	r30
    3396:	bf 91       	pop	r27
    3398:	af 91       	pop	r26
    339a:	9f 91       	pop	r25
    339c:	8f 91       	pop	r24
    339e:	7f 91       	pop	r23
    33a0:	6f 91       	pop	r22
    33a2:	5f 91       	pop	r21
    33a4:	4f 91       	pop	r20
    33a6:	3f 91       	pop	r19
    33a8:	2f 91       	pop	r18
    33aa:	0f 90       	pop	r0
    33ac:	0f be       	out	0x3f, r0	; 63
    33ae:	0f 90       	pop	r0
    33b0:	1f 90       	pop	r1
    33b2:	18 95       	reti

000033b4 <_GLOBAL__sub_I_u8g>:
u8g_t u8g;

#define OVERSAMPLING 4
uint8_t error=0;
#include "VEML6075.c"
VEML6075 veml6075 = VEML6075();
    33b4:	81 e7       	ldi	r24, 0x71	; 113
    33b6:	91 e0       	ldi	r25, 0x01	; 1
    33b8:	0e 94 b3 12 	call	0x2566	; 0x2566 <_ZN8VEML6075C1Ev>
    33bc:	08 95       	ret

000033be <__subsf3>:
    33be:	50 58       	subi	r21, 0x80	; 128

000033c0 <__addsf3>:
    33c0:	bb 27       	eor	r27, r27
    33c2:	aa 27       	eor	r26, r26
    33c4:	0e d0       	rcall	.+28     	; 0x33e2 <__addsf3x>
    33c6:	75 c1       	rjmp	.+746    	; 0x36b2 <__fp_round>
    33c8:	66 d1       	rcall	.+716    	; 0x3696 <__fp_pscA>
    33ca:	30 f0       	brcs	.+12     	; 0x33d8 <__addsf3+0x18>
    33cc:	6b d1       	rcall	.+726    	; 0x36a4 <__fp_pscB>
    33ce:	20 f0       	brcs	.+8      	; 0x33d8 <__addsf3+0x18>
    33d0:	31 f4       	brne	.+12     	; 0x33de <__addsf3+0x1e>
    33d2:	9f 3f       	cpi	r25, 0xFF	; 255
    33d4:	11 f4       	brne	.+4      	; 0x33da <__addsf3+0x1a>
    33d6:	1e f4       	brtc	.+6      	; 0x33de <__addsf3+0x1e>
    33d8:	5b c1       	rjmp	.+694    	; 0x3690 <__fp_nan>
    33da:	0e f4       	brtc	.+2      	; 0x33de <__addsf3+0x1e>
    33dc:	e0 95       	com	r30
    33de:	e7 fb       	bst	r30, 7
    33e0:	51 c1       	rjmp	.+674    	; 0x3684 <__fp_inf>

000033e2 <__addsf3x>:
    33e2:	e9 2f       	mov	r30, r25
    33e4:	77 d1       	rcall	.+750    	; 0x36d4 <__fp_split3>
    33e6:	80 f3       	brcs	.-32     	; 0x33c8 <__addsf3+0x8>
    33e8:	ba 17       	cp	r27, r26
    33ea:	62 07       	cpc	r22, r18
    33ec:	73 07       	cpc	r23, r19
    33ee:	84 07       	cpc	r24, r20
    33f0:	95 07       	cpc	r25, r21
    33f2:	18 f0       	brcs	.+6      	; 0x33fa <__addsf3x+0x18>
    33f4:	71 f4       	brne	.+28     	; 0x3412 <__addsf3x+0x30>
    33f6:	9e f5       	brtc	.+102    	; 0x345e <__addsf3x+0x7c>
    33f8:	8f c1       	rjmp	.+798    	; 0x3718 <__fp_zero>
    33fa:	0e f4       	brtc	.+2      	; 0x33fe <__addsf3x+0x1c>
    33fc:	e0 95       	com	r30
    33fe:	0b 2e       	mov	r0, r27
    3400:	ba 2f       	mov	r27, r26
    3402:	a0 2d       	mov	r26, r0
    3404:	0b 01       	movw	r0, r22
    3406:	b9 01       	movw	r22, r18
    3408:	90 01       	movw	r18, r0
    340a:	0c 01       	movw	r0, r24
    340c:	ca 01       	movw	r24, r20
    340e:	a0 01       	movw	r20, r0
    3410:	11 24       	eor	r1, r1
    3412:	ff 27       	eor	r31, r31
    3414:	59 1b       	sub	r21, r25
    3416:	99 f0       	breq	.+38     	; 0x343e <__addsf3x+0x5c>
    3418:	59 3f       	cpi	r21, 0xF9	; 249
    341a:	50 f4       	brcc	.+20     	; 0x3430 <__addsf3x+0x4e>
    341c:	50 3e       	cpi	r21, 0xE0	; 224
    341e:	68 f1       	brcs	.+90     	; 0x347a <__addsf3x+0x98>
    3420:	1a 16       	cp	r1, r26
    3422:	f0 40       	sbci	r31, 0x00	; 0
    3424:	a2 2f       	mov	r26, r18
    3426:	23 2f       	mov	r18, r19
    3428:	34 2f       	mov	r19, r20
    342a:	44 27       	eor	r20, r20
    342c:	58 5f       	subi	r21, 0xF8	; 248
    342e:	f3 cf       	rjmp	.-26     	; 0x3416 <__addsf3x+0x34>
    3430:	46 95       	lsr	r20
    3432:	37 95       	ror	r19
    3434:	27 95       	ror	r18
    3436:	a7 95       	ror	r26
    3438:	f0 40       	sbci	r31, 0x00	; 0
    343a:	53 95       	inc	r21
    343c:	c9 f7       	brne	.-14     	; 0x3430 <__addsf3x+0x4e>
    343e:	7e f4       	brtc	.+30     	; 0x345e <__addsf3x+0x7c>
    3440:	1f 16       	cp	r1, r31
    3442:	ba 0b       	sbc	r27, r26
    3444:	62 0b       	sbc	r22, r18
    3446:	73 0b       	sbc	r23, r19
    3448:	84 0b       	sbc	r24, r20
    344a:	ba f0       	brmi	.+46     	; 0x347a <__addsf3x+0x98>
    344c:	91 50       	subi	r25, 0x01	; 1
    344e:	a1 f0       	breq	.+40     	; 0x3478 <__addsf3x+0x96>
    3450:	ff 0f       	add	r31, r31
    3452:	bb 1f       	adc	r27, r27
    3454:	66 1f       	adc	r22, r22
    3456:	77 1f       	adc	r23, r23
    3458:	88 1f       	adc	r24, r24
    345a:	c2 f7       	brpl	.-16     	; 0x344c <__addsf3x+0x6a>
    345c:	0e c0       	rjmp	.+28     	; 0x347a <__addsf3x+0x98>
    345e:	ba 0f       	add	r27, r26
    3460:	62 1f       	adc	r22, r18
    3462:	73 1f       	adc	r23, r19
    3464:	84 1f       	adc	r24, r20
    3466:	48 f4       	brcc	.+18     	; 0x347a <__addsf3x+0x98>
    3468:	87 95       	ror	r24
    346a:	77 95       	ror	r23
    346c:	67 95       	ror	r22
    346e:	b7 95       	ror	r27
    3470:	f7 95       	ror	r31
    3472:	9e 3f       	cpi	r25, 0xFE	; 254
    3474:	08 f0       	brcs	.+2      	; 0x3478 <__addsf3x+0x96>
    3476:	b3 cf       	rjmp	.-154    	; 0x33de <__addsf3+0x1e>
    3478:	93 95       	inc	r25
    347a:	88 0f       	add	r24, r24
    347c:	08 f0       	brcs	.+2      	; 0x3480 <__addsf3x+0x9e>
    347e:	99 27       	eor	r25, r25
    3480:	ee 0f       	add	r30, r30
    3482:	97 95       	ror	r25
    3484:	87 95       	ror	r24
    3486:	08 95       	ret

00003488 <__cmpsf2>:
    3488:	d9 d0       	rcall	.+434    	; 0x363c <__fp_cmp>
    348a:	08 f4       	brcc	.+2      	; 0x348e <__cmpsf2+0x6>
    348c:	81 e0       	ldi	r24, 0x01	; 1
    348e:	08 95       	ret

00003490 <__divsf3>:
    3490:	0c d0       	rcall	.+24     	; 0x34aa <__divsf3x>
    3492:	0f c1       	rjmp	.+542    	; 0x36b2 <__fp_round>
    3494:	07 d1       	rcall	.+526    	; 0x36a4 <__fp_pscB>
    3496:	40 f0       	brcs	.+16     	; 0x34a8 <__divsf3+0x18>
    3498:	fe d0       	rcall	.+508    	; 0x3696 <__fp_pscA>
    349a:	30 f0       	brcs	.+12     	; 0x34a8 <__divsf3+0x18>
    349c:	21 f4       	brne	.+8      	; 0x34a6 <__divsf3+0x16>
    349e:	5f 3f       	cpi	r21, 0xFF	; 255
    34a0:	19 f0       	breq	.+6      	; 0x34a8 <__divsf3+0x18>
    34a2:	f0 c0       	rjmp	.+480    	; 0x3684 <__fp_inf>
    34a4:	51 11       	cpse	r21, r1
    34a6:	39 c1       	rjmp	.+626    	; 0x371a <__fp_szero>
    34a8:	f3 c0       	rjmp	.+486    	; 0x3690 <__fp_nan>

000034aa <__divsf3x>:
    34aa:	14 d1       	rcall	.+552    	; 0x36d4 <__fp_split3>
    34ac:	98 f3       	brcs	.-26     	; 0x3494 <__divsf3+0x4>

000034ae <__divsf3_pse>:
    34ae:	99 23       	and	r25, r25
    34b0:	c9 f3       	breq	.-14     	; 0x34a4 <__divsf3+0x14>
    34b2:	55 23       	and	r21, r21
    34b4:	b1 f3       	breq	.-20     	; 0x34a2 <__divsf3+0x12>
    34b6:	95 1b       	sub	r25, r21
    34b8:	55 0b       	sbc	r21, r21
    34ba:	bb 27       	eor	r27, r27
    34bc:	aa 27       	eor	r26, r26
    34be:	62 17       	cp	r22, r18
    34c0:	73 07       	cpc	r23, r19
    34c2:	84 07       	cpc	r24, r20
    34c4:	38 f0       	brcs	.+14     	; 0x34d4 <__divsf3_pse+0x26>
    34c6:	9f 5f       	subi	r25, 0xFF	; 255
    34c8:	5f 4f       	sbci	r21, 0xFF	; 255
    34ca:	22 0f       	add	r18, r18
    34cc:	33 1f       	adc	r19, r19
    34ce:	44 1f       	adc	r20, r20
    34d0:	aa 1f       	adc	r26, r26
    34d2:	a9 f3       	breq	.-22     	; 0x34be <__divsf3_pse+0x10>
    34d4:	33 d0       	rcall	.+102    	; 0x353c <__divsf3_pse+0x8e>
    34d6:	0e 2e       	mov	r0, r30
    34d8:	3a f0       	brmi	.+14     	; 0x34e8 <__divsf3_pse+0x3a>
    34da:	e0 e8       	ldi	r30, 0x80	; 128
    34dc:	30 d0       	rcall	.+96     	; 0x353e <__divsf3_pse+0x90>
    34de:	91 50       	subi	r25, 0x01	; 1
    34e0:	50 40       	sbci	r21, 0x00	; 0
    34e2:	e6 95       	lsr	r30
    34e4:	00 1c       	adc	r0, r0
    34e6:	ca f7       	brpl	.-14     	; 0x34da <__divsf3_pse+0x2c>
    34e8:	29 d0       	rcall	.+82     	; 0x353c <__divsf3_pse+0x8e>
    34ea:	fe 2f       	mov	r31, r30
    34ec:	27 d0       	rcall	.+78     	; 0x353c <__divsf3_pse+0x8e>
    34ee:	66 0f       	add	r22, r22
    34f0:	77 1f       	adc	r23, r23
    34f2:	88 1f       	adc	r24, r24
    34f4:	bb 1f       	adc	r27, r27
    34f6:	26 17       	cp	r18, r22
    34f8:	37 07       	cpc	r19, r23
    34fa:	48 07       	cpc	r20, r24
    34fc:	ab 07       	cpc	r26, r27
    34fe:	b0 e8       	ldi	r27, 0x80	; 128
    3500:	09 f0       	breq	.+2      	; 0x3504 <__divsf3_pse+0x56>
    3502:	bb 0b       	sbc	r27, r27
    3504:	80 2d       	mov	r24, r0
    3506:	bf 01       	movw	r22, r30
    3508:	ff 27       	eor	r31, r31
    350a:	93 58       	subi	r25, 0x83	; 131
    350c:	5f 4f       	sbci	r21, 0xFF	; 255
    350e:	2a f0       	brmi	.+10     	; 0x351a <__divsf3_pse+0x6c>
    3510:	9e 3f       	cpi	r25, 0xFE	; 254
    3512:	51 05       	cpc	r21, r1
    3514:	68 f0       	brcs	.+26     	; 0x3530 <__divsf3_pse+0x82>
    3516:	b6 c0       	rjmp	.+364    	; 0x3684 <__fp_inf>
    3518:	00 c1       	rjmp	.+512    	; 0x371a <__fp_szero>
    351a:	5f 3f       	cpi	r21, 0xFF	; 255
    351c:	ec f3       	brlt	.-6      	; 0x3518 <__divsf3_pse+0x6a>
    351e:	98 3e       	cpi	r25, 0xE8	; 232
    3520:	dc f3       	brlt	.-10     	; 0x3518 <__divsf3_pse+0x6a>
    3522:	86 95       	lsr	r24
    3524:	77 95       	ror	r23
    3526:	67 95       	ror	r22
    3528:	b7 95       	ror	r27
    352a:	f7 95       	ror	r31
    352c:	9f 5f       	subi	r25, 0xFF	; 255
    352e:	c9 f7       	brne	.-14     	; 0x3522 <__divsf3_pse+0x74>
    3530:	88 0f       	add	r24, r24
    3532:	91 1d       	adc	r25, r1
    3534:	96 95       	lsr	r25
    3536:	87 95       	ror	r24
    3538:	97 f9       	bld	r25, 7
    353a:	08 95       	ret
    353c:	e1 e0       	ldi	r30, 0x01	; 1
    353e:	66 0f       	add	r22, r22
    3540:	77 1f       	adc	r23, r23
    3542:	88 1f       	adc	r24, r24
    3544:	bb 1f       	adc	r27, r27
    3546:	62 17       	cp	r22, r18
    3548:	73 07       	cpc	r23, r19
    354a:	84 07       	cpc	r24, r20
    354c:	ba 07       	cpc	r27, r26
    354e:	20 f0       	brcs	.+8      	; 0x3558 <__divsf3_pse+0xaa>
    3550:	62 1b       	sub	r22, r18
    3552:	73 0b       	sbc	r23, r19
    3554:	84 0b       	sbc	r24, r20
    3556:	ba 0b       	sbc	r27, r26
    3558:	ee 1f       	adc	r30, r30
    355a:	88 f7       	brcc	.-30     	; 0x353e <__divsf3_pse+0x90>
    355c:	e0 95       	com	r30
    355e:	08 95       	ret

00003560 <__fixsfsi>:
    3560:	04 d0       	rcall	.+8      	; 0x356a <__fixunssfsi>
    3562:	68 94       	set
    3564:	b1 11       	cpse	r27, r1
    3566:	d9 c0       	rjmp	.+434    	; 0x371a <__fp_szero>
    3568:	08 95       	ret

0000356a <__fixunssfsi>:
    356a:	bc d0       	rcall	.+376    	; 0x36e4 <__fp_splitA>
    356c:	88 f0       	brcs	.+34     	; 0x3590 <__fixunssfsi+0x26>
    356e:	9f 57       	subi	r25, 0x7F	; 127
    3570:	90 f0       	brcs	.+36     	; 0x3596 <__fixunssfsi+0x2c>
    3572:	b9 2f       	mov	r27, r25
    3574:	99 27       	eor	r25, r25
    3576:	b7 51       	subi	r27, 0x17	; 23
    3578:	a0 f0       	brcs	.+40     	; 0x35a2 <__fixunssfsi+0x38>
    357a:	d1 f0       	breq	.+52     	; 0x35b0 <__fixunssfsi+0x46>
    357c:	66 0f       	add	r22, r22
    357e:	77 1f       	adc	r23, r23
    3580:	88 1f       	adc	r24, r24
    3582:	99 1f       	adc	r25, r25
    3584:	1a f0       	brmi	.+6      	; 0x358c <__fixunssfsi+0x22>
    3586:	ba 95       	dec	r27
    3588:	c9 f7       	brne	.-14     	; 0x357c <__fixunssfsi+0x12>
    358a:	12 c0       	rjmp	.+36     	; 0x35b0 <__fixunssfsi+0x46>
    358c:	b1 30       	cpi	r27, 0x01	; 1
    358e:	81 f0       	breq	.+32     	; 0x35b0 <__fixunssfsi+0x46>
    3590:	c3 d0       	rcall	.+390    	; 0x3718 <__fp_zero>
    3592:	b1 e0       	ldi	r27, 0x01	; 1
    3594:	08 95       	ret
    3596:	c0 c0       	rjmp	.+384    	; 0x3718 <__fp_zero>
    3598:	67 2f       	mov	r22, r23
    359a:	78 2f       	mov	r23, r24
    359c:	88 27       	eor	r24, r24
    359e:	b8 5f       	subi	r27, 0xF8	; 248
    35a0:	39 f0       	breq	.+14     	; 0x35b0 <__fixunssfsi+0x46>
    35a2:	b9 3f       	cpi	r27, 0xF9	; 249
    35a4:	cc f3       	brlt	.-14     	; 0x3598 <__fixunssfsi+0x2e>
    35a6:	86 95       	lsr	r24
    35a8:	77 95       	ror	r23
    35aa:	67 95       	ror	r22
    35ac:	b3 95       	inc	r27
    35ae:	d9 f7       	brne	.-10     	; 0x35a6 <__fixunssfsi+0x3c>
    35b0:	3e f4       	brtc	.+14     	; 0x35c0 <__fixunssfsi+0x56>
    35b2:	90 95       	com	r25
    35b4:	80 95       	com	r24
    35b6:	70 95       	com	r23
    35b8:	61 95       	neg	r22
    35ba:	7f 4f       	sbci	r23, 0xFF	; 255
    35bc:	8f 4f       	sbci	r24, 0xFF	; 255
    35be:	9f 4f       	sbci	r25, 0xFF	; 255
    35c0:	08 95       	ret

000035c2 <__floatunsisf>:
    35c2:	e8 94       	clt
    35c4:	09 c0       	rjmp	.+18     	; 0x35d8 <__floatsisf+0x12>

000035c6 <__floatsisf>:
    35c6:	97 fb       	bst	r25, 7
    35c8:	3e f4       	brtc	.+14     	; 0x35d8 <__floatsisf+0x12>
    35ca:	90 95       	com	r25
    35cc:	80 95       	com	r24
    35ce:	70 95       	com	r23
    35d0:	61 95       	neg	r22
    35d2:	7f 4f       	sbci	r23, 0xFF	; 255
    35d4:	8f 4f       	sbci	r24, 0xFF	; 255
    35d6:	9f 4f       	sbci	r25, 0xFF	; 255
    35d8:	99 23       	and	r25, r25
    35da:	a9 f0       	breq	.+42     	; 0x3606 <__floatsisf+0x40>
    35dc:	f9 2f       	mov	r31, r25
    35de:	96 e9       	ldi	r25, 0x96	; 150
    35e0:	bb 27       	eor	r27, r27
    35e2:	93 95       	inc	r25
    35e4:	f6 95       	lsr	r31
    35e6:	87 95       	ror	r24
    35e8:	77 95       	ror	r23
    35ea:	67 95       	ror	r22
    35ec:	b7 95       	ror	r27
    35ee:	f1 11       	cpse	r31, r1
    35f0:	f8 cf       	rjmp	.-16     	; 0x35e2 <__floatsisf+0x1c>
    35f2:	fa f4       	brpl	.+62     	; 0x3632 <__floatsisf+0x6c>
    35f4:	bb 0f       	add	r27, r27
    35f6:	11 f4       	brne	.+4      	; 0x35fc <__floatsisf+0x36>
    35f8:	60 ff       	sbrs	r22, 0
    35fa:	1b c0       	rjmp	.+54     	; 0x3632 <__floatsisf+0x6c>
    35fc:	6f 5f       	subi	r22, 0xFF	; 255
    35fe:	7f 4f       	sbci	r23, 0xFF	; 255
    3600:	8f 4f       	sbci	r24, 0xFF	; 255
    3602:	9f 4f       	sbci	r25, 0xFF	; 255
    3604:	16 c0       	rjmp	.+44     	; 0x3632 <__floatsisf+0x6c>
    3606:	88 23       	and	r24, r24
    3608:	11 f0       	breq	.+4      	; 0x360e <__floatsisf+0x48>
    360a:	96 e9       	ldi	r25, 0x96	; 150
    360c:	11 c0       	rjmp	.+34     	; 0x3630 <__floatsisf+0x6a>
    360e:	77 23       	and	r23, r23
    3610:	21 f0       	breq	.+8      	; 0x361a <__floatsisf+0x54>
    3612:	9e e8       	ldi	r25, 0x8E	; 142
    3614:	87 2f       	mov	r24, r23
    3616:	76 2f       	mov	r23, r22
    3618:	05 c0       	rjmp	.+10     	; 0x3624 <__floatsisf+0x5e>
    361a:	66 23       	and	r22, r22
    361c:	71 f0       	breq	.+28     	; 0x363a <__floatsisf+0x74>
    361e:	96 e8       	ldi	r25, 0x86	; 134
    3620:	86 2f       	mov	r24, r22
    3622:	70 e0       	ldi	r23, 0x00	; 0
    3624:	60 e0       	ldi	r22, 0x00	; 0
    3626:	2a f0       	brmi	.+10     	; 0x3632 <__floatsisf+0x6c>
    3628:	9a 95       	dec	r25
    362a:	66 0f       	add	r22, r22
    362c:	77 1f       	adc	r23, r23
    362e:	88 1f       	adc	r24, r24
    3630:	da f7       	brpl	.-10     	; 0x3628 <__floatsisf+0x62>
    3632:	88 0f       	add	r24, r24
    3634:	96 95       	lsr	r25
    3636:	87 95       	ror	r24
    3638:	97 f9       	bld	r25, 7
    363a:	08 95       	ret

0000363c <__fp_cmp>:
    363c:	99 0f       	add	r25, r25
    363e:	00 08       	sbc	r0, r0
    3640:	55 0f       	add	r21, r21
    3642:	aa 0b       	sbc	r26, r26
    3644:	e0 e8       	ldi	r30, 0x80	; 128
    3646:	fe ef       	ldi	r31, 0xFE	; 254
    3648:	16 16       	cp	r1, r22
    364a:	17 06       	cpc	r1, r23
    364c:	e8 07       	cpc	r30, r24
    364e:	f9 07       	cpc	r31, r25
    3650:	c0 f0       	brcs	.+48     	; 0x3682 <__fp_cmp+0x46>
    3652:	12 16       	cp	r1, r18
    3654:	13 06       	cpc	r1, r19
    3656:	e4 07       	cpc	r30, r20
    3658:	f5 07       	cpc	r31, r21
    365a:	98 f0       	brcs	.+38     	; 0x3682 <__fp_cmp+0x46>
    365c:	62 1b       	sub	r22, r18
    365e:	73 0b       	sbc	r23, r19
    3660:	84 0b       	sbc	r24, r20
    3662:	95 0b       	sbc	r25, r21
    3664:	39 f4       	brne	.+14     	; 0x3674 <__fp_cmp+0x38>
    3666:	0a 26       	eor	r0, r26
    3668:	61 f0       	breq	.+24     	; 0x3682 <__fp_cmp+0x46>
    366a:	23 2b       	or	r18, r19
    366c:	24 2b       	or	r18, r20
    366e:	25 2b       	or	r18, r21
    3670:	21 f4       	brne	.+8      	; 0x367a <__fp_cmp+0x3e>
    3672:	08 95       	ret
    3674:	0a 26       	eor	r0, r26
    3676:	09 f4       	brne	.+2      	; 0x367a <__fp_cmp+0x3e>
    3678:	a1 40       	sbci	r26, 0x01	; 1
    367a:	a6 95       	lsr	r26
    367c:	8f ef       	ldi	r24, 0xFF	; 255
    367e:	81 1d       	adc	r24, r1
    3680:	81 1d       	adc	r24, r1
    3682:	08 95       	ret

00003684 <__fp_inf>:
    3684:	97 f9       	bld	r25, 7
    3686:	9f 67       	ori	r25, 0x7F	; 127
    3688:	80 e8       	ldi	r24, 0x80	; 128
    368a:	70 e0       	ldi	r23, 0x00	; 0
    368c:	60 e0       	ldi	r22, 0x00	; 0
    368e:	08 95       	ret

00003690 <__fp_nan>:
    3690:	9f ef       	ldi	r25, 0xFF	; 255
    3692:	80 ec       	ldi	r24, 0xC0	; 192
    3694:	08 95       	ret

00003696 <__fp_pscA>:
    3696:	00 24       	eor	r0, r0
    3698:	0a 94       	dec	r0
    369a:	16 16       	cp	r1, r22
    369c:	17 06       	cpc	r1, r23
    369e:	18 06       	cpc	r1, r24
    36a0:	09 06       	cpc	r0, r25
    36a2:	08 95       	ret

000036a4 <__fp_pscB>:
    36a4:	00 24       	eor	r0, r0
    36a6:	0a 94       	dec	r0
    36a8:	12 16       	cp	r1, r18
    36aa:	13 06       	cpc	r1, r19
    36ac:	14 06       	cpc	r1, r20
    36ae:	05 06       	cpc	r0, r21
    36b0:	08 95       	ret

000036b2 <__fp_round>:
    36b2:	09 2e       	mov	r0, r25
    36b4:	03 94       	inc	r0
    36b6:	00 0c       	add	r0, r0
    36b8:	11 f4       	brne	.+4      	; 0x36be <__fp_round+0xc>
    36ba:	88 23       	and	r24, r24
    36bc:	52 f0       	brmi	.+20     	; 0x36d2 <__fp_round+0x20>
    36be:	bb 0f       	add	r27, r27
    36c0:	40 f4       	brcc	.+16     	; 0x36d2 <__fp_round+0x20>
    36c2:	bf 2b       	or	r27, r31
    36c4:	11 f4       	brne	.+4      	; 0x36ca <__fp_round+0x18>
    36c6:	60 ff       	sbrs	r22, 0
    36c8:	04 c0       	rjmp	.+8      	; 0x36d2 <__fp_round+0x20>
    36ca:	6f 5f       	subi	r22, 0xFF	; 255
    36cc:	7f 4f       	sbci	r23, 0xFF	; 255
    36ce:	8f 4f       	sbci	r24, 0xFF	; 255
    36d0:	9f 4f       	sbci	r25, 0xFF	; 255
    36d2:	08 95       	ret

000036d4 <__fp_split3>:
    36d4:	57 fd       	sbrc	r21, 7
    36d6:	90 58       	subi	r25, 0x80	; 128
    36d8:	44 0f       	add	r20, r20
    36da:	55 1f       	adc	r21, r21
    36dc:	59 f0       	breq	.+22     	; 0x36f4 <__fp_splitA+0x10>
    36de:	5f 3f       	cpi	r21, 0xFF	; 255
    36e0:	71 f0       	breq	.+28     	; 0x36fe <__fp_splitA+0x1a>
    36e2:	47 95       	ror	r20

000036e4 <__fp_splitA>:
    36e4:	88 0f       	add	r24, r24
    36e6:	97 fb       	bst	r25, 7
    36e8:	99 1f       	adc	r25, r25
    36ea:	61 f0       	breq	.+24     	; 0x3704 <__fp_splitA+0x20>
    36ec:	9f 3f       	cpi	r25, 0xFF	; 255
    36ee:	79 f0       	breq	.+30     	; 0x370e <__fp_splitA+0x2a>
    36f0:	87 95       	ror	r24
    36f2:	08 95       	ret
    36f4:	12 16       	cp	r1, r18
    36f6:	13 06       	cpc	r1, r19
    36f8:	14 06       	cpc	r1, r20
    36fa:	55 1f       	adc	r21, r21
    36fc:	f2 cf       	rjmp	.-28     	; 0x36e2 <__fp_split3+0xe>
    36fe:	46 95       	lsr	r20
    3700:	f1 df       	rcall	.-30     	; 0x36e4 <__fp_splitA>
    3702:	08 c0       	rjmp	.+16     	; 0x3714 <__fp_splitA+0x30>
    3704:	16 16       	cp	r1, r22
    3706:	17 06       	cpc	r1, r23
    3708:	18 06       	cpc	r1, r24
    370a:	99 1f       	adc	r25, r25
    370c:	f1 cf       	rjmp	.-30     	; 0x36f0 <__fp_splitA+0xc>
    370e:	86 95       	lsr	r24
    3710:	71 05       	cpc	r23, r1
    3712:	61 05       	cpc	r22, r1
    3714:	08 94       	sec
    3716:	08 95       	ret

00003718 <__fp_zero>:
    3718:	e8 94       	clt

0000371a <__fp_szero>:
    371a:	bb 27       	eor	r27, r27
    371c:	66 27       	eor	r22, r22
    371e:	77 27       	eor	r23, r23
    3720:	cb 01       	movw	r24, r22
    3722:	97 f9       	bld	r25, 7
    3724:	08 95       	ret

00003726 <__gesf2>:
    3726:	8a df       	rcall	.-236    	; 0x363c <__fp_cmp>
    3728:	08 f4       	brcc	.+2      	; 0x372c <__gesf2+0x6>
    372a:	8f ef       	ldi	r24, 0xFF	; 255
    372c:	08 95       	ret

0000372e <__mulsf3>:
    372e:	0b d0       	rcall	.+22     	; 0x3746 <__mulsf3x>
    3730:	c0 cf       	rjmp	.-128    	; 0x36b2 <__fp_round>
    3732:	b1 df       	rcall	.-158    	; 0x3696 <__fp_pscA>
    3734:	28 f0       	brcs	.+10     	; 0x3740 <__mulsf3+0x12>
    3736:	b6 df       	rcall	.-148    	; 0x36a4 <__fp_pscB>
    3738:	18 f0       	brcs	.+6      	; 0x3740 <__mulsf3+0x12>
    373a:	95 23       	and	r25, r21
    373c:	09 f0       	breq	.+2      	; 0x3740 <__mulsf3+0x12>
    373e:	a2 cf       	rjmp	.-188    	; 0x3684 <__fp_inf>
    3740:	a7 cf       	rjmp	.-178    	; 0x3690 <__fp_nan>
    3742:	11 24       	eor	r1, r1
    3744:	ea cf       	rjmp	.-44     	; 0x371a <__fp_szero>

00003746 <__mulsf3x>:
    3746:	c6 df       	rcall	.-116    	; 0x36d4 <__fp_split3>
    3748:	a0 f3       	brcs	.-24     	; 0x3732 <__mulsf3+0x4>

0000374a <__mulsf3_pse>:
    374a:	95 9f       	mul	r25, r21
    374c:	d1 f3       	breq	.-12     	; 0x3742 <__mulsf3+0x14>
    374e:	95 0f       	add	r25, r21
    3750:	50 e0       	ldi	r21, 0x00	; 0
    3752:	55 1f       	adc	r21, r21
    3754:	62 9f       	mul	r22, r18
    3756:	f0 01       	movw	r30, r0
    3758:	72 9f       	mul	r23, r18
    375a:	bb 27       	eor	r27, r27
    375c:	f0 0d       	add	r31, r0
    375e:	b1 1d       	adc	r27, r1
    3760:	63 9f       	mul	r22, r19
    3762:	aa 27       	eor	r26, r26
    3764:	f0 0d       	add	r31, r0
    3766:	b1 1d       	adc	r27, r1
    3768:	aa 1f       	adc	r26, r26
    376a:	64 9f       	mul	r22, r20
    376c:	66 27       	eor	r22, r22
    376e:	b0 0d       	add	r27, r0
    3770:	a1 1d       	adc	r26, r1
    3772:	66 1f       	adc	r22, r22
    3774:	82 9f       	mul	r24, r18
    3776:	22 27       	eor	r18, r18
    3778:	b0 0d       	add	r27, r0
    377a:	a1 1d       	adc	r26, r1
    377c:	62 1f       	adc	r22, r18
    377e:	73 9f       	mul	r23, r19
    3780:	b0 0d       	add	r27, r0
    3782:	a1 1d       	adc	r26, r1
    3784:	62 1f       	adc	r22, r18
    3786:	83 9f       	mul	r24, r19
    3788:	a0 0d       	add	r26, r0
    378a:	61 1d       	adc	r22, r1
    378c:	22 1f       	adc	r18, r18
    378e:	74 9f       	mul	r23, r20
    3790:	33 27       	eor	r19, r19
    3792:	a0 0d       	add	r26, r0
    3794:	61 1d       	adc	r22, r1
    3796:	23 1f       	adc	r18, r19
    3798:	84 9f       	mul	r24, r20
    379a:	60 0d       	add	r22, r0
    379c:	21 1d       	adc	r18, r1
    379e:	82 2f       	mov	r24, r18
    37a0:	76 2f       	mov	r23, r22
    37a2:	6a 2f       	mov	r22, r26
    37a4:	11 24       	eor	r1, r1
    37a6:	9f 57       	subi	r25, 0x7F	; 127
    37a8:	50 40       	sbci	r21, 0x00	; 0
    37aa:	8a f0       	brmi	.+34     	; 0x37ce <__mulsf3_pse+0x84>
    37ac:	e1 f0       	breq	.+56     	; 0x37e6 <__mulsf3_pse+0x9c>
    37ae:	88 23       	and	r24, r24
    37b0:	4a f0       	brmi	.+18     	; 0x37c4 <__mulsf3_pse+0x7a>
    37b2:	ee 0f       	add	r30, r30
    37b4:	ff 1f       	adc	r31, r31
    37b6:	bb 1f       	adc	r27, r27
    37b8:	66 1f       	adc	r22, r22
    37ba:	77 1f       	adc	r23, r23
    37bc:	88 1f       	adc	r24, r24
    37be:	91 50       	subi	r25, 0x01	; 1
    37c0:	50 40       	sbci	r21, 0x00	; 0
    37c2:	a9 f7       	brne	.-22     	; 0x37ae <__mulsf3_pse+0x64>
    37c4:	9e 3f       	cpi	r25, 0xFE	; 254
    37c6:	51 05       	cpc	r21, r1
    37c8:	70 f0       	brcs	.+28     	; 0x37e6 <__mulsf3_pse+0x9c>
    37ca:	5c cf       	rjmp	.-328    	; 0x3684 <__fp_inf>
    37cc:	a6 cf       	rjmp	.-180    	; 0x371a <__fp_szero>
    37ce:	5f 3f       	cpi	r21, 0xFF	; 255
    37d0:	ec f3       	brlt	.-6      	; 0x37cc <__mulsf3_pse+0x82>
    37d2:	98 3e       	cpi	r25, 0xE8	; 232
    37d4:	dc f3       	brlt	.-10     	; 0x37cc <__mulsf3_pse+0x82>
    37d6:	86 95       	lsr	r24
    37d8:	77 95       	ror	r23
    37da:	67 95       	ror	r22
    37dc:	b7 95       	ror	r27
    37de:	f7 95       	ror	r31
    37e0:	e7 95       	ror	r30
    37e2:	9f 5f       	subi	r25, 0xFF	; 255
    37e4:	c1 f7       	brne	.-16     	; 0x37d6 <__mulsf3_pse+0x8c>
    37e6:	fe 2b       	or	r31, r30
    37e8:	88 0f       	add	r24, r24
    37ea:	91 1d       	adc	r25, r1
    37ec:	96 95       	lsr	r25
    37ee:	87 95       	ror	r24
    37f0:	97 f9       	bld	r25, 7
    37f2:	08 95       	ret

000037f4 <pow>:
    37f4:	fa 01       	movw	r30, r20
    37f6:	ee 0f       	add	r30, r30
    37f8:	ff 1f       	adc	r31, r31
    37fa:	30 96       	adiw	r30, 0x00	; 0
    37fc:	21 05       	cpc	r18, r1
    37fe:	31 05       	cpc	r19, r1
    3800:	99 f1       	breq	.+102    	; 0x3868 <pow+0x74>
    3802:	61 15       	cp	r22, r1
    3804:	71 05       	cpc	r23, r1
    3806:	61 f4       	brne	.+24     	; 0x3820 <pow+0x2c>
    3808:	80 38       	cpi	r24, 0x80	; 128
    380a:	bf e3       	ldi	r27, 0x3F	; 63
    380c:	9b 07       	cpc	r25, r27
    380e:	49 f1       	breq	.+82     	; 0x3862 <pow+0x6e>
    3810:	68 94       	set
    3812:	90 38       	cpi	r25, 0x80	; 128
    3814:	81 05       	cpc	r24, r1
    3816:	61 f0       	breq	.+24     	; 0x3830 <pow+0x3c>
    3818:	80 38       	cpi	r24, 0x80	; 128
    381a:	bf ef       	ldi	r27, 0xFF	; 255
    381c:	9b 07       	cpc	r25, r27
    381e:	41 f0       	breq	.+16     	; 0x3830 <pow+0x3c>
    3820:	99 23       	and	r25, r25
    3822:	42 f5       	brpl	.+80     	; 0x3874 <pow+0x80>
    3824:	ff 3f       	cpi	r31, 0xFF	; 255
    3826:	e1 05       	cpc	r30, r1
    3828:	31 05       	cpc	r19, r1
    382a:	21 05       	cpc	r18, r1
    382c:	11 f1       	breq	.+68     	; 0x3872 <pow+0x7e>
    382e:	e8 94       	clt
    3830:	08 94       	sec
    3832:	e7 95       	ror	r30
    3834:	d9 01       	movw	r26, r18
    3836:	aa 23       	and	r26, r26
    3838:	29 f4       	brne	.+10     	; 0x3844 <pow+0x50>
    383a:	ab 2f       	mov	r26, r27
    383c:	be 2f       	mov	r27, r30
    383e:	f8 5f       	subi	r31, 0xF8	; 248
    3840:	d0 f3       	brcs	.-12     	; 0x3836 <pow+0x42>
    3842:	10 c0       	rjmp	.+32     	; 0x3864 <pow+0x70>
    3844:	ff 5f       	subi	r31, 0xFF	; 255
    3846:	70 f4       	brcc	.+28     	; 0x3864 <pow+0x70>
    3848:	a6 95       	lsr	r26
    384a:	e0 f7       	brcc	.-8      	; 0x3844 <pow+0x50>
    384c:	f7 39       	cpi	r31, 0x97	; 151
    384e:	50 f0       	brcs	.+20     	; 0x3864 <pow+0x70>
    3850:	19 f0       	breq	.+6      	; 0x3858 <pow+0x64>
    3852:	ff 3a       	cpi	r31, 0xAF	; 175
    3854:	38 f4       	brcc	.+14     	; 0x3864 <pow+0x70>
    3856:	9f 77       	andi	r25, 0x7F	; 127
    3858:	9f 93       	push	r25
    385a:	0c d0       	rcall	.+24     	; 0x3874 <pow+0x80>
    385c:	0f 90       	pop	r0
    385e:	07 fc       	sbrc	r0, 7
    3860:	90 58       	subi	r25, 0x80	; 128
    3862:	08 95       	ret
    3864:	3e f0       	brts	.+14     	; 0x3874 <pow+0x80>
    3866:	14 cf       	rjmp	.-472    	; 0x3690 <__fp_nan>
    3868:	60 e0       	ldi	r22, 0x00	; 0
    386a:	70 e0       	ldi	r23, 0x00	; 0
    386c:	80 e8       	ldi	r24, 0x80	; 128
    386e:	9f e3       	ldi	r25, 0x3F	; 63
    3870:	08 95       	ret
    3872:	4f e7       	ldi	r20, 0x7F	; 127
    3874:	9f 77       	andi	r25, 0x7F	; 127
    3876:	5f 93       	push	r21
    3878:	4f 93       	push	r20
    387a:	3f 93       	push	r19
    387c:	2f 93       	push	r18
    387e:	e7 d0       	rcall	.+462    	; 0x3a4e <log>
    3880:	2f 91       	pop	r18
    3882:	3f 91       	pop	r19
    3884:	4f 91       	pop	r20
    3886:	5f 91       	pop	r21
    3888:	52 df       	rcall	.-348    	; 0x372e <__mulsf3>
    388a:	25 c0       	rjmp	.+74     	; 0x38d6 <exp>

0000388c <round>:
    388c:	2b df       	rcall	.-426    	; 0x36e4 <__fp_splitA>
    388e:	e0 f0       	brcs	.+56     	; 0x38c8 <round+0x3c>
    3890:	9e 37       	cpi	r25, 0x7E	; 126
    3892:	d8 f0       	brcs	.+54     	; 0x38ca <round+0x3e>
    3894:	96 39       	cpi	r25, 0x96	; 150
    3896:	b8 f4       	brcc	.+46     	; 0x38c6 <round+0x3a>
    3898:	9e 38       	cpi	r25, 0x8E	; 142
    389a:	48 f4       	brcc	.+18     	; 0x38ae <round+0x22>
    389c:	67 2f       	mov	r22, r23
    389e:	78 2f       	mov	r23, r24
    38a0:	88 27       	eor	r24, r24
    38a2:	98 5f       	subi	r25, 0xF8	; 248
    38a4:	f9 cf       	rjmp	.-14     	; 0x3898 <round+0xc>
    38a6:	86 95       	lsr	r24
    38a8:	77 95       	ror	r23
    38aa:	67 95       	ror	r22
    38ac:	93 95       	inc	r25
    38ae:	95 39       	cpi	r25, 0x95	; 149
    38b0:	d0 f3       	brcs	.-12     	; 0x38a6 <round+0x1a>
    38b2:	b6 2f       	mov	r27, r22
    38b4:	b1 70       	andi	r27, 0x01	; 1
    38b6:	6b 0f       	add	r22, r27
    38b8:	71 1d       	adc	r23, r1
    38ba:	81 1d       	adc	r24, r1
    38bc:	20 f4       	brcc	.+8      	; 0x38c6 <round+0x3a>
    38be:	87 95       	ror	r24
    38c0:	77 95       	ror	r23
    38c2:	67 95       	ror	r22
    38c4:	93 95       	inc	r25
    38c6:	33 c0       	rjmp	.+102    	; 0x392e <__fp_mintl>
    38c8:	4d c0       	rjmp	.+154    	; 0x3964 <__fp_mpack>
    38ca:	27 cf       	rjmp	.-434    	; 0x371a <__fp_szero>
    38cc:	19 f4       	brne	.+6      	; 0x38d4 <round+0x48>
    38ce:	0e f0       	brts	.+2      	; 0x38d2 <round+0x46>
    38d0:	d9 ce       	rjmp	.-590    	; 0x3684 <__fp_inf>
    38d2:	22 cf       	rjmp	.-444    	; 0x3718 <__fp_zero>
    38d4:	dd ce       	rjmp	.-582    	; 0x3690 <__fp_nan>

000038d6 <exp>:
    38d6:	06 df       	rcall	.-500    	; 0x36e4 <__fp_splitA>
    38d8:	c8 f3       	brcs	.-14     	; 0x38cc <round+0x40>
    38da:	96 38       	cpi	r25, 0x86	; 134
    38dc:	c0 f7       	brcc	.-16     	; 0x38ce <round+0x42>
    38de:	07 f8       	bld	r0, 7
    38e0:	0f 92       	push	r0
    38e2:	e8 94       	clt
    38e4:	2b e3       	ldi	r18, 0x3B	; 59
    38e6:	3a ea       	ldi	r19, 0xAA	; 170
    38e8:	48 eb       	ldi	r20, 0xB8	; 184
    38ea:	5f e7       	ldi	r21, 0x7F	; 127
    38ec:	2e df       	rcall	.-420    	; 0x374a <__mulsf3_pse>
    38ee:	0f 92       	push	r0
    38f0:	0f 92       	push	r0
    38f2:	0f 92       	push	r0
    38f4:	4d b7       	in	r20, 0x3d	; 61
    38f6:	5e b7       	in	r21, 0x3e	; 62
    38f8:	0f 92       	push	r0
    38fa:	e9 d0       	rcall	.+466    	; 0x3ace <modf>
    38fc:	e8 e6       	ldi	r30, 0x68	; 104
    38fe:	f0 e0       	ldi	r31, 0x00	; 0
    3900:	3f d0       	rcall	.+126    	; 0x3980 <__fp_powser>
    3902:	4f 91       	pop	r20
    3904:	5f 91       	pop	r21
    3906:	ef 91       	pop	r30
    3908:	ff 91       	pop	r31
    390a:	e5 95       	asr	r30
    390c:	ee 1f       	adc	r30, r30
    390e:	ff 1f       	adc	r31, r31
    3910:	49 f0       	breq	.+18     	; 0x3924 <exp+0x4e>
    3912:	fe 57       	subi	r31, 0x7E	; 126
    3914:	e0 68       	ori	r30, 0x80	; 128
    3916:	44 27       	eor	r20, r20
    3918:	ee 0f       	add	r30, r30
    391a:	44 1f       	adc	r20, r20
    391c:	fa 95       	dec	r31
    391e:	e1 f7       	brne	.-8      	; 0x3918 <exp+0x42>
    3920:	41 95       	neg	r20
    3922:	55 0b       	sbc	r21, r21
    3924:	5b d0       	rcall	.+182    	; 0x39dc <ldexp>
    3926:	0f 90       	pop	r0
    3928:	07 fe       	sbrs	r0, 7
    392a:	4f c0       	rjmp	.+158    	; 0x39ca <inverse>
    392c:	08 95       	ret

0000392e <__fp_mintl>:
    392e:	88 23       	and	r24, r24
    3930:	71 f4       	brne	.+28     	; 0x394e <__fp_mintl+0x20>
    3932:	77 23       	and	r23, r23
    3934:	21 f0       	breq	.+8      	; 0x393e <__fp_mintl+0x10>
    3936:	98 50       	subi	r25, 0x08	; 8
    3938:	87 2b       	or	r24, r23
    393a:	76 2f       	mov	r23, r22
    393c:	07 c0       	rjmp	.+14     	; 0x394c <__fp_mintl+0x1e>
    393e:	66 23       	and	r22, r22
    3940:	11 f4       	brne	.+4      	; 0x3946 <__fp_mintl+0x18>
    3942:	99 27       	eor	r25, r25
    3944:	0d c0       	rjmp	.+26     	; 0x3960 <__fp_mintl+0x32>
    3946:	90 51       	subi	r25, 0x10	; 16
    3948:	86 2b       	or	r24, r22
    394a:	70 e0       	ldi	r23, 0x00	; 0
    394c:	60 e0       	ldi	r22, 0x00	; 0
    394e:	2a f0       	brmi	.+10     	; 0x395a <__fp_mintl+0x2c>
    3950:	9a 95       	dec	r25
    3952:	66 0f       	add	r22, r22
    3954:	77 1f       	adc	r23, r23
    3956:	88 1f       	adc	r24, r24
    3958:	da f7       	brpl	.-10     	; 0x3950 <__fp_mintl+0x22>
    395a:	88 0f       	add	r24, r24
    395c:	96 95       	lsr	r25
    395e:	87 95       	ror	r24
    3960:	97 f9       	bld	r25, 7
    3962:	08 95       	ret

00003964 <__fp_mpack>:
    3964:	9f 3f       	cpi	r25, 0xFF	; 255
    3966:	31 f0       	breq	.+12     	; 0x3974 <__fp_mpack_finite+0xc>

00003968 <__fp_mpack_finite>:
    3968:	91 50       	subi	r25, 0x01	; 1
    396a:	20 f4       	brcc	.+8      	; 0x3974 <__fp_mpack_finite+0xc>
    396c:	87 95       	ror	r24
    396e:	77 95       	ror	r23
    3970:	67 95       	ror	r22
    3972:	b7 95       	ror	r27
    3974:	88 0f       	add	r24, r24
    3976:	91 1d       	adc	r25, r1
    3978:	96 95       	lsr	r25
    397a:	87 95       	ror	r24
    397c:	97 f9       	bld	r25, 7
    397e:	08 95       	ret

00003980 <__fp_powser>:
    3980:	df 93       	push	r29
    3982:	cf 93       	push	r28
    3984:	1f 93       	push	r17
    3986:	0f 93       	push	r16
    3988:	ff 92       	push	r15
    398a:	ef 92       	push	r14
    398c:	df 92       	push	r13
    398e:	7b 01       	movw	r14, r22
    3990:	8c 01       	movw	r16, r24
    3992:	68 94       	set
    3994:	05 c0       	rjmp	.+10     	; 0x39a0 <__fp_powser+0x20>
    3996:	da 2e       	mov	r13, r26
    3998:	ef 01       	movw	r28, r30
    399a:	d5 de       	rcall	.-598    	; 0x3746 <__mulsf3x>
    399c:	fe 01       	movw	r30, r28
    399e:	e8 94       	clt
    39a0:	a5 91       	lpm	r26, Z+
    39a2:	25 91       	lpm	r18, Z+
    39a4:	35 91       	lpm	r19, Z+
    39a6:	45 91       	lpm	r20, Z+
    39a8:	55 91       	lpm	r21, Z+
    39aa:	ae f3       	brts	.-22     	; 0x3996 <__fp_powser+0x16>
    39ac:	ef 01       	movw	r28, r30
    39ae:	19 dd       	rcall	.-1486   	; 0x33e2 <__addsf3x>
    39b0:	fe 01       	movw	r30, r28
    39b2:	97 01       	movw	r18, r14
    39b4:	a8 01       	movw	r20, r16
    39b6:	da 94       	dec	r13
    39b8:	79 f7       	brne	.-34     	; 0x3998 <__fp_powser+0x18>
    39ba:	df 90       	pop	r13
    39bc:	ef 90       	pop	r14
    39be:	ff 90       	pop	r15
    39c0:	0f 91       	pop	r16
    39c2:	1f 91       	pop	r17
    39c4:	cf 91       	pop	r28
    39c6:	df 91       	pop	r29
    39c8:	08 95       	ret

000039ca <inverse>:
    39ca:	9b 01       	movw	r18, r22
    39cc:	ac 01       	movw	r20, r24
    39ce:	60 e0       	ldi	r22, 0x00	; 0
    39d0:	70 e0       	ldi	r23, 0x00	; 0
    39d2:	80 e8       	ldi	r24, 0x80	; 128
    39d4:	9f e3       	ldi	r25, 0x3F	; 63
    39d6:	5c cd       	rjmp	.-1352   	; 0x3490 <__divsf3>
    39d8:	55 ce       	rjmp	.-854    	; 0x3684 <__fp_inf>
    39da:	c4 cf       	rjmp	.-120    	; 0x3964 <__fp_mpack>

000039dc <ldexp>:
    39dc:	83 de       	rcall	.-762    	; 0x36e4 <__fp_splitA>
    39de:	e8 f3       	brcs	.-6      	; 0x39da <inverse+0x10>
    39e0:	99 23       	and	r25, r25
    39e2:	d9 f3       	breq	.-10     	; 0x39da <inverse+0x10>
    39e4:	94 0f       	add	r25, r20
    39e6:	51 1d       	adc	r21, r1
    39e8:	bb f3       	brvs	.-18     	; 0x39d8 <inverse+0xe>
    39ea:	91 50       	subi	r25, 0x01	; 1
    39ec:	50 40       	sbci	r21, 0x00	; 0
    39ee:	94 f0       	brlt	.+36     	; 0x3a14 <ldexp+0x38>
    39f0:	59 f0       	breq	.+22     	; 0x3a08 <ldexp+0x2c>
    39f2:	88 23       	and	r24, r24
    39f4:	32 f0       	brmi	.+12     	; 0x3a02 <ldexp+0x26>
    39f6:	66 0f       	add	r22, r22
    39f8:	77 1f       	adc	r23, r23
    39fa:	88 1f       	adc	r24, r24
    39fc:	91 50       	subi	r25, 0x01	; 1
    39fe:	50 40       	sbci	r21, 0x00	; 0
    3a00:	c1 f7       	brne	.-16     	; 0x39f2 <ldexp+0x16>
    3a02:	9e 3f       	cpi	r25, 0xFE	; 254
    3a04:	51 05       	cpc	r21, r1
    3a06:	44 f7       	brge	.-48     	; 0x39d8 <inverse+0xe>
    3a08:	88 0f       	add	r24, r24
    3a0a:	91 1d       	adc	r25, r1
    3a0c:	96 95       	lsr	r25
    3a0e:	87 95       	ror	r24
    3a10:	97 f9       	bld	r25, 7
    3a12:	08 95       	ret
    3a14:	5f 3f       	cpi	r21, 0xFF	; 255
    3a16:	ac f0       	brlt	.+42     	; 0x3a42 <ldexp+0x66>
    3a18:	98 3e       	cpi	r25, 0xE8	; 232
    3a1a:	9c f0       	brlt	.+38     	; 0x3a42 <ldexp+0x66>
    3a1c:	bb 27       	eor	r27, r27
    3a1e:	86 95       	lsr	r24
    3a20:	77 95       	ror	r23
    3a22:	67 95       	ror	r22
    3a24:	b7 95       	ror	r27
    3a26:	08 f4       	brcc	.+2      	; 0x3a2a <ldexp+0x4e>
    3a28:	b1 60       	ori	r27, 0x01	; 1
    3a2a:	93 95       	inc	r25
    3a2c:	c1 f7       	brne	.-16     	; 0x3a1e <ldexp+0x42>
    3a2e:	bb 0f       	add	r27, r27
    3a30:	58 f7       	brcc	.-42     	; 0x3a08 <ldexp+0x2c>
    3a32:	11 f4       	brne	.+4      	; 0x3a38 <ldexp+0x5c>
    3a34:	60 ff       	sbrs	r22, 0
    3a36:	e8 cf       	rjmp	.-48     	; 0x3a08 <ldexp+0x2c>
    3a38:	6f 5f       	subi	r22, 0xFF	; 255
    3a3a:	7f 4f       	sbci	r23, 0xFF	; 255
    3a3c:	8f 4f       	sbci	r24, 0xFF	; 255
    3a3e:	9f 4f       	sbci	r25, 0xFF	; 255
    3a40:	e3 cf       	rjmp	.-58     	; 0x3a08 <ldexp+0x2c>
    3a42:	6b ce       	rjmp	.-810    	; 0x371a <__fp_szero>
    3a44:	0e f0       	brts	.+2      	; 0x3a48 <ldexp+0x6c>
    3a46:	8e cf       	rjmp	.-228    	; 0x3964 <__fp_mpack>
    3a48:	23 ce       	rjmp	.-954    	; 0x3690 <__fp_nan>
    3a4a:	68 94       	set
    3a4c:	1b ce       	rjmp	.-970    	; 0x3684 <__fp_inf>

00003a4e <log>:
    3a4e:	4a de       	rcall	.-876    	; 0x36e4 <__fp_splitA>
    3a50:	c8 f3       	brcs	.-14     	; 0x3a44 <ldexp+0x68>
    3a52:	99 23       	and	r25, r25
    3a54:	d1 f3       	breq	.-12     	; 0x3a4a <ldexp+0x6e>
    3a56:	c6 f3       	brts	.-16     	; 0x3a48 <ldexp+0x6c>
    3a58:	df 93       	push	r29
    3a5a:	cf 93       	push	r28
    3a5c:	1f 93       	push	r17
    3a5e:	0f 93       	push	r16
    3a60:	ff 92       	push	r15
    3a62:	c9 2f       	mov	r28, r25
    3a64:	dd 27       	eor	r29, r29
    3a66:	88 23       	and	r24, r24
    3a68:	2a f0       	brmi	.+10     	; 0x3a74 <log+0x26>
    3a6a:	21 97       	sbiw	r28, 0x01	; 1
    3a6c:	66 0f       	add	r22, r22
    3a6e:	77 1f       	adc	r23, r23
    3a70:	88 1f       	adc	r24, r24
    3a72:	da f7       	brpl	.-10     	; 0x3a6a <log+0x1c>
    3a74:	20 e0       	ldi	r18, 0x00	; 0
    3a76:	30 e0       	ldi	r19, 0x00	; 0
    3a78:	40 e8       	ldi	r20, 0x80	; 128
    3a7a:	5f eb       	ldi	r21, 0xBF	; 191
    3a7c:	9f e3       	ldi	r25, 0x3F	; 63
    3a7e:	88 39       	cpi	r24, 0x98	; 152
    3a80:	20 f0       	brcs	.+8      	; 0x3a8a <log+0x3c>
    3a82:	80 3e       	cpi	r24, 0xE0	; 224
    3a84:	30 f0       	brcs	.+12     	; 0x3a92 <log+0x44>
    3a86:	21 96       	adiw	r28, 0x01	; 1
    3a88:	8f 77       	andi	r24, 0x7F	; 127
    3a8a:	9a dc       	rcall	.-1740   	; 0x33c0 <__addsf3>
    3a8c:	e0 e9       	ldi	r30, 0x90	; 144
    3a8e:	f0 e0       	ldi	r31, 0x00	; 0
    3a90:	03 c0       	rjmp	.+6      	; 0x3a98 <log+0x4a>
    3a92:	96 dc       	rcall	.-1748   	; 0x33c0 <__addsf3>
    3a94:	ed eb       	ldi	r30, 0xBD	; 189
    3a96:	f0 e0       	ldi	r31, 0x00	; 0
    3a98:	73 df       	rcall	.-282    	; 0x3980 <__fp_powser>
    3a9a:	8b 01       	movw	r16, r22
    3a9c:	be 01       	movw	r22, r28
    3a9e:	ec 01       	movw	r28, r24
    3aa0:	fb 2e       	mov	r15, r27
    3aa2:	6f 57       	subi	r22, 0x7F	; 127
    3aa4:	71 09       	sbc	r23, r1
    3aa6:	75 95       	asr	r23
    3aa8:	77 1f       	adc	r23, r23
    3aaa:	88 0b       	sbc	r24, r24
    3aac:	99 0b       	sbc	r25, r25
    3aae:	8b dd       	rcall	.-1258   	; 0x35c6 <__floatsisf>
    3ab0:	28 e1       	ldi	r18, 0x18	; 24
    3ab2:	32 e7       	ldi	r19, 0x72	; 114
    3ab4:	41 e3       	ldi	r20, 0x31	; 49
    3ab6:	5f e3       	ldi	r21, 0x3F	; 63
    3ab8:	46 de       	rcall	.-884    	; 0x3746 <__mulsf3x>
    3aba:	af 2d       	mov	r26, r15
    3abc:	98 01       	movw	r18, r16
    3abe:	ae 01       	movw	r20, r28
    3ac0:	ff 90       	pop	r15
    3ac2:	0f 91       	pop	r16
    3ac4:	1f 91       	pop	r17
    3ac6:	cf 91       	pop	r28
    3ac8:	df 91       	pop	r29
    3aca:	8b dc       	rcall	.-1770   	; 0x33e2 <__addsf3x>
    3acc:	f2 cd       	rjmp	.-1052   	; 0x36b2 <__fp_round>

00003ace <modf>:
    3ace:	fa 01       	movw	r30, r20
    3ad0:	dc 01       	movw	r26, r24
    3ad2:	aa 0f       	add	r26, r26
    3ad4:	bb 1f       	adc	r27, r27
    3ad6:	9b 01       	movw	r18, r22
    3ad8:	ac 01       	movw	r20, r24
    3ada:	bf 57       	subi	r27, 0x7F	; 127
    3adc:	28 f4       	brcc	.+10     	; 0x3ae8 <modf+0x1a>
    3ade:	22 27       	eor	r18, r18
    3ae0:	33 27       	eor	r19, r19
    3ae2:	44 27       	eor	r20, r20
    3ae4:	50 78       	andi	r21, 0x80	; 128
    3ae6:	1f c0       	rjmp	.+62     	; 0x3b26 <modf+0x58>
    3ae8:	b7 51       	subi	r27, 0x17	; 23
    3aea:	88 f4       	brcc	.+34     	; 0x3b0e <modf+0x40>
    3aec:	ab 2f       	mov	r26, r27
    3aee:	00 24       	eor	r0, r0
    3af0:	46 95       	lsr	r20
    3af2:	37 95       	ror	r19
    3af4:	27 95       	ror	r18
    3af6:	01 1c       	adc	r0, r1
    3af8:	a3 95       	inc	r26
    3afa:	d2 f3       	brmi	.-12     	; 0x3af0 <modf+0x22>
    3afc:	00 20       	and	r0, r0
    3afe:	69 f0       	breq	.+26     	; 0x3b1a <modf+0x4c>
    3b00:	22 0f       	add	r18, r18
    3b02:	33 1f       	adc	r19, r19
    3b04:	44 1f       	adc	r20, r20
    3b06:	b3 95       	inc	r27
    3b08:	da f3       	brmi	.-10     	; 0x3b00 <modf+0x32>
    3b0a:	0d d0       	rcall	.+26     	; 0x3b26 <modf+0x58>
    3b0c:	58 cc       	rjmp	.-1872   	; 0x33be <__subsf3>
    3b0e:	61 30       	cpi	r22, 0x01	; 1
    3b10:	71 05       	cpc	r23, r1
    3b12:	a0 e8       	ldi	r26, 0x80	; 128
    3b14:	8a 07       	cpc	r24, r26
    3b16:	b9 46       	sbci	r27, 0x69	; 105
    3b18:	30 f4       	brcc	.+12     	; 0x3b26 <modf+0x58>
    3b1a:	9b 01       	movw	r18, r22
    3b1c:	ac 01       	movw	r20, r24
    3b1e:	66 27       	eor	r22, r22
    3b20:	77 27       	eor	r23, r23
    3b22:	88 27       	eor	r24, r24
    3b24:	90 78       	andi	r25, 0x80	; 128
    3b26:	30 96       	adiw	r30, 0x00	; 0
    3b28:	21 f0       	breq	.+8      	; 0x3b32 <modf+0x64>
    3b2a:	20 83       	st	Z, r18
    3b2c:	31 83       	std	Z+1, r19	; 0x01
    3b2e:	42 83       	std	Z+2, r20	; 0x02
    3b30:	53 83       	std	Z+3, r21	; 0x03
    3b32:	08 95       	ret

00003b34 <u8g_get_avr_io_ptr>:
    3b34:	cf 93       	push	r28
    3b36:	df 93       	push	r29
    3b38:	00 d0       	rcall	.+0      	; 0x3b3a <u8g_get_avr_io_ptr+0x6>
    3b3a:	cd b7       	in	r28, 0x3d	; 61
    3b3c:	de b7       	in	r29, 0x3e	; 62
    3b3e:	70 e0       	ldi	r23, 0x00	; 0
    3b40:	66 0f       	add	r22, r22
    3b42:	77 1f       	adc	r23, r23
    3b44:	68 0f       	add	r22, r24
    3b46:	79 1f       	adc	r23, r25
    3b48:	42 e0       	ldi	r20, 0x02	; 2
    3b4a:	50 e0       	ldi	r21, 0x00	; 0
    3b4c:	ce 01       	movw	r24, r28
    3b4e:	01 96       	adiw	r24, 0x01	; 1
    3b50:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <memcpy_P>
    3b54:	89 81       	ldd	r24, Y+1	; 0x01
    3b56:	9a 81       	ldd	r25, Y+2	; 0x02
    3b58:	0f 90       	pop	r0
    3b5a:	0f 90       	pop	r0
    3b5c:	df 91       	pop	r29
    3b5e:	cf 91       	pop	r28
    3b60:	08 95       	ret

00003b62 <u8g_Pin>:
    3b62:	88 0f       	add	r24, r24
    3b64:	88 0f       	add	r24, r24
    3b66:	88 0f       	add	r24, r24
    3b68:	86 0f       	add	r24, r22
    3b6a:	08 95       	ret

00003b6c <u8g_SetPinOutput>:
    3b6c:	cf 93       	push	r28
    3b6e:	c8 2f       	mov	r28, r24
    3b70:	68 2f       	mov	r22, r24
    3b72:	66 95       	lsr	r22
    3b74:	66 95       	lsr	r22
    3b76:	66 95       	lsr	r22
    3b78:	8a ec       	ldi	r24, 0xCA	; 202
    3b7a:	91 e0       	ldi	r25, 0x01	; 1
    3b7c:	0e 94 9a 1d 	call	0x3b34	; 0x3b34 <u8g_get_avr_io_ptr>
    3b80:	fc 01       	movw	r30, r24
    3b82:	40 81       	ld	r20, Z
    3b84:	c7 70       	andi	r28, 0x07	; 7
    3b86:	21 e0       	ldi	r18, 0x01	; 1
    3b88:	30 e0       	ldi	r19, 0x00	; 0
    3b8a:	c9 01       	movw	r24, r18
    3b8c:	02 c0       	rjmp	.+4      	; 0x3b92 <u8g_SetPinOutput+0x26>
    3b8e:	88 0f       	add	r24, r24
    3b90:	99 1f       	adc	r25, r25
    3b92:	ca 95       	dec	r28
    3b94:	e2 f7       	brpl	.-8      	; 0x3b8e <u8g_SetPinOutput+0x22>
    3b96:	84 2b       	or	r24, r20
    3b98:	80 83       	st	Z, r24
    3b9a:	cf 91       	pop	r28
    3b9c:	08 95       	ret

00003b9e <u8g_SetPinLevel>:
    3b9e:	cf 93       	push	r28
    3ba0:	df 93       	push	r29
    3ba2:	c8 2f       	mov	r28, r24
    3ba4:	d6 2f       	mov	r29, r22
    3ba6:	68 2f       	mov	r22, r24
    3ba8:	66 95       	lsr	r22
    3baa:	66 95       	lsr	r22
    3bac:	66 95       	lsr	r22
    3bae:	82 ec       	ldi	r24, 0xC2	; 194
    3bb0:	91 e0       	ldi	r25, 0x01	; 1
    3bb2:	0e 94 9a 1d 	call	0x3b34	; 0x3b34 <u8g_get_avr_io_ptr>
    3bb6:	fc 01       	movw	r30, r24
    3bb8:	d1 11       	cpse	r29, r1
    3bba:	11 c0       	rjmp	.+34     	; 0x3bde <u8g_SetPinLevel+0x40>
    3bbc:	4f b7       	in	r20, 0x3f	; 63
    3bbe:	f8 94       	cli
    3bc0:	50 81       	ld	r21, Z
    3bc2:	c7 70       	andi	r28, 0x07	; 7
    3bc4:	21 e0       	ldi	r18, 0x01	; 1
    3bc6:	30 e0       	ldi	r19, 0x00	; 0
    3bc8:	c9 01       	movw	r24, r18
    3bca:	02 c0       	rjmp	.+4      	; 0x3bd0 <u8g_SetPinLevel+0x32>
    3bcc:	88 0f       	add	r24, r24
    3bce:	99 1f       	adc	r25, r25
    3bd0:	ca 95       	dec	r28
    3bd2:	e2 f7       	brpl	.-8      	; 0x3bcc <u8g_SetPinLevel+0x2e>
    3bd4:	80 95       	com	r24
    3bd6:	85 23       	and	r24, r21
    3bd8:	80 83       	st	Z, r24
    3bda:	4f bf       	out	0x3f, r20	; 63
    3bdc:	0f c0       	rjmp	.+30     	; 0x3bfc <u8g_SetPinLevel+0x5e>
    3bde:	4f b7       	in	r20, 0x3f	; 63
    3be0:	f8 94       	cli
    3be2:	50 81       	ld	r21, Z
    3be4:	c7 70       	andi	r28, 0x07	; 7
    3be6:	21 e0       	ldi	r18, 0x01	; 1
    3be8:	30 e0       	ldi	r19, 0x00	; 0
    3bea:	c9 01       	movw	r24, r18
    3bec:	02 c0       	rjmp	.+4      	; 0x3bf2 <u8g_SetPinLevel+0x54>
    3bee:	88 0f       	add	r24, r24
    3bf0:	99 1f       	adc	r25, r25
    3bf2:	ca 95       	dec	r28
    3bf4:	e2 f7       	brpl	.-8      	; 0x3bee <u8g_SetPinLevel+0x50>
    3bf6:	85 2b       	or	r24, r21
    3bf8:	80 83       	st	Z, r24
    3bfa:	4f bf       	out	0x3f, r20	; 63
    3bfc:	df 91       	pop	r29
    3bfe:	cf 91       	pop	r28
    3c00:	08 95       	ret

00003c02 <u8g_SetPIOutput>:
    3c02:	86 0f       	add	r24, r22
    3c04:	91 1d       	adc	r25, r1
    3c06:	fc 01       	movw	r30, r24
    3c08:	83 a1       	ldd	r24, Z+35	; 0x23
    3c0a:	8f 3f       	cpi	r24, 0xFF	; 255
    3c0c:	11 f0       	breq	.+4      	; 0x3c12 <u8g_SetPIOutput+0x10>
    3c0e:	0e 94 b6 1d 	call	0x3b6c	; 0x3b6c <u8g_SetPinOutput>
    3c12:	08 95       	ret

00003c14 <u8g_SetPILevel>:
    3c14:	86 0f       	add	r24, r22
    3c16:	91 1d       	adc	r25, r1
    3c18:	fc 01       	movw	r30, r24
    3c1a:	83 a1       	ldd	r24, Z+35	; 0x23
    3c1c:	8f 3f       	cpi	r24, 0xFF	; 255
    3c1e:	19 f0       	breq	.+6      	; 0x3c26 <u8g_SetPILevel+0x12>
    3c20:	64 2f       	mov	r22, r20
    3c22:	0e 94 cf 1d 	call	0x3b9e	; 0x3b9e <u8g_SetPinLevel>
    3c26:	08 95       	ret

00003c28 <u8g_Delay>:
    3c28:	00 97       	sbiw	r24, 0x00	; 0
    3c2a:	41 f0       	breq	.+16     	; 0x3c3c <u8g_Delay+0x14>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3c2c:	2e ec       	ldi	r18, 0xCE	; 206
    3c2e:	37 e0       	ldi	r19, 0x07	; 7
    3c30:	f9 01       	movw	r30, r18
    3c32:	31 97       	sbiw	r30, 0x01	; 1
    3c34:	f1 f7       	brne	.-4      	; 0x3c32 <u8g_Delay+0xa>
    3c36:	01 97       	sbiw	r24, 0x01	; 1
    3c38:	00 97       	sbiw	r24, 0x00	; 0
    3c3a:	d1 f7       	brne	.-12     	; 0x3c30 <u8g_Delay+0x8>
    3c3c:	08 95       	ret

00003c3e <u8g_dev_ssd1306_128x64_fn>:
    3c3e:	bf 92       	push	r11
    3c40:	cf 92       	push	r12
    3c42:	df 92       	push	r13
    3c44:	ef 92       	push	r14
    3c46:	ff 92       	push	r15
    3c48:	0f 93       	push	r16
    3c4a:	1f 93       	push	r17
    3c4c:	cf 93       	push	r28
    3c4e:	df 93       	push	r29
    3c50:	8c 01       	movw	r16, r24
    3c52:	eb 01       	movw	r28, r22
    3c54:	b4 2e       	mov	r11, r20
    3c56:	79 01       	movw	r14, r18
    3c58:	80 e1       	ldi	r24, 0x10	; 16
    3c5a:	48 17       	cp	r20, r24
    3c5c:	c1 f1       	breq	.+112    	; 0x3cce <u8g_dev_ssd1306_128x64_fn+0x90>
    3c5e:	84 17       	cp	r24, r20
    3c60:	20 f0       	brcs	.+8      	; 0x3c6a <u8g_dev_ssd1306_128x64_fn+0x2c>
    3c62:	ea e0       	ldi	r30, 0x0A	; 10
    3c64:	4e 17       	cp	r20, r30
    3c66:	41 f0       	breq	.+16     	; 0x3c78 <u8g_dev_ssd1306_128x64_fn+0x3a>
    3c68:	40 c0       	rjmp	.+128    	; 0x3cea <u8g_dev_ssd1306_128x64_fn+0xac>
    3c6a:	f1 e1       	ldi	r31, 0x11	; 17
    3c6c:	4f 17       	cp	r20, r31
    3c6e:	b1 f1       	breq	.+108    	; 0x3cdc <u8g_dev_ssd1306_128x64_fn+0x9e>
    3c70:	85 e1       	ldi	r24, 0x15	; 21
    3c72:	48 17       	cp	r20, r24
    3c74:	61 f0       	breq	.+24     	; 0x3c8e <u8g_dev_ssd1306_128x64_fn+0x50>
    3c76:	39 c0       	rjmp	.+114    	; 0x3cea <u8g_dev_ssd1306_128x64_fn+0xac>
    3c78:	42 e0       	ldi	r20, 0x02	; 2
    3c7a:	c8 01       	movw	r24, r16
    3c7c:	0e 94 c4 24 	call	0x4988	; 0x4988 <u8g_InitCom>
    3c80:	4e ee       	ldi	r20, 0xEE	; 238
    3c82:	51 e0       	ldi	r21, 0x01	; 1
    3c84:	be 01       	movw	r22, r28
    3c86:	c8 01       	movw	r24, r16
    3c88:	0e 94 0a 25 	call	0x4a14	; 0x4a14 <u8g_WriteEscSeqP>
    3c8c:	2e c0       	rjmp	.+92     	; 0x3cea <u8g_dev_ssd1306_128x64_fn+0xac>
    3c8e:	ca 80       	ldd	r12, Y+2	; 0x02
    3c90:	db 80       	ldd	r13, Y+3	; 0x03
    3c92:	46 ee       	ldi	r20, 0xE6	; 230
    3c94:	51 e0       	ldi	r21, 0x01	; 1
    3c96:	c8 01       	movw	r24, r16
    3c98:	0e 94 0a 25 	call	0x4a14	; 0x4a14 <u8g_WriteEscSeqP>
    3c9c:	f6 01       	movw	r30, r12
    3c9e:	44 81       	ldd	r20, Z+4	; 0x04
    3ca0:	40 6b       	ori	r20, 0xB0	; 176
    3ca2:	be 01       	movw	r22, r28
    3ca4:	c8 01       	movw	r24, r16
    3ca6:	0e 94 f8 24 	call	0x49f0	; 0x49f0 <u8g_WriteByte>
    3caa:	41 e0       	ldi	r20, 0x01	; 1
    3cac:	be 01       	movw	r22, r28
    3cae:	c8 01       	movw	r24, r16
    3cb0:	0e 94 ee 24 	call	0x49dc	; 0x49dc <u8g_SetAddress>
    3cb4:	ae 01       	movw	r20, r28
    3cb6:	b8 01       	movw	r22, r16
    3cb8:	c6 01       	movw	r24, r12
    3cba:	0e 94 2b 22 	call	0x4456	; 0x4456 <u8g_pb_WriteBuffer>
    3cbe:	88 23       	and	r24, r24
    3cc0:	d9 f0       	breq	.+54     	; 0x3cf8 <u8g_dev_ssd1306_128x64_fn+0xba>
    3cc2:	40 e0       	ldi	r20, 0x00	; 0
    3cc4:	be 01       	movw	r22, r28
    3cc6:	c8 01       	movw	r24, r16
    3cc8:	0e 94 ce 24 	call	0x499c	; 0x499c <u8g_SetChipSelect>
    3ccc:	0e c0       	rjmp	.+28     	; 0x3cea <u8g_dev_ssd1306_128x64_fn+0xac>
    3cce:	4d ed       	ldi	r20, 0xDD	; 221
    3cd0:	51 e0       	ldi	r21, 0x01	; 1
    3cd2:	c8 01       	movw	r24, r16
    3cd4:	0e 94 0a 25 	call	0x4a14	; 0x4a14 <u8g_WriteEscSeqP>
    3cd8:	81 e0       	ldi	r24, 0x01	; 1
    3cda:	0f c0       	rjmp	.+30     	; 0x3cfa <u8g_dev_ssd1306_128x64_fn+0xbc>
    3cdc:	42 ed       	ldi	r20, 0xD2	; 210
    3cde:	51 e0       	ldi	r21, 0x01	; 1
    3ce0:	c8 01       	movw	r24, r16
    3ce2:	0e 94 0a 25 	call	0x4a14	; 0x4a14 <u8g_WriteEscSeqP>
    3ce6:	81 e0       	ldi	r24, 0x01	; 1
    3ce8:	08 c0       	rjmp	.+16     	; 0x3cfa <u8g_dev_ssd1306_128x64_fn+0xbc>
    3cea:	97 01       	movw	r18, r14
    3cec:	4b 2d       	mov	r20, r11
    3cee:	be 01       	movw	r22, r28
    3cf0:	c8 01       	movw	r24, r16
    3cf2:	0e 94 a2 22 	call	0x4544	; 0x4544 <u8g_dev_pb8v1_base_fn>
    3cf6:	01 c0       	rjmp	.+2      	; 0x3cfa <u8g_dev_ssd1306_128x64_fn+0xbc>
    3cf8:	80 e0       	ldi	r24, 0x00	; 0
    3cfa:	df 91       	pop	r29
    3cfc:	cf 91       	pop	r28
    3cfe:	1f 91       	pop	r17
    3d00:	0f 91       	pop	r16
    3d02:	ff 90       	pop	r15
    3d04:	ef 90       	pop	r14
    3d06:	df 90       	pop	r13
    3d08:	cf 90       	pop	r12
    3d0a:	bf 90       	pop	r11
    3d0c:	08 95       	ret

00003d0e <u8g_font_get_word>:
    3d0e:	fc 01       	movw	r30, r24
    3d10:	e6 0f       	add	r30, r22
    3d12:	f1 1d       	adc	r31, r1
    3d14:	84 91       	lpm	r24, Z
    3d16:	90 e0       	ldi	r25, 0x00	; 0
    3d18:	98 2f       	mov	r25, r24
    3d1a:	88 27       	eor	r24, r24
    3d1c:	31 96       	adiw	r30, 0x01	; 1
    3d1e:	e4 91       	lpm	r30, Z
    3d20:	8e 0f       	add	r24, r30
    3d22:	91 1d       	adc	r25, r1
    3d24:	08 95       	ret

00003d26 <u8g_font_GetFormat>:
    3d26:	fc 01       	movw	r30, r24
    3d28:	84 91       	lpm	r24, Z
    3d2a:	08 95       	ret

00003d2c <u8g_font_GetFontGlyphStructureSize>:
    3d2c:	0e 94 93 1e 	call	0x3d26	; 0x3d26 <u8g_font_GetFormat>
    3d30:	88 23       	and	r24, r24
    3d32:	11 f0       	breq	.+4      	; 0x3d38 <u8g_font_GetFontGlyphStructureSize+0xc>
    3d34:	82 30       	cpi	r24, 0x02	; 2
    3d36:	11 f4       	brne	.+4      	; 0x3d3c <u8g_font_GetFontGlyphStructureSize+0x10>
    3d38:	86 e0       	ldi	r24, 0x06	; 6
    3d3a:	08 95       	ret
    3d3c:	83 e0       	ldi	r24, 0x03	; 3
    3d3e:	08 95       	ret

00003d40 <u8g_font_calc_vref_font>:
    3d40:	80 e0       	ldi	r24, 0x00	; 0
    3d42:	08 95       	ret

00003d44 <u8g_font_GetEncoding65Pos>:
    3d44:	66 e0       	ldi	r22, 0x06	; 6
    3d46:	0e 94 87 1e 	call	0x3d0e	; 0x3d0e <u8g_font_get_word>
    3d4a:	08 95       	ret

00003d4c <u8g_font_GetEncoding97Pos>:
    3d4c:	68 e0       	ldi	r22, 0x08	; 8
    3d4e:	0e 94 87 1e 	call	0x3d0e	; 0x3d0e <u8g_font_get_word>
    3d52:	08 95       	ret

00003d54 <u8g_font_GetFontStartEncoding>:
    3d54:	0a 96       	adiw	r24, 0x0a	; 10
    3d56:	fc 01       	movw	r30, r24
    3d58:	84 91       	lpm	r24, Z
    3d5a:	08 95       	ret

00003d5c <u8g_font_GetFontEndEncoding>:
    3d5c:	0b 96       	adiw	r24, 0x0b	; 11
    3d5e:	fc 01       	movw	r30, r24
    3d60:	84 91       	lpm	r24, Z
    3d62:	08 95       	ret

00003d64 <u8g_GetGlyph>:
    3d64:	af 92       	push	r10
    3d66:	bf 92       	push	r11
    3d68:	cf 92       	push	r12
    3d6a:	df 92       	push	r13
    3d6c:	ef 92       	push	r14
    3d6e:	ff 92       	push	r15
    3d70:	0f 93       	push	r16
    3d72:	1f 93       	push	r17
    3d74:	cf 93       	push	r28
    3d76:	df 93       	push	r29
    3d78:	7c 01       	movw	r14, r24
    3d7a:	b6 2e       	mov	r11, r22
    3d7c:	dc 01       	movw	r26, r24
    3d7e:	14 96       	adiw	r26, 0x04	; 4
    3d80:	cd 91       	ld	r28, X+
    3d82:	dc 91       	ld	r29, X
    3d84:	15 97       	sbiw	r26, 0x05	; 5
    3d86:	ce 01       	movw	r24, r28
    3d88:	0e 94 93 1e 	call	0x3d26	; 0x3d26 <u8g_font_GetFormat>
    3d8c:	18 2f       	mov	r17, r24
    3d8e:	f7 01       	movw	r30, r14
    3d90:	84 81       	ldd	r24, Z+4	; 0x04
    3d92:	95 81       	ldd	r25, Z+5	; 0x05
    3d94:	0e 94 96 1e 	call	0x3d2c	; 0x3d2c <u8g_font_GetFontGlyphStructureSize>
    3d98:	08 2f       	mov	r16, r24
    3d9a:	11 30       	cpi	r17, 0x01	; 1
    3d9c:	19 f0       	breq	.+6      	; 0x3da4 <u8g_GetGlyph+0x40>
    3d9e:	aa 24       	eor	r10, r10
    3da0:	aa 94       	dec	r10
    3da2:	04 c0       	rjmp	.+8      	; 0x3dac <u8g_GetGlyph+0x48>
    3da4:	0f 2e       	mov	r0, r31
    3da6:	ff e0       	ldi	r31, 0x0F	; 15
    3da8:	af 2e       	mov	r10, r31
    3daa:	f0 2d       	mov	r31, r0
    3dac:	d7 01       	movw	r26, r14
    3dae:	14 96       	adiw	r26, 0x04	; 4
    3db0:	8d 91       	ld	r24, X+
    3db2:	9c 91       	ld	r25, X
    3db4:	15 97       	sbiw	r26, 0x05	; 5
    3db6:	0e 94 aa 1e 	call	0x3d54	; 0x3d54 <u8g_font_GetFontStartEncoding>
    3dba:	d8 2e       	mov	r13, r24
    3dbc:	f7 01       	movw	r30, r14
    3dbe:	84 81       	ldd	r24, Z+4	; 0x04
    3dc0:	95 81       	ldd	r25, Z+5	; 0x05
    3dc2:	0e 94 ae 1e 	call	0x3d5c	; 0x3d5c <u8g_font_GetFontEndEncoding>
    3dc6:	c8 2e       	mov	r12, r24
    3dc8:	d7 01       	movw	r26, r14
    3dca:	14 96       	adiw	r26, 0x04	; 4
    3dcc:	8d 91       	ld	r24, X+
    3dce:	9c 91       	ld	r25, X
    3dd0:	15 97       	sbiw	r26, 0x05	; 5
    3dd2:	0e 94 a6 1e 	call	0x3d4c	; 0x3d4c <u8g_font_GetEncoding97Pos>
    3dd6:	b0 e6       	ldi	r27, 0x60	; 96
    3dd8:	bb 15       	cp	r27, r11
    3dda:	48 f4       	brcc	.+18     	; 0x3dee <u8g_GetGlyph+0x8a>
    3ddc:	00 97       	sbiw	r24, 0x00	; 0
    3dde:	39 f0       	breq	.+14     	; 0x3dee <u8g_GetGlyph+0x8a>
    3de0:	c8 0f       	add	r28, r24
    3de2:	d9 1f       	adc	r29, r25
    3de4:	0f 2e       	mov	r0, r31
    3de6:	f1 e6       	ldi	r31, 0x61	; 97
    3de8:	df 2e       	mov	r13, r31
    3dea:	f0 2d       	mov	r31, r0
    3dec:	12 c0       	rjmp	.+36     	; 0x3e12 <u8g_GetGlyph+0xae>
    3dee:	f7 01       	movw	r30, r14
    3df0:	84 81       	ldd	r24, Z+4	; 0x04
    3df2:	95 81       	ldd	r25, Z+5	; 0x05
    3df4:	0e 94 a2 1e 	call	0x3d44	; 0x3d44 <u8g_font_GetEncoding65Pos>
    3df8:	f0 e4       	ldi	r31, 0x40	; 64
    3dfa:	fb 15       	cp	r31, r11
    3dfc:	48 f4       	brcc	.+18     	; 0x3e10 <u8g_GetGlyph+0xac>
    3dfe:	00 97       	sbiw	r24, 0x00	; 0
    3e00:	39 f0       	breq	.+14     	; 0x3e10 <u8g_GetGlyph+0xac>
    3e02:	c8 0f       	add	r28, r24
    3e04:	d9 1f       	adc	r29, r25
    3e06:	0f 2e       	mov	r0, r31
    3e08:	f1 e4       	ldi	r31, 0x41	; 65
    3e0a:	df 2e       	mov	r13, r31
    3e0c:	f0 2d       	mov	r31, r0
    3e0e:	01 c0       	rjmp	.+2      	; 0x3e12 <u8g_GetGlyph+0xae>
    3e10:	61 96       	adiw	r28, 0x11	; 17
    3e12:	cb 14       	cp	r12, r11
    3e14:	90 f4       	brcc	.+36     	; 0x3e3a <u8g_GetGlyph+0xd6>
    3e16:	d7 01       	movw	r26, r14
    3e18:	50 96       	adiw	r26, 0x10	; 16
    3e1a:	1c 92       	st	X, r1
    3e1c:	50 97       	sbiw	r26, 0x10	; 16
    3e1e:	53 96       	adiw	r26, 0x13	; 19
    3e20:	1c 92       	st	X, r1
    3e22:	53 97       	sbiw	r26, 0x13	; 19
    3e24:	54 96       	adiw	r26, 0x14	; 20
    3e26:	1c 92       	st	X, r1
    3e28:	54 97       	sbiw	r26, 0x14	; 20
    3e2a:	51 96       	adiw	r26, 0x11	; 17
    3e2c:	1c 92       	st	X, r1
    3e2e:	51 97       	sbiw	r26, 0x11	; 17
    3e30:	52 96       	adiw	r26, 0x12	; 18
    3e32:	1c 92       	st	X, r1
    3e34:	80 e0       	ldi	r24, 0x00	; 0
    3e36:	90 e0       	ldi	r25, 0x00	; 0
    3e38:	73 c0       	rjmp	.+230    	; 0x3f20 <u8g_GetGlyph+0x1bc>
    3e3a:	cd 14       	cp	r12, r13
    3e3c:	08 f4       	brcc	.+2      	; 0x3e40 <u8g_GetGlyph+0xdc>
    3e3e:	68 c0       	rjmp	.+208    	; 0x3f10 <u8g_GetGlyph+0x1ac>
    3e40:	20 2f       	mov	r18, r16
    3e42:	30 e0       	ldi	r19, 0x00	; 0
    3e44:	8e 01       	movw	r16, r28
    3e46:	fe 01       	movw	r30, r28
    3e48:	84 91       	lpm	r24, Z
    3e4a:	8f 3f       	cpi	r24, 0xFF	; 255
    3e4c:	11 f4       	brne	.+4      	; 0x3e52 <u8g_GetGlyph+0xee>
    3e4e:	21 96       	adiw	r28, 0x01	; 1
    3e50:	5b c0       	rjmp	.+182    	; 0x3f08 <u8g_GetGlyph+0x1a4>
    3e52:	db 10       	cpse	r13, r11
    3e54:	51 c0       	rjmp	.+162    	; 0x3ef8 <u8g_GetGlyph+0x194>
    3e56:	6e 01       	movw	r12, r28
    3e58:	d7 01       	movw	r26, r14
    3e5a:	14 96       	adiw	r26, 0x04	; 4
    3e5c:	8d 91       	ld	r24, X+
    3e5e:	9c 91       	ld	r25, X
    3e60:	15 97       	sbiw	r26, 0x05	; 5
    3e62:	0e 94 93 1e 	call	0x3d26	; 0x3d26 <u8g_font_GetFormat>
    3e66:	88 23       	and	r24, r24
    3e68:	11 f0       	breq	.+4      	; 0x3e6e <u8g_GetGlyph+0x10a>
    3e6a:	82 30       	cpi	r24, 0x02	; 2
    3e6c:	01 f5       	brne	.+64     	; 0x3eae <u8g_GetGlyph+0x14a>
    3e6e:	f8 01       	movw	r30, r16
    3e70:	04 91       	lpm	r16, Z
    3e72:	d7 01       	movw	r26, r14
    3e74:	53 96       	adiw	r26, 0x13	; 19
    3e76:	0c 93       	st	X, r16
    3e78:	f6 01       	movw	r30, r12
    3e7a:	31 96       	adiw	r30, 0x01	; 1
    3e7c:	e4 91       	lpm	r30, Z
    3e7e:	d7 01       	movw	r26, r14
    3e80:	54 96       	adiw	r26, 0x14	; 20
    3e82:	ec 93       	st	X, r30
    3e84:	f6 01       	movw	r30, r12
    3e86:	33 96       	adiw	r30, 0x03	; 3
    3e88:	e4 91       	lpm	r30, Z
    3e8a:	d7 01       	movw	r26, r14
    3e8c:	50 96       	adiw	r26, 0x10	; 16
    3e8e:	ec 93       	st	X, r30
    3e90:	f6 01       	movw	r30, r12
    3e92:	34 96       	adiw	r30, 0x04	; 4
    3e94:	e4 91       	lpm	r30, Z
    3e96:	d7 01       	movw	r26, r14
    3e98:	51 96       	adiw	r26, 0x11	; 17
    3e9a:	ec 93       	st	X, r30
    3e9c:	f6 01       	movw	r30, r12
    3e9e:	35 96       	adiw	r30, 0x05	; 5
    3ea0:	e4 91       	lpm	r30, Z
    3ea2:	d7 01       	movw	r26, r14
    3ea4:	52 96       	adiw	r26, 0x12	; 18
    3ea6:	ec 93       	st	X, r30
    3ea8:	8c 2f       	mov	r24, r28
    3eaa:	9d 2f       	mov	r25, r29
    3eac:	39 c0       	rjmp	.+114    	; 0x3f20 <u8g_GetGlyph+0x1bc>
    3eae:	fe 01       	movw	r30, r28
    3eb0:	04 91       	lpm	r16, Z
    3eb2:	80 2f       	mov	r24, r16
    3eb4:	8f 70       	andi	r24, 0x0F	; 15
    3eb6:	82 50       	subi	r24, 0x02	; 2
    3eb8:	d7 01       	movw	r26, r14
    3eba:	52 96       	adiw	r26, 0x12	; 18
    3ebc:	8c 93       	st	X, r24
    3ebe:	52 97       	sbiw	r26, 0x12	; 18
    3ec0:	02 95       	swap	r16
    3ec2:	0f 70       	andi	r16, 0x0F	; 15
    3ec4:	51 96       	adiw	r26, 0x11	; 17
    3ec6:	0c 93       	st	X, r16
    3ec8:	fe 01       	movw	r30, r28
    3eca:	31 96       	adiw	r30, 0x01	; 1
    3ecc:	e4 91       	lpm	r30, Z
    3ece:	8e 2f       	mov	r24, r30
    3ed0:	8f 70       	andi	r24, 0x0F	; 15
    3ed2:	d7 01       	movw	r26, r14
    3ed4:	54 96       	adiw	r26, 0x14	; 20
    3ed6:	8c 93       	st	X, r24
    3ed8:	54 97       	sbiw	r26, 0x14	; 20
    3eda:	e2 95       	swap	r30
    3edc:	ef 70       	andi	r30, 0x0F	; 15
    3ede:	53 96       	adiw	r26, 0x13	; 19
    3ee0:	ec 93       	st	X, r30
    3ee2:	fe 01       	movw	r30, r28
    3ee4:	32 96       	adiw	r30, 0x02	; 2
    3ee6:	e4 91       	lpm	r30, Z
    3ee8:	e2 95       	swap	r30
    3eea:	ef 70       	andi	r30, 0x0F	; 15
    3eec:	d7 01       	movw	r26, r14
    3eee:	50 96       	adiw	r26, 0x10	; 16
    3ef0:	ec 93       	st	X, r30
    3ef2:	8c 2f       	mov	r24, r28
    3ef4:	9d 2f       	mov	r25, r29
    3ef6:	14 c0       	rjmp	.+40     	; 0x3f20 <u8g_GetGlyph+0x1bc>
    3ef8:	fe 01       	movw	r30, r28
    3efa:	32 96       	adiw	r30, 0x02	; 2
    3efc:	e4 91       	lpm	r30, Z
    3efe:	ea 21       	and	r30, r10
    3f00:	ce 0f       	add	r28, r30
    3f02:	d1 1d       	adc	r29, r1
    3f04:	c2 0f       	add	r28, r18
    3f06:	d3 1f       	adc	r29, r19
    3f08:	dc 14       	cp	r13, r12
    3f0a:	11 f0       	breq	.+4      	; 0x3f10 <u8g_GetGlyph+0x1ac>
    3f0c:	d3 94       	inc	r13
    3f0e:	9a cf       	rjmp	.-204    	; 0x3e44 <u8g_GetGlyph+0xe0>
    3f10:	f7 01       	movw	r30, r14
    3f12:	10 8a       	std	Z+16, r1	; 0x10
    3f14:	13 8a       	std	Z+19, r1	; 0x13
    3f16:	14 8a       	std	Z+20, r1	; 0x14
    3f18:	11 8a       	std	Z+17, r1	; 0x11
    3f1a:	12 8a       	std	Z+18, r1	; 0x12
    3f1c:	80 e0       	ldi	r24, 0x00	; 0
    3f1e:	90 e0       	ldi	r25, 0x00	; 0
    3f20:	df 91       	pop	r29
    3f22:	cf 91       	pop	r28
    3f24:	1f 91       	pop	r17
    3f26:	0f 91       	pop	r16
    3f28:	ff 90       	pop	r15
    3f2a:	ef 90       	pop	r14
    3f2c:	df 90       	pop	r13
    3f2e:	cf 90       	pop	r12
    3f30:	bf 90       	pop	r11
    3f32:	af 90       	pop	r10
    3f34:	08 95       	ret

00003f36 <u8g_draw_glyph>:
    3f36:	6f 92       	push	r6
    3f38:	7f 92       	push	r7
    3f3a:	8f 92       	push	r8
    3f3c:	9f 92       	push	r9
    3f3e:	af 92       	push	r10
    3f40:	bf 92       	push	r11
    3f42:	cf 92       	push	r12
    3f44:	df 92       	push	r13
    3f46:	ef 92       	push	r14
    3f48:	ff 92       	push	r15
    3f4a:	0f 93       	push	r16
    3f4c:	1f 93       	push	r17
    3f4e:	cf 93       	push	r28
    3f50:	df 93       	push	r29
    3f52:	6c 01       	movw	r12, r24
    3f54:	16 2f       	mov	r17, r22
    3f56:	74 2e       	mov	r7, r20
    3f58:	62 2f       	mov	r22, r18
    3f5a:	0e 94 b2 1e 	call	0x3d64	; 0x3d64 <u8g_GetGlyph>
    3f5e:	7c 01       	movw	r14, r24
    3f60:	00 97       	sbiw	r24, 0x00	; 0
    3f62:	09 f4       	brne	.+2      	; 0x3f66 <u8g_draw_glyph+0x30>
    3f64:	47 c0       	rjmp	.+142    	; 0x3ff4 <u8g_draw_glyph+0xbe>
    3f66:	f6 01       	movw	r30, r12
    3f68:	84 81       	ldd	r24, Z+4	; 0x04
    3f6a:	95 81       	ldd	r25, Z+5	; 0x05
    3f6c:	0e 94 96 1e 	call	0x3d2c	; 0x3d2c <u8g_font_GetFontGlyphStructureSize>
    3f70:	b8 2e       	mov	r11, r24
    3f72:	f6 01       	movw	r30, r12
    3f74:	d3 89       	ldd	r29, Z+19	; 0x13
    3f76:	c4 89       	ldd	r28, Z+20	; 0x14
    3f78:	61 88       	ldd	r6, Z+17	; 0x11
    3f7a:	61 0e       	add	r6, r17
    3f7c:	92 89       	ldd	r25, Z+18	; 0x12
    3f7e:	79 1a       	sub	r7, r25
    3f80:	97 2c       	mov	r9, r7
    3f82:	9c 1a       	sub	r9, r28
    3f84:	0c 2f       	mov	r16, r28
    3f86:	2d 2f       	mov	r18, r29
    3f88:	49 2d       	mov	r20, r9
    3f8a:	66 2d       	mov	r22, r6
    3f8c:	c6 01       	movw	r24, r12
    3f8e:	0e 94 92 24 	call	0x4924	; 0x4924 <u8g_IsBBXIntersection>
    3f92:	81 11       	cpse	r24, r1
    3f94:	03 c0       	rjmp	.+6      	; 0x3f9c <u8g_draw_glyph+0x66>
    3f96:	f6 01       	movw	r30, r12
    3f98:	80 89       	ldd	r24, Z+16	; 0x10
    3f9a:	2d c0       	rjmp	.+90     	; 0x3ff6 <u8g_draw_glyph+0xc0>
    3f9c:	d9 5f       	subi	r29, 0xF9	; 249
    3f9e:	8d 2e       	mov	r8, r29
    3fa0:	86 94       	lsr	r8
    3fa2:	86 94       	lsr	r8
    3fa4:	86 94       	lsr	r8
    3fa6:	cc 23       	and	r28, r28
    3fa8:	11 f1       	breq	.+68     	; 0x3fee <u8g_draw_glyph+0xb8>
    3faa:	eb 0c       	add	r14, r11
    3fac:	f1 1c       	adc	r15, r1
    3fae:	aa 24       	eor	r10, r10
    3fb0:	aa 94       	dec	r10
    3fb2:	a8 0c       	add	r10, r8
    3fb4:	b1 2c       	mov	r11, r1
    3fb6:	ff ef       	ldi	r31, 0xFF	; 255
    3fb8:	af 1a       	sub	r10, r31
    3fba:	bf 0a       	sbc	r11, r31
    3fbc:	13 c0       	rjmp	.+38     	; 0x3fe4 <u8g_draw_glyph+0xae>
    3fbe:	fe 01       	movw	r30, r28
    3fc0:	04 91       	lpm	r16, Z
    3fc2:	20 e0       	ldi	r18, 0x00	; 0
    3fc4:	49 2d       	mov	r20, r9
    3fc6:	61 2f       	mov	r22, r17
    3fc8:	c6 01       	movw	r24, r12
    3fca:	0e 94 d2 21 	call	0x43a4	; 0x43a4 <u8g_Draw8Pixel>
    3fce:	21 96       	adiw	r28, 0x01	; 1
    3fd0:	18 5f       	subi	r17, 0xF8	; 248
    3fd2:	8c 2f       	mov	r24, r28
    3fd4:	8e 19       	sub	r24, r14
    3fd6:	88 15       	cp	r24, r8
    3fd8:	90 f3       	brcs	.-28     	; 0x3fbe <u8g_draw_glyph+0x88>
    3fda:	ea 0c       	add	r14, r10
    3fdc:	fb 1c       	adc	r15, r11
    3fde:	93 94       	inc	r9
    3fe0:	97 14       	cp	r9, r7
    3fe2:	29 f0       	breq	.+10     	; 0x3fee <u8g_draw_glyph+0xb8>
    3fe4:	88 20       	and	r8, r8
    3fe6:	d9 f3       	breq	.-10     	; 0x3fde <u8g_draw_glyph+0xa8>
    3fe8:	16 2d       	mov	r17, r6
    3fea:	e7 01       	movw	r28, r14
    3fec:	e8 cf       	rjmp	.-48     	; 0x3fbe <u8g_draw_glyph+0x88>
    3fee:	f6 01       	movw	r30, r12
    3ff0:	80 89       	ldd	r24, Z+16	; 0x10
    3ff2:	01 c0       	rjmp	.+2      	; 0x3ff6 <u8g_draw_glyph+0xc0>
    3ff4:	80 e0       	ldi	r24, 0x00	; 0
    3ff6:	df 91       	pop	r29
    3ff8:	cf 91       	pop	r28
    3ffa:	1f 91       	pop	r17
    3ffc:	0f 91       	pop	r16
    3ffe:	ff 90       	pop	r15
    4000:	ef 90       	pop	r14
    4002:	df 90       	pop	r13
    4004:	cf 90       	pop	r12
    4006:	bf 90       	pop	r11
    4008:	af 90       	pop	r10
    400a:	9f 90       	pop	r9
    400c:	8f 90       	pop	r8
    400e:	7f 90       	pop	r7
    4010:	6f 90       	pop	r6
    4012:	08 95       	ret

00004014 <u8g_DrawStr>:
    4014:	df 92       	push	r13
    4016:	ef 92       	push	r14
    4018:	ff 92       	push	r15
    401a:	0f 93       	push	r16
    401c:	1f 93       	push	r17
    401e:	cf 93       	push	r28
    4020:	df 93       	push	r29
    4022:	8c 01       	movw	r16, r24
    4024:	f6 2e       	mov	r15, r22
    4026:	d4 2e       	mov	r13, r20
    4028:	e9 01       	movw	r28, r18
    402a:	dc 01       	movw	r26, r24
    402c:	55 96       	adiw	r26, 0x15	; 21
    402e:	ed 91       	ld	r30, X+
    4030:	fc 91       	ld	r31, X
    4032:	56 97       	sbiw	r26, 0x16	; 22
    4034:	09 95       	icall
    4036:	d8 0e       	add	r13, r24
    4038:	28 81       	ld	r18, Y
    403a:	22 23       	and	r18, r18
    403c:	69 f0       	breq	.+26     	; 0x4058 <u8g_DrawStr+0x44>
    403e:	21 96       	adiw	r28, 0x01	; 1
    4040:	e1 2c       	mov	r14, r1
    4042:	4d 2d       	mov	r20, r13
    4044:	6f 2d       	mov	r22, r15
    4046:	c8 01       	movw	r24, r16
    4048:	0e 94 9b 1f 	call	0x3f36	; 0x3f36 <u8g_draw_glyph>
    404c:	f8 0e       	add	r15, r24
    404e:	e8 0e       	add	r14, r24
    4050:	29 91       	ld	r18, Y+
    4052:	21 11       	cpse	r18, r1
    4054:	f6 cf       	rjmp	.-20     	; 0x4042 <u8g_DrawStr+0x2e>
    4056:	01 c0       	rjmp	.+2      	; 0x405a <u8g_DrawStr+0x46>
    4058:	e1 2c       	mov	r14, r1
    405a:	8e 2d       	mov	r24, r14
    405c:	df 91       	pop	r29
    405e:	cf 91       	pop	r28
    4060:	1f 91       	pop	r17
    4062:	0f 91       	pop	r16
    4064:	ff 90       	pop	r15
    4066:	ef 90       	pop	r14
    4068:	df 90       	pop	r13
    406a:	08 95       	ret

0000406c <u8g_UpdateRefHeight>:
    406c:	dc 01       	movw	r26, r24
    406e:	14 96       	adiw	r26, 0x04	; 4
    4070:	8d 91       	ld	r24, X+
    4072:	9c 91       	ld	r25, X
    4074:	15 97       	sbiw	r26, 0x05	; 5
    4076:	00 97       	sbiw	r24, 0x00	; 0
    4078:	09 f4       	brne	.+2      	; 0x407c <u8g_UpdateRefHeight+0x10>
    407a:	4d c0       	rjmp	.+154    	; 0x4116 <u8g_UpdateRefHeight+0xaa>
    407c:	57 96       	adiw	r26, 0x17	; 23
    407e:	2c 91       	ld	r18, X
    4080:	57 97       	sbiw	r26, 0x17	; 23
    4082:	21 11       	cpse	r18, r1
    4084:	0d c0       	rjmp	.+26     	; 0x40a0 <u8g_UpdateRefHeight+0x34>
    4086:	fc 01       	movw	r30, r24
    4088:	35 96       	adiw	r30, 0x05	; 5
    408a:	e4 91       	lpm	r30, Z
    408c:	58 96       	adiw	r26, 0x18	; 24
    408e:	ec 93       	st	X, r30
    4090:	58 97       	sbiw	r26, 0x18	; 24
    4092:	fc 01       	movw	r30, r24
    4094:	3c 96       	adiw	r30, 0x0c	; 12
    4096:	84 91       	lpm	r24, Z
    4098:	59 96       	adiw	r26, 0x19	; 25
    409a:	8c 93       	st	X, r24
    409c:	59 97       	sbiw	r26, 0x19	; 25
    409e:	1b c0       	rjmp	.+54     	; 0x40d6 <u8g_UpdateRefHeight+0x6a>
    40a0:	21 30       	cpi	r18, 0x01	; 1
    40a2:	69 f4       	brne	.+26     	; 0x40be <u8g_UpdateRefHeight+0x52>
    40a4:	fc 01       	movw	r30, r24
    40a6:	3f 96       	adiw	r30, 0x0f	; 15
    40a8:	e4 91       	lpm	r30, Z
    40aa:	58 96       	adiw	r26, 0x18	; 24
    40ac:	ec 93       	st	X, r30
    40ae:	58 97       	sbiw	r26, 0x18	; 24
    40b0:	fc 01       	movw	r30, r24
    40b2:	70 96       	adiw	r30, 0x10	; 16
    40b4:	84 91       	lpm	r24, Z
    40b6:	59 96       	adiw	r26, 0x19	; 25
    40b8:	8c 93       	st	X, r24
    40ba:	59 97       	sbiw	r26, 0x19	; 25
    40bc:	0c c0       	rjmp	.+24     	; 0x40d6 <u8g_UpdateRefHeight+0x6a>
    40be:	fc 01       	movw	r30, r24
    40c0:	3d 96       	adiw	r30, 0x0d	; 13
    40c2:	e4 91       	lpm	r30, Z
    40c4:	58 96       	adiw	r26, 0x18	; 24
    40c6:	ec 93       	st	X, r30
    40c8:	58 97       	sbiw	r26, 0x18	; 24
    40ca:	fc 01       	movw	r30, r24
    40cc:	3e 96       	adiw	r30, 0x0e	; 14
    40ce:	84 91       	lpm	r24, Z
    40d0:	59 96       	adiw	r26, 0x19	; 25
    40d2:	8c 93       	st	X, r24
    40d4:	59 97       	sbiw	r26, 0x19	; 25
    40d6:	58 96       	adiw	r26, 0x18	; 24
    40d8:	8c 91       	ld	r24, X
    40da:	58 97       	sbiw	r26, 0x18	; 24
    40dc:	99 27       	eor	r25, r25
    40de:	87 fd       	sbrc	r24, 7
    40e0:	90 95       	com	r25
    40e2:	59 96       	adiw	r26, 0x19	; 25
    40e4:	2c 91       	ld	r18, X
    40e6:	59 97       	sbiw	r26, 0x19	; 25
    40e8:	82 1b       	sub	r24, r18
    40ea:	91 09       	sbc	r25, r1
    40ec:	27 fd       	sbrc	r18, 7
    40ee:	93 95       	inc	r25
    40f0:	5a 96       	adiw	r26, 0x1a	; 26
    40f2:	2c 91       	ld	r18, X
    40f4:	5a 97       	sbiw	r26, 0x1a	; 26
    40f6:	20 34       	cpi	r18, 0x40	; 64
    40f8:	61 f0       	breq	.+24     	; 0x4112 <u8g_UpdateRefHeight+0xa6>
    40fa:	82 9f       	mul	r24, r18
    40fc:	c0 01       	movw	r24, r0
    40fe:	11 24       	eor	r1, r1
    4100:	00 24       	eor	r0, r0
    4102:	88 0f       	add	r24, r24
    4104:	99 1f       	adc	r25, r25
    4106:	00 1c       	adc	r0, r0
    4108:	88 0f       	add	r24, r24
    410a:	99 1f       	adc	r25, r25
    410c:	00 1c       	adc	r0, r0
    410e:	89 2f       	mov	r24, r25
    4110:	90 2d       	mov	r25, r0
    4112:	5b 96       	adiw	r26, 0x1b	; 27
    4114:	8c 93       	st	X, r24
    4116:	08 95       	ret

00004118 <u8g_SetFontPosBaseline>:
    4118:	20 ea       	ldi	r18, 0xA0	; 160
    411a:	3e e1       	ldi	r19, 0x1E	; 30
    411c:	fc 01       	movw	r30, r24
    411e:	36 8b       	std	Z+22, r19	; 0x16
    4120:	25 8b       	std	Z+21, r18	; 0x15
    4122:	08 95       	ret

00004124 <u8g_SetFont>:
    4124:	cf 93       	push	r28
    4126:	df 93       	push	r29
    4128:	ec 01       	movw	r28, r24
    412a:	8c 81       	ldd	r24, Y+4	; 0x04
    412c:	9d 81       	ldd	r25, Y+5	; 0x05
    412e:	86 17       	cp	r24, r22
    4130:	97 07       	cpc	r25, r23
    4132:	49 f0       	breq	.+18     	; 0x4146 <u8g_SetFont+0x22>
    4134:	7d 83       	std	Y+5, r23	; 0x05
    4136:	6c 83       	std	Y+4, r22	; 0x04
    4138:	ce 01       	movw	r24, r28
    413a:	0e 94 36 20 	call	0x406c	; 0x406c <u8g_UpdateRefHeight>
    413e:	80 ea       	ldi	r24, 0xA0	; 160
    4140:	9e e1       	ldi	r25, 0x1E	; 30
    4142:	9e 8b       	std	Y+22, r25	; 0x16
    4144:	8d 8b       	std	Y+21, r24	; 0x15
    4146:	df 91       	pop	r29
    4148:	cf 91       	pop	r28
    414a:	08 95       	ret

0000414c <u8g_init_data>:
    414c:	1f 93       	push	r17
    414e:	cf 93       	push	r28
    4150:	df 93       	push	r29
    4152:	ec 01       	movw	r28, r24
    4154:	1d 82       	std	Y+5, r1	; 0x05
    4156:	1c 82       	std	Y+4, r1	; 0x04
    4158:	1f 82       	std	Y+7, r1	; 0x07
    415a:	1e 82       	std	Y+6, r1	; 0x06
    415c:	19 86       	std	Y+9, r1	; 0x09
    415e:	81 e0       	ldi	r24, 0x01	; 1
    4160:	88 87       	std	Y+8, r24	; 0x08
    4162:	82 e2       	ldi	r24, 0x22	; 34
    4164:	8a 87       	std	Y+10, r24	; 0x0a
    4166:	1f 86       	std	Y+15, r1	; 0x0f
    4168:	1e 86       	std	Y+14, r1	; 0x0e
    416a:	fe 01       	movw	r30, r28
    416c:	b3 96       	adiw	r30, 0x23	; 35
    416e:	80 e0       	ldi	r24, 0x00	; 0
    4170:	9f ef       	ldi	r25, 0xFF	; 255
    4172:	91 93       	st	Z+, r25
    4174:	8f 5f       	subi	r24, 0xFF	; 255
    4176:	8e 30       	cpi	r24, 0x0E	; 14
    4178:	e1 f7       	brne	.-8      	; 0x4172 <u8g_init_data+0x26>
    417a:	11 e0       	ldi	r17, 0x01	; 1
    417c:	18 a3       	std	Y+32, r17	; 0x20
    417e:	ce 01       	movw	r24, r28
    4180:	0e 94 8c 20 	call	0x4118	; 0x4118 <u8g_SetFontPosBaseline>
    4184:	1f 8b       	std	Y+23, r17	; 0x17
    4186:	18 8e       	std	Y+24, r1	; 0x18
    4188:	19 8e       	std	Y+25, r1	; 0x19
    418a:	80 e4       	ldi	r24, 0x40	; 64
    418c:	8a 8f       	std	Y+26, r24	; 0x1a
    418e:	1b 8e       	std	Y+27, r1	; 0x1b
    4190:	81 e9       	ldi	r24, 0x91	; 145
    4192:	94 e2       	ldi	r25, 0x24	; 36
    4194:	9a ab       	std	Y+50, r25	; 0x32
    4196:	89 ab       	std	Y+49, r24	; 0x31
    4198:	df 91       	pop	r29
    419a:	cf 91       	pop	r28
    419c:	1f 91       	pop	r17
    419e:	08 95       	ret

000041a0 <u8g_call_dev_fn>:
    41a0:	db 01       	movw	r26, r22
    41a2:	ed 91       	ld	r30, X+
    41a4:	fc 91       	ld	r31, X
    41a6:	09 95       	icall
    41a8:	08 95       	ret

000041aa <u8g_InitLL>:
    41aa:	0f 93       	push	r16
    41ac:	1f 93       	push	r17
    41ae:	cf 93       	push	r28
    41b0:	df 93       	push	r29
    41b2:	ec 01       	movw	r28, r24
    41b4:	8b 01       	movw	r16, r22
    41b6:	e9 a9       	ldd	r30, Y+49	; 0x31
    41b8:	fa a9       	ldd	r31, Y+50	; 0x32
    41ba:	82 e0       	ldi	r24, 0x02	; 2
    41bc:	09 95       	icall
    41be:	20 e0       	ldi	r18, 0x00	; 0
    41c0:	30 e0       	ldi	r19, 0x00	; 0
    41c2:	4a e0       	ldi	r20, 0x0A	; 10
    41c4:	b8 01       	movw	r22, r16
    41c6:	ce 01       	movw	r24, r28
    41c8:	0e 94 d0 20 	call	0x41a0	; 0x41a0 <u8g_call_dev_fn>
    41cc:	18 2f       	mov	r17, r24
    41ce:	e9 a9       	ldd	r30, Y+49	; 0x31
    41d0:	fa a9       	ldd	r31, Y+50	; 0x32
    41d2:	83 e0       	ldi	r24, 0x03	; 3
    41d4:	09 95       	icall
    41d6:	e9 a9       	ldd	r30, Y+49	; 0x31
    41d8:	fa a9       	ldd	r31, Y+50	; 0x32
    41da:	80 e0       	ldi	r24, 0x00	; 0
    41dc:	09 95       	icall
    41de:	81 2f       	mov	r24, r17
    41e0:	df 91       	pop	r29
    41e2:	cf 91       	pop	r28
    41e4:	1f 91       	pop	r17
    41e6:	0f 91       	pop	r16
    41e8:	08 95       	ret

000041ea <u8g_FirstPageLL>:
    41ea:	0f 93       	push	r16
    41ec:	1f 93       	push	r17
    41ee:	cf 93       	push	r28
    41f0:	df 93       	push	r29
    41f2:	ec 01       	movw	r28, r24
    41f4:	8b 01       	movw	r16, r22
    41f6:	e9 a9       	ldd	r30, Y+49	; 0x31
    41f8:	fa a9       	ldd	r31, Y+50	; 0x32
    41fa:	82 e0       	ldi	r24, 0x02	; 2
    41fc:	09 95       	icall
    41fe:	e9 a9       	ldd	r30, Y+49	; 0x31
    4200:	fa a9       	ldd	r31, Y+50	; 0x32
    4202:	81 e0       	ldi	r24, 0x01	; 1
    4204:	09 95       	icall
    4206:	20 e0       	ldi	r18, 0x00	; 0
    4208:	30 e0       	ldi	r19, 0x00	; 0
    420a:	44 e1       	ldi	r20, 0x14	; 20
    420c:	b8 01       	movw	r22, r16
    420e:	ce 01       	movw	r24, r28
    4210:	0e 94 d0 20 	call	0x41a0	; 0x41a0 <u8g_call_dev_fn>
    4214:	9e 01       	movw	r18, r28
    4216:	2d 5c       	subi	r18, 0xCD	; 205
    4218:	3f 4f       	sbci	r19, 0xFF	; 255
    421a:	47 e1       	ldi	r20, 0x17	; 23
    421c:	b8 01       	movw	r22, r16
    421e:	ce 01       	movw	r24, r28
    4220:	0e 94 d0 20 	call	0x41a0	; 0x41a0 <u8g_call_dev_fn>
    4224:	e9 a9       	ldd	r30, Y+49	; 0x31
    4226:	fa a9       	ldd	r31, Y+50	; 0x32
    4228:	80 e0       	ldi	r24, 0x00	; 0
    422a:	09 95       	icall
    422c:	df 91       	pop	r29
    422e:	cf 91       	pop	r28
    4230:	1f 91       	pop	r17
    4232:	0f 91       	pop	r16
    4234:	08 95       	ret

00004236 <u8g_NextPageLL>:
    4236:	ff 92       	push	r15
    4238:	0f 93       	push	r16
    423a:	1f 93       	push	r17
    423c:	cf 93       	push	r28
    423e:	df 93       	push	r29
    4240:	ec 01       	movw	r28, r24
    4242:	8b 01       	movw	r16, r22
    4244:	e9 a9       	ldd	r30, Y+49	; 0x31
    4246:	fa a9       	ldd	r31, Y+50	; 0x32
    4248:	82 e0       	ldi	r24, 0x02	; 2
    424a:	09 95       	icall
    424c:	e9 a9       	ldd	r30, Y+49	; 0x31
    424e:	fa a9       	ldd	r31, Y+50	; 0x32
    4250:	81 e0       	ldi	r24, 0x01	; 1
    4252:	09 95       	icall
    4254:	20 e0       	ldi	r18, 0x00	; 0
    4256:	30 e0       	ldi	r19, 0x00	; 0
    4258:	45 e1       	ldi	r20, 0x15	; 21
    425a:	b8 01       	movw	r22, r16
    425c:	ce 01       	movw	r24, r28
    425e:	0e 94 d0 20 	call	0x41a0	; 0x41a0 <u8g_call_dev_fn>
    4262:	f8 2e       	mov	r15, r24
    4264:	88 23       	and	r24, r24
    4266:	41 f0       	breq	.+16     	; 0x4278 <u8g_NextPageLL+0x42>
    4268:	9e 01       	movw	r18, r28
    426a:	2d 5c       	subi	r18, 0xCD	; 205
    426c:	3f 4f       	sbci	r19, 0xFF	; 255
    426e:	47 e1       	ldi	r20, 0x17	; 23
    4270:	b8 01       	movw	r22, r16
    4272:	ce 01       	movw	r24, r28
    4274:	0e 94 d0 20 	call	0x41a0	; 0x41a0 <u8g_call_dev_fn>
    4278:	e9 a9       	ldd	r30, Y+49	; 0x31
    427a:	fa a9       	ldd	r31, Y+50	; 0x32
    427c:	80 e0       	ldi	r24, 0x00	; 0
    427e:	09 95       	icall
    4280:	8f 2d       	mov	r24, r15
    4282:	df 91       	pop	r29
    4284:	cf 91       	pop	r28
    4286:	1f 91       	pop	r17
    4288:	0f 91       	pop	r16
    428a:	ff 90       	pop	r15
    428c:	08 95       	ret

0000428e <u8g_GetWidthLL>:
    428e:	cf 93       	push	r28
    4290:	df 93       	push	r29
    4292:	1f 92       	push	r1
    4294:	cd b7       	in	r28, 0x3d	; 61
    4296:	de b7       	in	r29, 0x3e	; 62
    4298:	9e 01       	movw	r18, r28
    429a:	2f 5f       	subi	r18, 0xFF	; 255
    429c:	3f 4f       	sbci	r19, 0xFF	; 255
    429e:	46 e4       	ldi	r20, 0x46	; 70
    42a0:	0e 94 d0 20 	call	0x41a0	; 0x41a0 <u8g_call_dev_fn>
    42a4:	89 81       	ldd	r24, Y+1	; 0x01
    42a6:	0f 90       	pop	r0
    42a8:	df 91       	pop	r29
    42aa:	cf 91       	pop	r28
    42ac:	08 95       	ret

000042ae <u8g_GetHeightLL>:
    42ae:	cf 93       	push	r28
    42b0:	df 93       	push	r29
    42b2:	1f 92       	push	r1
    42b4:	cd b7       	in	r28, 0x3d	; 61
    42b6:	de b7       	in	r29, 0x3e	; 62
    42b8:	9e 01       	movw	r18, r28
    42ba:	2f 5f       	subi	r18, 0xFF	; 255
    42bc:	3f 4f       	sbci	r19, 0xFF	; 255
    42be:	47 e4       	ldi	r20, 0x47	; 71
    42c0:	0e 94 d0 20 	call	0x41a0	; 0x41a0 <u8g_call_dev_fn>
    42c4:	89 81       	ldd	r24, Y+1	; 0x01
    42c6:	0f 90       	pop	r0
    42c8:	df 91       	pop	r29
    42ca:	cf 91       	pop	r28
    42cc:	08 95       	ret

000042ce <u8g_GetModeLL>:
    42ce:	20 e0       	ldi	r18, 0x00	; 0
    42d0:	30 e0       	ldi	r19, 0x00	; 0
    42d2:	48 e4       	ldi	r20, 0x48	; 72
    42d4:	0e 94 d0 20 	call	0x41a0	; 0x41a0 <u8g_call_dev_fn>
    42d8:	08 95       	ret

000042da <u8g_UpdateDimension>:
    42da:	cf 93       	push	r28
    42dc:	df 93       	push	r29
    42de:	ec 01       	movw	r28, r24
    42e0:	6a 81       	ldd	r22, Y+2	; 0x02
    42e2:	7b 81       	ldd	r23, Y+3	; 0x03
    42e4:	0e 94 47 21 	call	0x428e	; 0x428e <u8g_GetWidthLL>
    42e8:	88 83       	st	Y, r24
    42ea:	6a 81       	ldd	r22, Y+2	; 0x02
    42ec:	7b 81       	ldd	r23, Y+3	; 0x03
    42ee:	ce 01       	movw	r24, r28
    42f0:	0e 94 57 21 	call	0x42ae	; 0x42ae <u8g_GetHeightLL>
    42f4:	89 83       	std	Y+1, r24	; 0x01
    42f6:	6a 81       	ldd	r22, Y+2	; 0x02
    42f8:	7b 81       	ldd	r23, Y+3	; 0x03
    42fa:	ce 01       	movw	r24, r28
    42fc:	0e 94 67 21 	call	0x42ce	; 0x42ce <u8g_GetModeLL>
    4300:	8b 87       	std	Y+11, r24	; 0x0b
    4302:	9e 01       	movw	r18, r28
    4304:	2d 5c       	subi	r18, 0xCD	; 205
    4306:	3f 4f       	sbci	r19, 0xFF	; 255
    4308:	6a 81       	ldd	r22, Y+2	; 0x02
    430a:	7b 81       	ldd	r23, Y+3	; 0x03
    430c:	47 e1       	ldi	r20, 0x17	; 23
    430e:	ce 01       	movw	r24, r28
    4310:	0e 94 d0 20 	call	0x41a0	; 0x41a0 <u8g_call_dev_fn>
    4314:	df 91       	pop	r29
    4316:	cf 91       	pop	r28
    4318:	08 95       	ret

0000431a <u8g_Begin>:
    431a:	cf 93       	push	r28
    431c:	df 93       	push	r29
    431e:	ec 01       	movw	r28, r24
    4320:	6a 81       	ldd	r22, Y+2	; 0x02
    4322:	7b 81       	ldd	r23, Y+3	; 0x03
    4324:	0e 94 d5 20 	call	0x41aa	; 0x41aa <u8g_InitLL>
    4328:	88 23       	and	r24, r24
    432a:	29 f0       	breq	.+10     	; 0x4336 <u8g_Begin+0x1c>
    432c:	ce 01       	movw	r24, r28
    432e:	0e 94 6d 21 	call	0x42da	; 0x42da <u8g_UpdateDimension>
    4332:	81 e0       	ldi	r24, 0x01	; 1
    4334:	01 c0       	rjmp	.+2      	; 0x4338 <u8g_Begin+0x1e>
    4336:	80 e0       	ldi	r24, 0x00	; 0
    4338:	df 91       	pop	r29
    433a:	cf 91       	pop	r28
    433c:	08 95       	ret

0000433e <u8g_InitHWSPI>:
    433e:	df 92       	push	r13
    4340:	ef 92       	push	r14
    4342:	ff 92       	push	r15
    4344:	0f 93       	push	r16
    4346:	1f 93       	push	r17
    4348:	cf 93       	push	r28
    434a:	df 93       	push	r29
    434c:	ec 01       	movw	r28, r24
    434e:	7b 01       	movw	r14, r22
    4350:	d4 2e       	mov	r13, r20
    4352:	12 2f       	mov	r17, r18
    4354:	0e 94 a6 20 	call	0x414c	; 0x414c <u8g_init_data>
    4358:	fb 82       	std	Y+3, r15	; 0x03
    435a:	ea 82       	std	Y+2, r14	; 0x02
    435c:	dd a2       	std	Y+37, r13	; 0x25
    435e:	1c a3       	std	Y+36, r17	; 0x24
    4360:	0b a3       	std	Y+35, r16	; 0x23
    4362:	ce 01       	movw	r24, r28
    4364:	0e 94 8d 21 	call	0x431a	; 0x431a <u8g_Begin>
    4368:	df 91       	pop	r29
    436a:	cf 91       	pop	r28
    436c:	1f 91       	pop	r17
    436e:	0f 91       	pop	r16
    4370:	ff 90       	pop	r15
    4372:	ef 90       	pop	r14
    4374:	df 90       	pop	r13
    4376:	08 95       	ret

00004378 <u8g_FirstPage>:
    4378:	fc 01       	movw	r30, r24
    437a:	62 81       	ldd	r22, Z+2	; 0x02
    437c:	73 81       	ldd	r23, Z+3	; 0x03
    437e:	0e 94 f5 20 	call	0x41ea	; 0x41ea <u8g_FirstPageLL>
    4382:	08 95       	ret

00004384 <u8g_NextPage>:
    4384:	cf 93       	push	r28
    4386:	df 93       	push	r29
    4388:	ec 01       	movw	r28, r24
    438a:	ee 85       	ldd	r30, Y+14	; 0x0e
    438c:	ff 85       	ldd	r31, Y+15	; 0x0f
    438e:	30 97       	sbiw	r30, 0x00	; 0
    4390:	09 f0       	breq	.+2      	; 0x4394 <u8g_NextPage+0x10>
    4392:	09 95       	icall
    4394:	6a 81       	ldd	r22, Y+2	; 0x02
    4396:	7b 81       	ldd	r23, Y+3	; 0x03
    4398:	ce 01       	movw	r24, r28
    439a:	0e 94 1b 21 	call	0x4236	; 0x4236 <u8g_NextPageLL>
    439e:	df 91       	pop	r29
    43a0:	cf 91       	pop	r28
    43a2:	08 95       	ret

000043a4 <u8g_Draw8Pixel>:
    43a4:	0f 93       	push	r16
    43a6:	fc 01       	movw	r30, r24
    43a8:	82 81       	ldd	r24, Z+2	; 0x02
    43aa:	93 81       	ldd	r25, Z+3	; 0x03
    43ac:	64 8f       	std	Z+28, r22	; 0x1c
    43ae:	45 8f       	std	Z+29, r20	; 0x1d
    43b0:	27 8f       	std	Z+31, r18	; 0x1f
    43b2:	06 8f       	std	Z+30, r16	; 0x1e
    43b4:	9f 01       	movw	r18, r30
    43b6:	24 5e       	subi	r18, 0xE4	; 228
    43b8:	3f 4f       	sbci	r19, 0xFF	; 255
    43ba:	4b e3       	ldi	r20, 0x3B	; 59
    43bc:	bc 01       	movw	r22, r24
    43be:	cf 01       	movw	r24, r30
    43c0:	0e 94 d0 20 	call	0x41a0	; 0x41a0 <u8g_call_dev_fn>
    43c4:	0f 91       	pop	r16
    43c6:	08 95       	ret

000043c8 <u8g_pb_Clear>:
    43c8:	dc 01       	movw	r26, r24
    43ca:	16 96       	adiw	r26, 0x06	; 6
    43cc:	ed 91       	ld	r30, X+
    43ce:	fc 91       	ld	r31, X
    43d0:	17 97       	sbiw	r26, 0x07	; 7
    43d2:	15 96       	adiw	r26, 0x05	; 5
    43d4:	8c 91       	ld	r24, X
    43d6:	9f 01       	movw	r18, r30
    43d8:	28 0f       	add	r18, r24
    43da:	31 1d       	adc	r19, r1
    43dc:	c9 01       	movw	r24, r18
    43de:	11 92       	st	Z+, r1
    43e0:	e8 17       	cp	r30, r24
    43e2:	f9 07       	cpc	r31, r25
    43e4:	e1 f7       	brne	.-8      	; 0x43de <u8g_pb_Clear+0x16>
    43e6:	08 95       	ret

000043e8 <u8g_pb_IsYIntersection>:
    43e8:	fc 01       	movw	r30, r24
    43ea:	91 e0       	ldi	r25, 0x01	; 1
    43ec:	83 81       	ldd	r24, Z+3	; 0x03
    43ee:	86 17       	cp	r24, r22
    43f0:	08 f4       	brcc	.+2      	; 0x43f4 <u8g_pb_IsYIntersection+0xc>
    43f2:	90 e0       	ldi	r25, 0x00	; 0
    43f4:	21 e0       	ldi	r18, 0x01	; 1
    43f6:	46 17       	cp	r20, r22
    43f8:	08 f0       	brcs	.+2      	; 0x43fc <u8g_pb_IsYIntersection+0x14>
    43fa:	20 e0       	ldi	r18, 0x00	; 0
    43fc:	32 2f       	mov	r19, r18
    43fe:	39 2b       	or	r19, r25
    4400:	81 e0       	ldi	r24, 0x01	; 1
    4402:	52 81       	ldd	r21, Z+2	; 0x02
    4404:	45 17       	cp	r20, r21
    4406:	08 f4       	brcc	.+2      	; 0x440a <u8g_pb_IsYIntersection+0x22>
    4408:	80 e0       	ldi	r24, 0x00	; 0
    440a:	83 23       	and	r24, r19
    440c:	92 23       	and	r25, r18
    440e:	89 2b       	or	r24, r25
    4410:	08 95       	ret

00004412 <u8g_pb_GetPageBox>:
    4412:	dc 01       	movw	r26, r24
    4414:	fb 01       	movw	r30, r22
    4416:	10 82       	st	Z, r1
    4418:	12 96       	adiw	r26, 0x02	; 2
    441a:	8c 91       	ld	r24, X
    441c:	12 97       	sbiw	r26, 0x02	; 2
    441e:	81 83       	std	Z+1, r24	; 0x01
    4420:	15 96       	adiw	r26, 0x05	; 5
    4422:	8c 91       	ld	r24, X
    4424:	15 97       	sbiw	r26, 0x05	; 5
    4426:	81 50       	subi	r24, 0x01	; 1
    4428:	82 83       	std	Z+2, r24	; 0x02
    442a:	13 96       	adiw	r26, 0x03	; 3
    442c:	8c 91       	ld	r24, X
    442e:	83 83       	std	Z+3, r24	; 0x03
    4430:	08 95       	ret

00004432 <u8g_pb_Is8PixelVisible>:
    4432:	fb 01       	movw	r30, r22
    4434:	61 81       	ldd	r22, Z+1	; 0x01
    4436:	23 81       	ldd	r18, Z+3	; 0x03
    4438:	21 30       	cpi	r18, 0x01	; 1
    443a:	19 f0       	breq	.+6      	; 0x4442 <u8g_pb_Is8PixelVisible+0x10>
    443c:	23 30       	cpi	r18, 0x03	; 3
    443e:	21 f0       	breq	.+8      	; 0x4448 <u8g_pb_Is8PixelVisible+0x16>
    4440:	06 c0       	rjmp	.+12     	; 0x444e <u8g_pb_Is8PixelVisible+0x1c>
    4442:	48 e0       	ldi	r20, 0x08	; 8
    4444:	46 0f       	add	r20, r22
    4446:	04 c0       	rjmp	.+8      	; 0x4450 <u8g_pb_Is8PixelVisible+0x1e>
    4448:	46 2f       	mov	r20, r22
    444a:	68 50       	subi	r22, 0x08	; 8
    444c:	01 c0       	rjmp	.+2      	; 0x4450 <u8g_pb_Is8PixelVisible+0x1e>
    444e:	46 2f       	mov	r20, r22
    4450:	0e 94 f4 21 	call	0x43e8	; 0x43e8 <u8g_pb_IsYIntersection>
    4454:	08 95       	ret

00004456 <u8g_pb_WriteBuffer>:
    4456:	fc 01       	movw	r30, r24
    4458:	cb 01       	movw	r24, r22
    445a:	ba 01       	movw	r22, r20
    445c:	26 81       	ldd	r18, Z+6	; 0x06
    445e:	37 81       	ldd	r19, Z+7	; 0x07
    4460:	45 81       	ldd	r20, Z+5	; 0x05
    4462:	0e 94 02 25 	call	0x4a04	; 0x4a04 <u8g_WriteSequence>
    4466:	08 95       	ret

00004468 <u8g_pb8v1_set_pixel>:
    4468:	dc 01       	movw	r26, r24
    446a:	16 96       	adiw	r26, 0x06	; 6
    446c:	ed 91       	ld	r30, X+
    446e:	fc 91       	ld	r31, X
    4470:	17 97       	sbiw	r26, 0x07	; 7
    4472:	12 96       	adiw	r26, 0x02	; 2
    4474:	8c 91       	ld	r24, X
    4476:	48 1b       	sub	r20, r24
    4478:	47 70       	andi	r20, 0x07	; 7
    447a:	81 e0       	ldi	r24, 0x01	; 1
    447c:	90 e0       	ldi	r25, 0x00	; 0
    447e:	dc 01       	movw	r26, r24
    4480:	02 c0       	rjmp	.+4      	; 0x4486 <u8g_pb8v1_set_pixel+0x1e>
    4482:	aa 0f       	add	r26, r26
    4484:	bb 1f       	adc	r27, r27
    4486:	4a 95       	dec	r20
    4488:	e2 f7       	brpl	.-8      	; 0x4482 <u8g_pb8v1_set_pixel+0x1a>
    448a:	ad 01       	movw	r20, r26
    448c:	e6 0f       	add	r30, r22
    448e:	f1 1d       	adc	r31, r1
    4490:	22 23       	and	r18, r18
    4492:	21 f0       	breq	.+8      	; 0x449c <u8g_pb8v1_set_pixel+0x34>
    4494:	80 81       	ld	r24, Z
    4496:	48 2b       	or	r20, r24
    4498:	40 83       	st	Z, r20
    449a:	08 95       	ret
    449c:	40 95       	com	r20
    449e:	80 81       	ld	r24, Z
    44a0:	48 23       	and	r20, r24
    44a2:	40 83       	st	Z, r20
    44a4:	08 95       	ret

000044a6 <u8g_pb8v1_SetPixel>:
    44a6:	fb 01       	movw	r30, r22
    44a8:	41 81       	ldd	r20, Z+1	; 0x01
    44aa:	fc 01       	movw	r30, r24
    44ac:	22 81       	ldd	r18, Z+2	; 0x02
    44ae:	42 17       	cp	r20, r18
    44b0:	70 f0       	brcs	.+28     	; 0x44ce <u8g_pb8v1_SetPixel+0x28>
    44b2:	23 81       	ldd	r18, Z+3	; 0x03
    44b4:	24 17       	cp	r18, r20
    44b6:	58 f0       	brcs	.+22     	; 0x44ce <u8g_pb8v1_SetPixel+0x28>
    44b8:	fb 01       	movw	r30, r22
    44ba:	30 81       	ld	r19, Z
    44bc:	fc 01       	movw	r30, r24
    44be:	25 81       	ldd	r18, Z+5	; 0x05
    44c0:	32 17       	cp	r19, r18
    44c2:	28 f4       	brcc	.+10     	; 0x44ce <u8g_pb8v1_SetPixel+0x28>
    44c4:	fb 01       	movw	r30, r22
    44c6:	24 81       	ldd	r18, Z+4	; 0x04
    44c8:	63 2f       	mov	r22, r19
    44ca:	0e 94 34 22 	call	0x4468	; 0x4468 <u8g_pb8v1_set_pixel>
    44ce:	08 95       	ret

000044d0 <u8g_pb8v1_Set8PixelOpt2>:
    44d0:	df 92       	push	r13
    44d2:	ef 92       	push	r14
    44d4:	ff 92       	push	r15
    44d6:	0f 93       	push	r16
    44d8:	1f 93       	push	r17
    44da:	cf 93       	push	r28
    44dc:	df 93       	push	r29
    44de:	8c 01       	movw	r16, r24
    44e0:	eb 01       	movw	r28, r22
    44e2:	fa 80       	ldd	r15, Y+2	; 0x02
    44e4:	8b 81       	ldd	r24, Y+3	; 0x03
    44e6:	81 30       	cpi	r24, 0x01	; 1
    44e8:	41 f0       	breq	.+16     	; 0x44fa <u8g_pb8v1_Set8PixelOpt2+0x2a>
    44ea:	98 f0       	brcs	.+38     	; 0x4512 <u8g_pb8v1_Set8PixelOpt2+0x42>
    44ec:	82 30       	cpi	r24, 0x02	; 2
    44ee:	49 f0       	breq	.+18     	; 0x4502 <u8g_pb8v1_Set8PixelOpt2+0x32>
    44f0:	83 30       	cpi	r24, 0x03	; 3
    44f2:	59 f0       	breq	.+22     	; 0x450a <u8g_pb8v1_Set8PixelOpt2+0x3a>
    44f4:	d1 2c       	mov	r13, r1
    44f6:	e1 2c       	mov	r14, r1
    44f8:	0f c0       	rjmp	.+30     	; 0x4518 <u8g_pb8v1_Set8PixelOpt2+0x48>
    44fa:	dd 24       	eor	r13, r13
    44fc:	d3 94       	inc	r13
    44fe:	e1 2c       	mov	r14, r1
    4500:	0b c0       	rjmp	.+22     	; 0x4518 <u8g_pb8v1_Set8PixelOpt2+0x48>
    4502:	d1 2c       	mov	r13, r1
    4504:	ee 24       	eor	r14, r14
    4506:	ea 94       	dec	r14
    4508:	07 c0       	rjmp	.+14     	; 0x4518 <u8g_pb8v1_Set8PixelOpt2+0x48>
    450a:	dd 24       	eor	r13, r13
    450c:	da 94       	dec	r13
    450e:	e1 2c       	mov	r14, r1
    4510:	03 c0       	rjmp	.+6      	; 0x4518 <u8g_pb8v1_Set8PixelOpt2+0x48>
    4512:	d1 2c       	mov	r13, r1
    4514:	ee 24       	eor	r14, r14
    4516:	e3 94       	inc	r14
    4518:	ff 20       	and	r15, r15
    451a:	24 f4       	brge	.+8      	; 0x4524 <u8g_pb8v1_Set8PixelOpt2+0x54>
    451c:	be 01       	movw	r22, r28
    451e:	c8 01       	movw	r24, r16
    4520:	0e 94 53 22 	call	0x44a6	; 0x44a6 <u8g_pb8v1_SetPixel>
    4524:	88 81       	ld	r24, Y
    4526:	8e 0d       	add	r24, r14
    4528:	88 83       	st	Y, r24
    452a:	89 81       	ldd	r24, Y+1	; 0x01
    452c:	8d 0d       	add	r24, r13
    452e:	89 83       	std	Y+1, r24	; 0x01
    4530:	ff 0c       	add	r15, r15
    4532:	91 f7       	brne	.-28     	; 0x4518 <u8g_pb8v1_Set8PixelOpt2+0x48>
    4534:	df 91       	pop	r29
    4536:	cf 91       	pop	r28
    4538:	1f 91       	pop	r17
    453a:	0f 91       	pop	r16
    453c:	ff 90       	pop	r15
    453e:	ef 90       	pop	r14
    4540:	df 90       	pop	r13
    4542:	08 95       	ret

00004544 <u8g_dev_pb8v1_base_fn>:
    4544:	0f 93       	push	r16
    4546:	1f 93       	push	r17
    4548:	cf 93       	push	r28
    454a:	df 93       	push	r29
    454c:	e9 01       	movw	r28, r18
    454e:	fb 01       	movw	r30, r22
    4550:	02 81       	ldd	r16, Z+2	; 0x02
    4552:	13 81       	ldd	r17, Z+3	; 0x03
    4554:	50 e0       	ldi	r21, 0x00	; 0
    4556:	fa 01       	movw	r30, r20
    4558:	74 97       	sbiw	r30, 0x14	; 20
    455a:	e4 33       	cpi	r30, 0x34	; 52
    455c:	f1 05       	cpc	r31, r1
    455e:	c0 f5       	brcc	.+112    	; 0x45d0 <u8g_dev_pb8v1_base_fn+0x8c>
    4560:	eb 58       	subi	r30, 0x8B	; 139
    4562:	ff 4f       	sbci	r31, 0xFF	; 255
    4564:	0c 94 2c 26 	jmp	0x4c58	; 0x4c58 <__tablejump2__>
    4568:	b9 01       	movw	r22, r18
    456a:	c8 01       	movw	r24, r16
    456c:	0e 94 19 22 	call	0x4432	; 0x4432 <u8g_pb_Is8PixelVisible>
    4570:	88 23       	and	r24, r24
    4572:	81 f1       	breq	.+96     	; 0x45d4 <u8g_dev_pb8v1_base_fn+0x90>
    4574:	be 01       	movw	r22, r28
    4576:	c8 01       	movw	r24, r16
    4578:	0e 94 68 22 	call	0x44d0	; 0x44d0 <u8g_pb8v1_Set8PixelOpt2>
    457c:	81 e0       	ldi	r24, 0x01	; 1
    457e:	2d c0       	rjmp	.+90     	; 0x45da <u8g_dev_pb8v1_base_fn+0x96>
    4580:	b9 01       	movw	r22, r18
    4582:	c8 01       	movw	r24, r16
    4584:	0e 94 53 22 	call	0x44a6	; 0x44a6 <u8g_pb8v1_SetPixel>
    4588:	81 e0       	ldi	r24, 0x01	; 1
    458a:	27 c0       	rjmp	.+78     	; 0x45da <u8g_dev_pb8v1_base_fn+0x96>
    458c:	c8 01       	movw	r24, r16
    458e:	0e 94 e4 21 	call	0x43c8	; 0x43c8 <u8g_pb_Clear>
    4592:	c8 01       	movw	r24, r16
    4594:	0e 94 fb 25 	call	0x4bf6	; 0x4bf6 <u8g_page_First>
    4598:	81 e0       	ldi	r24, 0x01	; 1
    459a:	1f c0       	rjmp	.+62     	; 0x45da <u8g_dev_pb8v1_base_fn+0x96>
    459c:	c8 01       	movw	r24, r16
    459e:	0e 94 02 26 	call	0x4c04	; 0x4c04 <u8g_page_Next>
    45a2:	88 23       	and	r24, r24
    45a4:	c9 f0       	breq	.+50     	; 0x45d8 <u8g_dev_pb8v1_base_fn+0x94>
    45a6:	c8 01       	movw	r24, r16
    45a8:	0e 94 e4 21 	call	0x43c8	; 0x43c8 <u8g_pb_Clear>
    45ac:	81 e0       	ldi	r24, 0x01	; 1
    45ae:	15 c0       	rjmp	.+42     	; 0x45da <u8g_dev_pb8v1_base_fn+0x96>
    45b0:	b9 01       	movw	r22, r18
    45b2:	c8 01       	movw	r24, r16
    45b4:	0e 94 09 22 	call	0x4412	; 0x4412 <u8g_pb_GetPageBox>
    45b8:	81 e0       	ldi	r24, 0x01	; 1
    45ba:	0f c0       	rjmp	.+30     	; 0x45da <u8g_dev_pb8v1_base_fn+0x96>
    45bc:	f8 01       	movw	r30, r16
    45be:	85 81       	ldd	r24, Z+5	; 0x05
    45c0:	88 83       	st	Y, r24
    45c2:	81 e0       	ldi	r24, 0x01	; 1
    45c4:	0a c0       	rjmp	.+20     	; 0x45da <u8g_dev_pb8v1_base_fn+0x96>
    45c6:	f8 01       	movw	r30, r16
    45c8:	81 81       	ldd	r24, Z+1	; 0x01
    45ca:	88 83       	st	Y, r24
    45cc:	81 e0       	ldi	r24, 0x01	; 1
    45ce:	05 c0       	rjmp	.+10     	; 0x45da <u8g_dev_pb8v1_base_fn+0x96>
    45d0:	81 e0       	ldi	r24, 0x01	; 1
    45d2:	03 c0       	rjmp	.+6      	; 0x45da <u8g_dev_pb8v1_base_fn+0x96>
    45d4:	81 e0       	ldi	r24, 0x01	; 1
    45d6:	01 c0       	rjmp	.+2      	; 0x45da <u8g_dev_pb8v1_base_fn+0x96>
    45d8:	80 e0       	ldi	r24, 0x00	; 0
    45da:	df 91       	pop	r29
    45dc:	cf 91       	pop	r28
    45de:	1f 91       	pop	r17
    45e0:	0f 91       	pop	r16
    45e2:	08 95       	ret

000045e4 <u8g_draw_hline>:
    45e4:	af 92       	push	r10
    45e6:	bf 92       	push	r11
    45e8:	cf 92       	push	r12
    45ea:	df 92       	push	r13
    45ec:	ef 92       	push	r14
    45ee:	0f 93       	push	r16
    45f0:	1f 93       	push	r17
    45f2:	cf 93       	push	r28
    45f4:	5c 01       	movw	r10, r24
    45f6:	c6 2e       	mov	r12, r22
    45f8:	e4 2e       	mov	r14, r20
    45fa:	d2 2e       	mov	r13, r18
    45fc:	27 e0       	ldi	r18, 0x07	; 7
    45fe:	2d 15       	cp	r18, r13
    4600:	b8 f4       	brcc	.+46     	; 0x4630 <u8g_draw_hline+0x4c>
    4602:	cd 2d       	mov	r28, r13
    4604:	16 2f       	mov	r17, r22
    4606:	0f ef       	ldi	r16, 0xFF	; 255
    4608:	20 e0       	ldi	r18, 0x00	; 0
    460a:	4e 2d       	mov	r20, r14
    460c:	61 2f       	mov	r22, r17
    460e:	c5 01       	movw	r24, r10
    4610:	0e 94 d2 21 	call	0x43a4	; 0x43a4 <u8g_Draw8Pixel>
    4614:	c8 50       	subi	r28, 0x08	; 8
    4616:	18 5f       	subi	r17, 0xF8	; 248
    4618:	c8 30       	cpi	r28, 0x08	; 8
    461a:	a8 f7       	brcc	.-22     	; 0x4606 <u8g_draw_hline+0x22>
    461c:	8d 2d       	mov	r24, r13
    461e:	87 70       	andi	r24, 0x07	; 7
    4620:	28 e0       	ldi	r18, 0x08	; 8
    4622:	2c 0d       	add	r18, r12
    4624:	98 ef       	ldi	r25, 0xF8	; 248
    4626:	9d 0d       	add	r25, r13
    4628:	98 7f       	andi	r25, 0xF8	; 248
    462a:	c2 2e       	mov	r12, r18
    462c:	c9 0e       	add	r12, r25
    462e:	01 c0       	rjmp	.+2      	; 0x4632 <u8g_draw_hline+0x4e>
    4630:	8d 2d       	mov	r24, r13
    4632:	88 23       	and	r24, r24
    4634:	99 f0       	breq	.+38     	; 0x465c <u8g_draw_hline+0x78>
    4636:	07 e0       	ldi	r16, 0x07	; 7
    4638:	08 27       	eor	r16, r24
    463a:	0f 5f       	subi	r16, 0xFF	; 255
    463c:	07 70       	andi	r16, 0x07	; 7
    463e:	8f ef       	ldi	r24, 0xFF	; 255
    4640:	90 e0       	ldi	r25, 0x00	; 0
    4642:	9c 01       	movw	r18, r24
    4644:	02 c0       	rjmp	.+4      	; 0x464a <u8g_draw_hline+0x66>
    4646:	22 0f       	add	r18, r18
    4648:	33 1f       	adc	r19, r19
    464a:	0a 95       	dec	r16
    464c:	e2 f7       	brpl	.-8      	; 0x4646 <u8g_draw_hline+0x62>
    464e:	89 01       	movw	r16, r18
    4650:	20 e0       	ldi	r18, 0x00	; 0
    4652:	4e 2d       	mov	r20, r14
    4654:	6c 2d       	mov	r22, r12
    4656:	c5 01       	movw	r24, r10
    4658:	0e 94 d2 21 	call	0x43a4	; 0x43a4 <u8g_Draw8Pixel>
    465c:	cf 91       	pop	r28
    465e:	1f 91       	pop	r17
    4660:	0f 91       	pop	r16
    4662:	ef 90       	pop	r14
    4664:	df 90       	pop	r13
    4666:	cf 90       	pop	r12
    4668:	bf 90       	pop	r11
    466a:	af 90       	pop	r10
    466c:	08 95       	ret

0000466e <u8g_draw_vline>:
    466e:	af 92       	push	r10
    4670:	bf 92       	push	r11
    4672:	cf 92       	push	r12
    4674:	df 92       	push	r13
    4676:	ef 92       	push	r14
    4678:	0f 93       	push	r16
    467a:	1f 93       	push	r17
    467c:	cf 93       	push	r28
    467e:	5c 01       	movw	r10, r24
    4680:	e6 2e       	mov	r14, r22
    4682:	c4 2e       	mov	r12, r20
    4684:	d2 2e       	mov	r13, r18
    4686:	27 e0       	ldi	r18, 0x07	; 7
    4688:	2d 15       	cp	r18, r13
    468a:	b8 f4       	brcc	.+46     	; 0x46ba <u8g_draw_vline+0x4c>
    468c:	cd 2d       	mov	r28, r13
    468e:	14 2f       	mov	r17, r20
    4690:	0f ef       	ldi	r16, 0xFF	; 255
    4692:	21 e0       	ldi	r18, 0x01	; 1
    4694:	41 2f       	mov	r20, r17
    4696:	6e 2d       	mov	r22, r14
    4698:	c5 01       	movw	r24, r10
    469a:	0e 94 d2 21 	call	0x43a4	; 0x43a4 <u8g_Draw8Pixel>
    469e:	c8 50       	subi	r28, 0x08	; 8
    46a0:	18 5f       	subi	r17, 0xF8	; 248
    46a2:	c8 30       	cpi	r28, 0x08	; 8
    46a4:	a8 f7       	brcc	.-22     	; 0x4690 <u8g_draw_vline+0x22>
    46a6:	8d 2d       	mov	r24, r13
    46a8:	87 70       	andi	r24, 0x07	; 7
    46aa:	28 e0       	ldi	r18, 0x08	; 8
    46ac:	2c 0d       	add	r18, r12
    46ae:	98 ef       	ldi	r25, 0xF8	; 248
    46b0:	9d 0d       	add	r25, r13
    46b2:	98 7f       	andi	r25, 0xF8	; 248
    46b4:	c2 2e       	mov	r12, r18
    46b6:	c9 0e       	add	r12, r25
    46b8:	01 c0       	rjmp	.+2      	; 0x46bc <u8g_draw_vline+0x4e>
    46ba:	8d 2d       	mov	r24, r13
    46bc:	88 23       	and	r24, r24
    46be:	99 f0       	breq	.+38     	; 0x46e6 <u8g_draw_vline+0x78>
    46c0:	07 e0       	ldi	r16, 0x07	; 7
    46c2:	08 27       	eor	r16, r24
    46c4:	0f 5f       	subi	r16, 0xFF	; 255
    46c6:	07 70       	andi	r16, 0x07	; 7
    46c8:	8f ef       	ldi	r24, 0xFF	; 255
    46ca:	90 e0       	ldi	r25, 0x00	; 0
    46cc:	9c 01       	movw	r18, r24
    46ce:	02 c0       	rjmp	.+4      	; 0x46d4 <u8g_draw_vline+0x66>
    46d0:	22 0f       	add	r18, r18
    46d2:	33 1f       	adc	r19, r19
    46d4:	0a 95       	dec	r16
    46d6:	e2 f7       	brpl	.-8      	; 0x46d0 <u8g_draw_vline+0x62>
    46d8:	89 01       	movw	r16, r18
    46da:	21 e0       	ldi	r18, 0x01	; 1
    46dc:	4c 2d       	mov	r20, r12
    46de:	6e 2d       	mov	r22, r14
    46e0:	c5 01       	movw	r24, r10
    46e2:	0e 94 d2 21 	call	0x43a4	; 0x43a4 <u8g_Draw8Pixel>
    46e6:	cf 91       	pop	r28
    46e8:	1f 91       	pop	r17
    46ea:	0f 91       	pop	r16
    46ec:	ef 90       	pop	r14
    46ee:	df 90       	pop	r13
    46f0:	cf 90       	pop	r12
    46f2:	bf 90       	pop	r11
    46f4:	af 90       	pop	r10
    46f6:	08 95       	ret

000046f8 <u8g_DrawFrame>:
    46f8:	df 92       	push	r13
    46fa:	ef 92       	push	r14
    46fc:	ff 92       	push	r15
    46fe:	0f 93       	push	r16
    4700:	1f 93       	push	r17
    4702:	cf 93       	push	r28
    4704:	df 93       	push	r29
    4706:	ec 01       	movw	r28, r24
    4708:	16 2f       	mov	r17, r22
    470a:	f4 2e       	mov	r15, r20
    470c:	e2 2e       	mov	r14, r18
    470e:	d0 2e       	mov	r13, r16
    4710:	0e 94 92 24 	call	0x4924	; 0x4924 <u8g_IsBBXIntersection>
    4714:	88 23       	and	r24, r24
    4716:	e1 f0       	breq	.+56     	; 0x4750 <u8g_DrawFrame+0x58>
    4718:	2e 2d       	mov	r18, r14
    471a:	4f 2d       	mov	r20, r15
    471c:	61 2f       	mov	r22, r17
    471e:	ce 01       	movw	r24, r28
    4720:	0e 94 f2 22 	call	0x45e4	; 0x45e4 <u8g_draw_hline>
    4724:	2d 2d       	mov	r18, r13
    4726:	4f 2d       	mov	r20, r15
    4728:	61 2f       	mov	r22, r17
    472a:	ce 01       	movw	r24, r28
    472c:	0e 94 37 23 	call	0x466e	; 0x466e <u8g_draw_vline>
    4730:	6f ef       	ldi	r22, 0xFF	; 255
    4732:	6e 0d       	add	r22, r14
    4734:	61 0f       	add	r22, r17
    4736:	2d 2d       	mov	r18, r13
    4738:	4f 2d       	mov	r20, r15
    473a:	ce 01       	movw	r24, r28
    473c:	0e 94 37 23 	call	0x466e	; 0x466e <u8g_draw_vline>
    4740:	da 94       	dec	r13
    4742:	4d 2d       	mov	r20, r13
    4744:	4f 0d       	add	r20, r15
    4746:	2e 2d       	mov	r18, r14
    4748:	61 2f       	mov	r22, r17
    474a:	ce 01       	movw	r24, r28
    474c:	0e 94 f2 22 	call	0x45e4	; 0x45e4 <u8g_draw_hline>
    4750:	df 91       	pop	r29
    4752:	cf 91       	pop	r28
    4754:	1f 91       	pop	r17
    4756:	0f 91       	pop	r16
    4758:	ff 90       	pop	r15
    475a:	ef 90       	pop	r14
    475c:	df 90       	pop	r13
    475e:	08 95       	ret

00004760 <u8g_draw_box>:
    4760:	ef 92       	push	r14
    4762:	ff 92       	push	r15
    4764:	0f 93       	push	r16
    4766:	1f 93       	push	r17
    4768:	cf 93       	push	r28
    476a:	df 93       	push	r29
    476c:	ec 01       	movw	r28, r24
    476e:	e6 2e       	mov	r14, r22
    4770:	14 2f       	mov	r17, r20
    4772:	f2 2e       	mov	r15, r18
    4774:	2f 2d       	mov	r18, r15
    4776:	41 2f       	mov	r20, r17
    4778:	6e 2d       	mov	r22, r14
    477a:	ce 01       	movw	r24, r28
    477c:	0e 94 f2 22 	call	0x45e4	; 0x45e4 <u8g_draw_hline>
    4780:	1f 5f       	subi	r17, 0xFF	; 255
    4782:	01 50       	subi	r16, 0x01	; 1
    4784:	b9 f7       	brne	.-18     	; 0x4774 <u8g_draw_box+0x14>
    4786:	df 91       	pop	r29
    4788:	cf 91       	pop	r28
    478a:	1f 91       	pop	r17
    478c:	0f 91       	pop	r16
    478e:	ff 90       	pop	r15
    4790:	ef 90       	pop	r14
    4792:	08 95       	ret

00004794 <u8g_DrawBox>:
    4794:	df 92       	push	r13
    4796:	ef 92       	push	r14
    4798:	ff 92       	push	r15
    479a:	0f 93       	push	r16
    479c:	1f 93       	push	r17
    479e:	cf 93       	push	r28
    47a0:	df 93       	push	r29
    47a2:	ec 01       	movw	r28, r24
    47a4:	16 2f       	mov	r17, r22
    47a6:	f4 2e       	mov	r15, r20
    47a8:	e2 2e       	mov	r14, r18
    47aa:	0e 94 92 24 	call	0x4924	; 0x4924 <u8g_IsBBXIntersection>
    47ae:	88 23       	and	r24, r24
    47b0:	31 f0       	breq	.+12     	; 0x47be <u8g_DrawBox+0x2a>
    47b2:	2e 2d       	mov	r18, r14
    47b4:	4f 2d       	mov	r20, r15
    47b6:	61 2f       	mov	r22, r17
    47b8:	ce 01       	movw	r24, r28
    47ba:	0e 94 b0 23 	call	0x4760	; 0x4760 <u8g_draw_box>
    47be:	df 91       	pop	r29
    47c0:	cf 91       	pop	r28
    47c2:	1f 91       	pop	r17
    47c4:	0f 91       	pop	r16
    47c6:	ff 90       	pop	r15
    47c8:	ef 90       	pop	r14
    47ca:	df 90       	pop	r13
    47cc:	08 95       	ret

000047ce <u8g_dev_rot_dummy_fn>:
    47ce:	80 e0       	ldi	r24, 0x00	; 0
    47d0:	08 95       	ret

000047d2 <u8g_dev_rot180_fn>:
    47d2:	bf 92       	push	r11
    47d4:	cf 92       	push	r12
    47d6:	df 92       	push	r13
    47d8:	ef 92       	push	r14
    47da:	ff 92       	push	r15
    47dc:	0f 93       	push	r16
    47de:	1f 93       	push	r17
    47e0:	cf 93       	push	r28
    47e2:	df 93       	push	r29
    47e4:	7c 01       	movw	r14, r24
    47e6:	b4 2e       	mov	r11, r20
    47e8:	e9 01       	movw	r28, r18
    47ea:	fb 01       	movw	r30, r22
    47ec:	c2 80       	ldd	r12, Z+2	; 0x02
    47ee:	d3 80       	ldd	r13, Z+3	; 0x03
    47f0:	04 2f       	mov	r16, r20
    47f2:	10 e0       	ldi	r17, 0x00	; 0
    47f4:	f8 01       	movw	r30, r16
    47f6:	77 97       	sbiw	r30, 0x17	; 23
    47f8:	e1 33       	cpi	r30, 0x31	; 49
    47fa:	f1 05       	cpc	r31, r1
    47fc:	20 f4       	brcc	.+8      	; 0x4806 <u8g_dev_rot180_fn+0x34>
    47fe:	e7 55       	subi	r30, 0x57	; 87
    4800:	ff 4f       	sbci	r31, 0xFF	; 255
    4802:	0c 94 2c 26 	jmp	0x4c58	; 0x4c58 <__tablejump2__>
    4806:	9e 01       	movw	r18, r28
    4808:	4b 2d       	mov	r20, r11
    480a:	b6 01       	movw	r22, r12
    480c:	c7 01       	movw	r24, r14
    480e:	0e 94 d0 20 	call	0x41a0	; 0x41a0 <u8g_call_dev_fn>
    4812:	64 c0       	rjmp	.+200    	; 0x48dc <u8g_dev_rot180_fn+0x10a>
    4814:	9e 01       	movw	r18, r28
    4816:	47 e1       	ldi	r20, 0x17	; 23
    4818:	b6 01       	movw	r22, r12
    481a:	0e 94 d0 20 	call	0x41a0	; 0x41a0 <u8g_call_dev_fn>
    481e:	b6 01       	movw	r22, r12
    4820:	c7 01       	movw	r24, r14
    4822:	0e 94 47 21 	call	0x428e	; 0x428e <u8g_GetWidthLL>
    4826:	ba 80       	ldd	r11, Y+2	; 0x02
    4828:	b0 94       	com	r11
    482a:	b8 0e       	add	r11, r24
    482c:	b6 01       	movw	r22, r12
    482e:	c7 01       	movw	r24, r14
    4830:	0e 94 47 21 	call	0x428e	; 0x428e <u8g_GetWidthLL>
    4834:	18 81       	ld	r17, Y
    4836:	10 95       	com	r17
    4838:	18 0f       	add	r17, r24
    483a:	b6 01       	movw	r22, r12
    483c:	c7 01       	movw	r24, r14
    483e:	0e 94 57 21 	call	0x42ae	; 0x42ae <u8g_GetHeightLL>
    4842:	0b 81       	ldd	r16, Y+3	; 0x03
    4844:	00 95       	com	r16
    4846:	08 0f       	add	r16, r24
    4848:	b6 01       	movw	r22, r12
    484a:	c7 01       	movw	r24, r14
    484c:	0e 94 57 21 	call	0x42ae	; 0x42ae <u8g_GetHeightLL>
    4850:	99 81       	ldd	r25, Y+1	; 0x01
    4852:	90 95       	com	r25
    4854:	89 0f       	add	r24, r25
    4856:	b8 82       	st	Y, r11
    4858:	09 83       	std	Y+1, r16	; 0x01
    485a:	1a 83       	std	Y+2, r17	; 0x02
    485c:	8b 83       	std	Y+3, r24	; 0x03
    485e:	81 e0       	ldi	r24, 0x01	; 1
    4860:	3d c0       	rjmp	.+122    	; 0x48dc <u8g_dev_rot180_fn+0x10a>
    4862:	b6 01       	movw	r22, r12
    4864:	0e 94 47 21 	call	0x428e	; 0x428e <u8g_GetWidthLL>
    4868:	88 83       	st	Y, r24
    486a:	81 e0       	ldi	r24, 0x01	; 1
    486c:	37 c0       	rjmp	.+110    	; 0x48dc <u8g_dev_rot180_fn+0x10a>
    486e:	b6 01       	movw	r22, r12
    4870:	0e 94 57 21 	call	0x42ae	; 0x42ae <u8g_GetHeightLL>
    4874:	88 83       	st	Y, r24
    4876:	81 e0       	ldi	r24, 0x01	; 1
    4878:	31 c0       	rjmp	.+98     	; 0x48dc <u8g_dev_rot180_fn+0x10a>
    487a:	b6 01       	movw	r22, r12
    487c:	0e 94 57 21 	call	0x42ae	; 0x42ae <u8g_GetHeightLL>
    4880:	19 81       	ldd	r17, Y+1	; 0x01
    4882:	10 95       	com	r17
    4884:	18 0f       	add	r17, r24
    4886:	b6 01       	movw	r22, r12
    4888:	c7 01       	movw	r24, r14
    488a:	0e 94 47 21 	call	0x428e	; 0x428e <u8g_GetWidthLL>
    488e:	98 81       	ld	r25, Y
    4890:	90 95       	com	r25
    4892:	89 0f       	add	r24, r25
    4894:	88 83       	st	Y, r24
    4896:	19 83       	std	Y+1, r17	; 0x01
    4898:	9e 01       	movw	r18, r28
    489a:	4b 2d       	mov	r20, r11
    489c:	b6 01       	movw	r22, r12
    489e:	c7 01       	movw	r24, r14
    48a0:	0e 94 d0 20 	call	0x41a0	; 0x41a0 <u8g_call_dev_fn>
    48a4:	81 e0       	ldi	r24, 0x01	; 1
    48a6:	1a c0       	rjmp	.+52     	; 0x48dc <u8g_dev_rot180_fn+0x10a>
    48a8:	b6 01       	movw	r22, r12
    48aa:	0e 94 57 21 	call	0x42ae	; 0x42ae <u8g_GetHeightLL>
    48ae:	19 81       	ldd	r17, Y+1	; 0x01
    48b0:	10 95       	com	r17
    48b2:	18 0f       	add	r17, r24
    48b4:	b6 01       	movw	r22, r12
    48b6:	c7 01       	movw	r24, r14
    48b8:	0e 94 47 21 	call	0x428e	; 0x428e <u8g_GetWidthLL>
    48bc:	98 81       	ld	r25, Y
    48be:	90 95       	com	r25
    48c0:	89 0f       	add	r24, r25
    48c2:	88 83       	st	Y, r24
    48c4:	19 83       	std	Y+1, r17	; 0x01
    48c6:	8b 81       	ldd	r24, Y+3	; 0x03
    48c8:	8e 5f       	subi	r24, 0xFE	; 254
    48ca:	83 70       	andi	r24, 0x03	; 3
    48cc:	8b 83       	std	Y+3, r24	; 0x03
    48ce:	9e 01       	movw	r18, r28
    48d0:	4b 2d       	mov	r20, r11
    48d2:	b6 01       	movw	r22, r12
    48d4:	c7 01       	movw	r24, r14
    48d6:	0e 94 d0 20 	call	0x41a0	; 0x41a0 <u8g_call_dev_fn>
    48da:	81 e0       	ldi	r24, 0x01	; 1
    48dc:	df 91       	pop	r29
    48de:	cf 91       	pop	r28
    48e0:	1f 91       	pop	r17
    48e2:	0f 91       	pop	r16
    48e4:	ff 90       	pop	r15
    48e6:	ef 90       	pop	r14
    48e8:	df 90       	pop	r13
    48ea:	cf 90       	pop	r12
    48ec:	bf 90       	pop	r11
    48ee:	08 95       	ret

000048f0 <u8g_SetRot180>:
    48f0:	fc 01       	movw	r30, r24
    48f2:	22 81       	ldd	r18, Z+2	; 0x02
    48f4:	33 81       	ldd	r19, Z+3	; 0x03
    48f6:	f1 e0       	ldi	r31, 0x01	; 1
    48f8:	26 31       	cpi	r18, 0x16	; 22
    48fa:	3f 07       	cpc	r19, r31
    48fc:	49 f0       	breq	.+18     	; 0x4910 <u8g_SetRot180+0x20>
    48fe:	30 93 19 01 	sts	0x0119, r19
    4902:	20 93 18 01 	sts	0x0118, r18
    4906:	26 e1       	ldi	r18, 0x16	; 22
    4908:	31 e0       	ldi	r19, 0x01	; 1
    490a:	fc 01       	movw	r30, r24
    490c:	33 83       	std	Z+3, r19	; 0x03
    490e:	22 83       	std	Z+2, r18	; 0x02
    4910:	29 ee       	ldi	r18, 0xE9	; 233
    4912:	33 e2       	ldi	r19, 0x23	; 35
    4914:	30 93 17 01 	sts	0x0117, r19
    4918:	20 93 16 01 	sts	0x0116, r18
    491c:	0e 94 6d 21 	call	0x42da	; 0x42da <u8g_UpdateDimension>
    4920:	08 95       	ret

00004922 <u8g_state_dummy_cb>:
    4922:	08 95       	ret

00004924 <u8g_IsBBXIntersection>:
    4924:	0f 93       	push	r16
    4926:	fc 01       	movw	r30, r24
    4928:	01 50       	subi	r16, 0x01	; 1
    492a:	04 0f       	add	r16, r20
    492c:	84 a9       	ldd	r24, Z+52	; 0x34
    492e:	96 a9       	ldd	r25, Z+54	; 0x36
    4930:	94 17       	cp	r25, r20
    4932:	38 f0       	brcs	.+14     	; 0x4942 <u8g_IsBBXIntersection+0x1e>
    4934:	08 17       	cp	r16, r24
    4936:	68 f4       	brcc	.+26     	; 0x4952 <u8g_IsBBXIntersection+0x2e>
    4938:	81 e0       	ldi	r24, 0x01	; 1
    493a:	04 17       	cp	r16, r20
    493c:	40 f0       	brcs	.+16     	; 0x494e <u8g_IsBBXIntersection+0x2a>
    493e:	80 e0       	ldi	r24, 0x00	; 0
    4940:	06 c0       	rjmp	.+12     	; 0x494e <u8g_IsBBXIntersection+0x2a>
    4942:	08 17       	cp	r16, r24
    4944:	d0 f0       	brcs	.+52     	; 0x497a <u8g_IsBBXIntersection+0x56>
    4946:	81 e0       	ldi	r24, 0x01	; 1
    4948:	04 17       	cp	r16, r20
    494a:	08 f0       	brcs	.+2      	; 0x494e <u8g_IsBBXIntersection+0x2a>
    494c:	80 e0       	ldi	r24, 0x00	; 0
    494e:	88 23       	and	r24, r24
    4950:	c9 f0       	breq	.+50     	; 0x4984 <u8g_IsBBXIntersection+0x60>
    4952:	21 50       	subi	r18, 0x01	; 1
    4954:	26 0f       	add	r18, r22
    4956:	83 a9       	ldd	r24, Z+51	; 0x33
    4958:	95 a9       	ldd	r25, Z+53	; 0x35
    495a:	96 17       	cp	r25, r22
    495c:	38 f0       	brcs	.+14     	; 0x496c <u8g_IsBBXIntersection+0x48>
    495e:	28 17       	cp	r18, r24
    4960:	70 f4       	brcc	.+28     	; 0x497e <u8g_IsBBXIntersection+0x5a>
    4962:	81 e0       	ldi	r24, 0x01	; 1
    4964:	26 17       	cp	r18, r22
    4966:	70 f0       	brcs	.+28     	; 0x4984 <u8g_IsBBXIntersection+0x60>
    4968:	80 e0       	ldi	r24, 0x00	; 0
    496a:	0c c0       	rjmp	.+24     	; 0x4984 <u8g_IsBBXIntersection+0x60>
    496c:	28 17       	cp	r18, r24
    496e:	48 f0       	brcs	.+18     	; 0x4982 <u8g_IsBBXIntersection+0x5e>
    4970:	81 e0       	ldi	r24, 0x01	; 1
    4972:	26 17       	cp	r18, r22
    4974:	38 f0       	brcs	.+14     	; 0x4984 <u8g_IsBBXIntersection+0x60>
    4976:	80 e0       	ldi	r24, 0x00	; 0
    4978:	05 c0       	rjmp	.+10     	; 0x4984 <u8g_IsBBXIntersection+0x60>
    497a:	80 e0       	ldi	r24, 0x00	; 0
    497c:	03 c0       	rjmp	.+6      	; 0x4984 <u8g_IsBBXIntersection+0x60>
    497e:	81 e0       	ldi	r24, 0x01	; 1
    4980:	01 c0       	rjmp	.+2      	; 0x4984 <u8g_IsBBXIntersection+0x60>
    4982:	80 e0       	ldi	r24, 0x00	; 0
    4984:	0f 91       	pop	r16
    4986:	08 95       	ret

00004988 <u8g_InitCom>:
    4988:	db 01       	movw	r26, r22
    498a:	14 96       	adiw	r26, 0x04	; 4
    498c:	ed 91       	ld	r30, X+
    498e:	fc 91       	ld	r31, X
    4990:	15 97       	sbiw	r26, 0x05	; 5
    4992:	20 e0       	ldi	r18, 0x00	; 0
    4994:	30 e0       	ldi	r19, 0x00	; 0
    4996:	61 e0       	ldi	r22, 0x01	; 1
    4998:	09 95       	icall
    499a:	08 95       	ret

0000499c <u8g_SetChipSelect>:
    499c:	db 01       	movw	r26, r22
    499e:	14 96       	adiw	r26, 0x04	; 4
    49a0:	ed 91       	ld	r30, X+
    49a2:	fc 91       	ld	r31, X
    49a4:	15 97       	sbiw	r26, 0x05	; 5
    49a6:	20 e0       	ldi	r18, 0x00	; 0
    49a8:	30 e0       	ldi	r19, 0x00	; 0
    49aa:	63 e0       	ldi	r22, 0x03	; 3
    49ac:	09 95       	icall
    49ae:	08 95       	ret

000049b0 <u8g_SetResetLow>:
    49b0:	db 01       	movw	r26, r22
    49b2:	14 96       	adiw	r26, 0x04	; 4
    49b4:	ed 91       	ld	r30, X+
    49b6:	fc 91       	ld	r31, X
    49b8:	15 97       	sbiw	r26, 0x05	; 5
    49ba:	20 e0       	ldi	r18, 0x00	; 0
    49bc:	30 e0       	ldi	r19, 0x00	; 0
    49be:	40 e0       	ldi	r20, 0x00	; 0
    49c0:	64 e0       	ldi	r22, 0x04	; 4
    49c2:	09 95       	icall
    49c4:	08 95       	ret

000049c6 <u8g_SetResetHigh>:
    49c6:	db 01       	movw	r26, r22
    49c8:	14 96       	adiw	r26, 0x04	; 4
    49ca:	ed 91       	ld	r30, X+
    49cc:	fc 91       	ld	r31, X
    49ce:	15 97       	sbiw	r26, 0x05	; 5
    49d0:	20 e0       	ldi	r18, 0x00	; 0
    49d2:	30 e0       	ldi	r19, 0x00	; 0
    49d4:	41 e0       	ldi	r20, 0x01	; 1
    49d6:	64 e0       	ldi	r22, 0x04	; 4
    49d8:	09 95       	icall
    49da:	08 95       	ret

000049dc <u8g_SetAddress>:
    49dc:	db 01       	movw	r26, r22
    49de:	14 96       	adiw	r26, 0x04	; 4
    49e0:	ed 91       	ld	r30, X+
    49e2:	fc 91       	ld	r31, X
    49e4:	15 97       	sbiw	r26, 0x05	; 5
    49e6:	20 e0       	ldi	r18, 0x00	; 0
    49e8:	30 e0       	ldi	r19, 0x00	; 0
    49ea:	62 e0       	ldi	r22, 0x02	; 2
    49ec:	09 95       	icall
    49ee:	08 95       	ret

000049f0 <u8g_WriteByte>:
    49f0:	db 01       	movw	r26, r22
    49f2:	14 96       	adiw	r26, 0x04	; 4
    49f4:	ed 91       	ld	r30, X+
    49f6:	fc 91       	ld	r31, X
    49f8:	15 97       	sbiw	r26, 0x05	; 5
    49fa:	20 e0       	ldi	r18, 0x00	; 0
    49fc:	30 e0       	ldi	r19, 0x00	; 0
    49fe:	65 e0       	ldi	r22, 0x05	; 5
    4a00:	09 95       	icall
    4a02:	08 95       	ret

00004a04 <u8g_WriteSequence>:
    4a04:	db 01       	movw	r26, r22
    4a06:	14 96       	adiw	r26, 0x04	; 4
    4a08:	ed 91       	ld	r30, X+
    4a0a:	fc 91       	ld	r31, X
    4a0c:	15 97       	sbiw	r26, 0x05	; 5
    4a0e:	66 e0       	ldi	r22, 0x06	; 6
    4a10:	09 95       	icall
    4a12:	08 95       	ret

00004a14 <u8g_WriteEscSeqP>:
    4a14:	8f 92       	push	r8
    4a16:	9f 92       	push	r9
    4a18:	af 92       	push	r10
    4a1a:	bf 92       	push	r11
    4a1c:	cf 92       	push	r12
    4a1e:	df 92       	push	r13
    4a20:	ef 92       	push	r14
    4a22:	ff 92       	push	r15
    4a24:	1f 93       	push	r17
    4a26:	cf 93       	push	r28
    4a28:	df 93       	push	r29
    4a2a:	7c 01       	movw	r14, r24
    4a2c:	4b 01       	movw	r8, r22
    4a2e:	ea 01       	movw	r28, r20
    4a30:	d1 2c       	mov	r13, r1
    4a32:	b1 2c       	mov	r11, r1
    4a34:	aa 24       	eor	r10, r10
    4a36:	a3 94       	inc	r10
    4a38:	fe 01       	movw	r30, r28
    4a3a:	14 91       	lpm	r17, Z
    4a3c:	d1 10       	cpse	r13, r1
    4a3e:	0b c0       	rjmp	.+22     	; 0x4a56 <u8g_WriteEscSeqP+0x42>
    4a40:	1f 3f       	cpi	r17, 0xFF	; 255
    4a42:	09 f4       	brne	.+2      	; 0x4a46 <u8g_WriteEscSeqP+0x32>
    4a44:	4f c0       	rjmp	.+158    	; 0x4ae4 <u8g_WriteEscSeqP+0xd0>
    4a46:	41 2f       	mov	r20, r17
    4a48:	b4 01       	movw	r22, r8
    4a4a:	c7 01       	movw	r24, r14
    4a4c:	0e 94 f8 24 	call	0x49f0	; 0x49f0 <u8g_WriteByte>
    4a50:	81 11       	cpse	r24, r1
    4a52:	4d c0       	rjmp	.+154    	; 0x4aee <u8g_WriteEscSeqP+0xda>
    4a54:	4e c0       	rjmp	.+156    	; 0x4af2 <u8g_WriteEscSeqP+0xde>
    4a56:	1f 3f       	cpi	r17, 0xFF	; 255
    4a58:	51 f4       	brne	.+20     	; 0x4a6e <u8g_WriteEscSeqP+0x5a>
    4a5a:	4f ef       	ldi	r20, 0xFF	; 255
    4a5c:	b4 01       	movw	r22, r8
    4a5e:	c7 01       	movw	r24, r14
    4a60:	0e 94 f8 24 	call	0x49f0	; 0x49f0 <u8g_WriteByte>
    4a64:	88 23       	and	r24, r24
    4a66:	09 f4       	brne	.+2      	; 0x4a6a <u8g_WriteEscSeqP+0x56>
    4a68:	46 c0       	rjmp	.+140    	; 0x4af6 <u8g_WriteEscSeqP+0xe2>
    4a6a:	db 2c       	mov	r13, r11
    4a6c:	40 c0       	rjmp	.+128    	; 0x4aee <u8g_WriteEscSeqP+0xda>
    4a6e:	1e 3f       	cpi	r17, 0xFE	; 254
    4a70:	09 f4       	brne	.+2      	; 0x4a74 <u8g_WriteEscSeqP+0x60>
    4a72:	43 c0       	rjmp	.+134    	; 0x4afa <u8g_WriteEscSeqP+0xe6>
    4a74:	10 3f       	cpi	r17, 0xF0	; 240
    4a76:	c0 f5       	brcc	.+112    	; 0x4ae8 <u8g_WriteEscSeqP+0xd4>
    4a78:	10 3e       	cpi	r17, 0xE0	; 224
    4a7a:	40 f0       	brcs	.+16     	; 0x4a8c <u8g_WriteEscSeqP+0x78>
    4a7c:	41 2f       	mov	r20, r17
    4a7e:	4f 70       	andi	r20, 0x0F	; 15
    4a80:	b4 01       	movw	r22, r8
    4a82:	c7 01       	movw	r24, r14
    4a84:	0e 94 ee 24 	call	0x49dc	; 0x49dc <u8g_SetAddress>
    4a88:	db 2c       	mov	r13, r11
    4a8a:	31 c0       	rjmp	.+98     	; 0x4aee <u8g_WriteEscSeqP+0xda>
    4a8c:	10 3d       	cpi	r17, 0xD0	; 208
    4a8e:	40 f0       	brcs	.+16     	; 0x4aa0 <u8g_WriteEscSeqP+0x8c>
    4a90:	41 2f       	mov	r20, r17
    4a92:	4f 70       	andi	r20, 0x0F	; 15
    4a94:	b4 01       	movw	r22, r8
    4a96:	c7 01       	movw	r24, r14
    4a98:	0e 94 ce 24 	call	0x499c	; 0x499c <u8g_SetChipSelect>
    4a9c:	db 2c       	mov	r13, r11
    4a9e:	27 c0       	rjmp	.+78     	; 0x4aee <u8g_WriteEscSeqP+0xda>
    4aa0:	10 3c       	cpi	r17, 0xC0	; 192
    4aa2:	c0 f0       	brcs	.+48     	; 0x4ad4 <u8g_WriteEscSeqP+0xc0>
    4aa4:	b4 01       	movw	r22, r8
    4aa6:	c7 01       	movw	r24, r14
    4aa8:	0e 94 d8 24 	call	0x49b0	; 0x49b0 <u8g_SetResetLow>
    4aac:	c1 2e       	mov	r12, r17
    4aae:	cc 0c       	add	r12, r12
    4ab0:	cc 0c       	add	r12, r12
    4ab2:	cc 0c       	add	r12, r12
    4ab4:	cc 0c       	add	r12, r12
    4ab6:	c3 94       	inc	r12
    4ab8:	c3 94       	inc	r12
    4aba:	d1 2c       	mov	r13, r1
    4abc:	c6 01       	movw	r24, r12
    4abe:	0e 94 14 1e 	call	0x3c28	; 0x3c28 <u8g_Delay>
    4ac2:	b4 01       	movw	r22, r8
    4ac4:	c7 01       	movw	r24, r14
    4ac6:	0e 94 e3 24 	call	0x49c6	; 0x49c6 <u8g_SetResetHigh>
    4aca:	c6 01       	movw	r24, r12
    4acc:	0e 94 14 1e 	call	0x3c28	; 0x3c28 <u8g_Delay>
    4ad0:	db 2c       	mov	r13, r11
    4ad2:	0d c0       	rjmp	.+26     	; 0x4aee <u8g_WriteEscSeqP+0xda>
    4ad4:	11 23       	and	r17, r17
    4ad6:	54 f0       	brlt	.+20     	; 0x4aec <u8g_WriteEscSeqP+0xd8>
    4ad8:	81 2f       	mov	r24, r17
    4ada:	90 e0       	ldi	r25, 0x00	; 0
    4adc:	0e 94 14 1e 	call	0x3c28	; 0x3c28 <u8g_Delay>
    4ae0:	db 2c       	mov	r13, r11
    4ae2:	05 c0       	rjmp	.+10     	; 0x4aee <u8g_WriteEscSeqP+0xda>
    4ae4:	da 2c       	mov	r13, r10
    4ae6:	03 c0       	rjmp	.+6      	; 0x4aee <u8g_WriteEscSeqP+0xda>
    4ae8:	db 2c       	mov	r13, r11
    4aea:	01 c0       	rjmp	.+2      	; 0x4aee <u8g_WriteEscSeqP+0xda>
    4aec:	db 2c       	mov	r13, r11
    4aee:	21 96       	adiw	r28, 0x01	; 1
    4af0:	a3 cf       	rjmp	.-186    	; 0x4a38 <u8g_WriteEscSeqP+0x24>
    4af2:	80 e0       	ldi	r24, 0x00	; 0
    4af4:	03 c0       	rjmp	.+6      	; 0x4afc <u8g_WriteEscSeqP+0xe8>
    4af6:	80 e0       	ldi	r24, 0x00	; 0
    4af8:	01 c0       	rjmp	.+2      	; 0x4afc <u8g_WriteEscSeqP+0xe8>
    4afa:	81 e0       	ldi	r24, 0x01	; 1
    4afc:	df 91       	pop	r29
    4afe:	cf 91       	pop	r28
    4b00:	1f 91       	pop	r17
    4b02:	ff 90       	pop	r15
    4b04:	ef 90       	pop	r14
    4b06:	df 90       	pop	r13
    4b08:	cf 90       	pop	r12
    4b0a:	bf 90       	pop	r11
    4b0c:	af 90       	pop	r10
    4b0e:	9f 90       	pop	r9
    4b10:	8f 90       	pop	r8
    4b12:	08 95       	ret

00004b14 <u8g_atmega_spi_out>:
    4b14:	8e bd       	out	0x2e, r24	; 46
    4b16:	0d b4       	in	r0, 0x2d	; 45
    4b18:	07 fe       	sbrs	r0, 7
    4b1a:	fd cf       	rjmp	.-6      	; 0x4b16 <u8g_atmega_spi_out+0x2>
    4b1c:	8e b5       	in	r24, 0x2e	; 46
    4b1e:	08 95       	ret

00004b20 <u8g_com_atmega_hw_spi_fn>:
    4b20:	df 92       	push	r13
    4b22:	ef 92       	push	r14
    4b24:	ff 92       	push	r15
    4b26:	0f 93       	push	r16
    4b28:	1f 93       	push	r17
    4b2a:	cf 93       	push	r28
    4b2c:	df 93       	push	r29
    4b2e:	7c 01       	movw	r14, r24
    4b30:	d4 2e       	mov	r13, r20
    4b32:	e9 01       	movw	r28, r18
    4b34:	06 2f       	mov	r16, r22
    4b36:	10 e0       	ldi	r17, 0x00	; 0
    4b38:	f8 01       	movw	r30, r16
    4b3a:	31 97       	sbiw	r30, 0x01	; 1
    4b3c:	e7 30       	cpi	r30, 0x07	; 7
    4b3e:	f1 05       	cpc	r31, r1
    4b40:	08 f0       	brcs	.+2      	; 0x4b44 <u8g_com_atmega_hw_spi_fn+0x24>
    4b42:	50 c0       	rjmp	.+160    	; 0x4be4 <u8g_com_atmega_hw_spi_fn+0xc4>
    4b44:	e6 52       	subi	r30, 0x26	; 38
    4b46:	ff 4f       	sbci	r31, 0xFF	; 255
    4b48:	0c 94 2c 26 	jmp	0x4c58	; 0x4c58 <__tablejump2__>
    4b4c:	41 11       	cpse	r20, r1
    4b4e:	3d c0       	rjmp	.+122    	; 0x4bca <u8g_com_atmega_hw_spi_fn+0xaa>
    4b50:	49 c0       	rjmp	.+146    	; 0x4be4 <u8g_com_atmega_hw_spi_fn+0xc4>
    4b52:	41 11       	cpse	r20, r1
    4b54:	40 c0       	rjmp	.+128    	; 0x4bd6 <u8g_com_atmega_hw_spi_fn+0xb6>
    4b56:	46 c0       	rjmp	.+140    	; 0x4be4 <u8g_com_atmega_hw_spi_fn+0xc4>
    4b58:	62 e0       	ldi	r22, 0x02	; 2
    4b5a:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <u8g_SetPIOutput>
    4b5e:	61 e0       	ldi	r22, 0x01	; 1
    4b60:	c7 01       	movw	r24, r14
    4b62:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <u8g_SetPIOutput>
    4b66:	60 e0       	ldi	r22, 0x00	; 0
    4b68:	c7 01       	movw	r24, r14
    4b6a:	0e 94 01 1e 	call	0x3c02	; 0x3c02 <u8g_SetPIOutput>
    4b6e:	8f b7       	in	r24, 0x3f	; 63
    4b70:	80 93 34 02 	sts	0x0234, r24
    4b74:	f8 94       	cli
    4b76:	23 9a       	sbi	0x04, 3	; 4
    4b78:	25 9a       	sbi	0x04, 5	; 4
    4b7a:	22 9a       	sbi	0x04, 2	; 4
    4b7c:	2b 98       	cbi	0x05, 3	; 5
    4b7e:	2d 98       	cbi	0x05, 5	; 5
    4b80:	80 91 34 02 	lds	r24, 0x0234
    4b84:	8f bf       	out	0x3f, r24	; 63
    4b86:	41 e0       	ldi	r20, 0x01	; 1
    4b88:	62 e0       	ldi	r22, 0x02	; 2
    4b8a:	c7 01       	movw	r24, r14
    4b8c:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <u8g_SetPILevel>
    4b90:	1c bc       	out	0x2c, r1	; 44
    4b92:	80 e5       	ldi	r24, 0x50	; 80
    4b94:	8c bd       	out	0x2c, r24	; 44
    4b96:	26 c0       	rjmp	.+76     	; 0x4be4 <u8g_com_atmega_hw_spi_fn+0xc4>
    4b98:	61 e0       	ldi	r22, 0x01	; 1
    4b9a:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <u8g_SetPILevel>
    4b9e:	22 c0       	rjmp	.+68     	; 0x4be4 <u8g_com_atmega_hw_spi_fn+0xc4>
    4ba0:	41 11       	cpse	r20, r1
    4ba2:	05 c0       	rjmp	.+10     	; 0x4bae <u8g_com_atmega_hw_spi_fn+0x8e>
    4ba4:	41 e0       	ldi	r20, 0x01	; 1
    4ba6:	62 e0       	ldi	r22, 0x02	; 2
    4ba8:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <u8g_SetPILevel>
    4bac:	1b c0       	rjmp	.+54     	; 0x4be4 <u8g_com_atmega_hw_spi_fn+0xc4>
    4bae:	2d 98       	cbi	0x05, 5	; 5
    4bb0:	40 e0       	ldi	r20, 0x00	; 0
    4bb2:	62 e0       	ldi	r22, 0x02	; 2
    4bb4:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <u8g_SetPILevel>
    4bb8:	15 c0       	rjmp	.+42     	; 0x4be4 <u8g_com_atmega_hw_spi_fn+0xc4>
    4bba:	60 e0       	ldi	r22, 0x00	; 0
    4bbc:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <u8g_SetPILevel>
    4bc0:	11 c0       	rjmp	.+34     	; 0x4be4 <u8g_com_atmega_hw_spi_fn+0xc4>
    4bc2:	84 2f       	mov	r24, r20
    4bc4:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <u8g_atmega_spi_out>
    4bc8:	0d c0       	rjmp	.+26     	; 0x4be4 <u8g_com_atmega_hw_spi_fn+0xc4>
    4bca:	89 91       	ld	r24, Y+
    4bcc:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <u8g_atmega_spi_out>
    4bd0:	da 94       	dec	r13
    4bd2:	d9 f7       	brne	.-10     	; 0x4bca <u8g_com_atmega_hw_spi_fn+0xaa>
    4bd4:	07 c0       	rjmp	.+14     	; 0x4be4 <u8g_com_atmega_hw_spi_fn+0xc4>
    4bd6:	fe 01       	movw	r30, r28
    4bd8:	84 91       	lpm	r24, Z
    4bda:	0e 94 8a 25 	call	0x4b14	; 0x4b14 <u8g_atmega_spi_out>
    4bde:	21 96       	adiw	r28, 0x01	; 1
    4be0:	da 94       	dec	r13
    4be2:	c9 f7       	brne	.-14     	; 0x4bd6 <u8g_com_atmega_hw_spi_fn+0xb6>
    4be4:	81 e0       	ldi	r24, 0x01	; 1
    4be6:	df 91       	pop	r29
    4be8:	cf 91       	pop	r28
    4bea:	1f 91       	pop	r17
    4bec:	0f 91       	pop	r16
    4bee:	ff 90       	pop	r15
    4bf0:	ef 90       	pop	r14
    4bf2:	df 90       	pop	r13
    4bf4:	08 95       	ret

00004bf6 <u8g_page_First>:
    4bf6:	fc 01       	movw	r30, r24
    4bf8:	12 82       	std	Z+2, r1	; 0x02
    4bfa:	80 81       	ld	r24, Z
    4bfc:	81 50       	subi	r24, 0x01	; 1
    4bfe:	83 83       	std	Z+3, r24	; 0x03
    4c00:	14 82       	std	Z+4, r1	; 0x04
    4c02:	08 95       	ret

00004c04 <u8g_page_Next>:
    4c04:	fc 01       	movw	r30, r24
    4c06:	20 81       	ld	r18, Z
    4c08:	82 81       	ldd	r24, Z+2	; 0x02
    4c0a:	82 0f       	add	r24, r18
    4c0c:	82 83       	std	Z+2, r24	; 0x02
    4c0e:	91 81       	ldd	r25, Z+1	; 0x01
    4c10:	89 17       	cp	r24, r25
    4c12:	60 f4       	brcc	.+24     	; 0x4c2c <u8g_page_Next+0x28>
    4c14:	84 81       	ldd	r24, Z+4	; 0x04
    4c16:	8f 5f       	subi	r24, 0xFF	; 255
    4c18:	84 83       	std	Z+4, r24	; 0x04
    4c1a:	83 81       	ldd	r24, Z+3	; 0x03
    4c1c:	28 0f       	add	r18, r24
    4c1e:	29 17       	cp	r18, r25
    4c20:	10 f0       	brcs	.+4      	; 0x4c26 <u8g_page_Next+0x22>
    4c22:	2f ef       	ldi	r18, 0xFF	; 255
    4c24:	29 0f       	add	r18, r25
    4c26:	23 83       	std	Z+3, r18	; 0x03
    4c28:	81 e0       	ldi	r24, 0x01	; 1
    4c2a:	08 95       	ret
    4c2c:	80 e0       	ldi	r24, 0x00	; 0
    4c2e:	08 95       	ret

00004c30 <__divmodhi4>:
    4c30:	97 fb       	bst	r25, 7
    4c32:	07 2e       	mov	r0, r23
    4c34:	16 f4       	brtc	.+4      	; 0x4c3a <__divmodhi4+0xa>
    4c36:	00 94       	com	r0
    4c38:	07 d0       	rcall	.+14     	; 0x4c48 <__divmodhi4_neg1>
    4c3a:	77 fd       	sbrc	r23, 7
    4c3c:	09 d0       	rcall	.+18     	; 0x4c50 <__divmodhi4_neg2>
    4c3e:	0e 94 32 26 	call	0x4c64	; 0x4c64 <__udivmodhi4>
    4c42:	07 fc       	sbrc	r0, 7
    4c44:	05 d0       	rcall	.+10     	; 0x4c50 <__divmodhi4_neg2>
    4c46:	3e f4       	brtc	.+14     	; 0x4c56 <__divmodhi4_exit>

00004c48 <__divmodhi4_neg1>:
    4c48:	90 95       	com	r25
    4c4a:	81 95       	neg	r24
    4c4c:	9f 4f       	sbci	r25, 0xFF	; 255
    4c4e:	08 95       	ret

00004c50 <__divmodhi4_neg2>:
    4c50:	70 95       	com	r23
    4c52:	61 95       	neg	r22
    4c54:	7f 4f       	sbci	r23, 0xFF	; 255

00004c56 <__divmodhi4_exit>:
    4c56:	08 95       	ret

00004c58 <__tablejump2__>:
    4c58:	ee 0f       	add	r30, r30
    4c5a:	ff 1f       	adc	r31, r31

00004c5c <__tablejump__>:
    4c5c:	05 90       	lpm	r0, Z+
    4c5e:	f4 91       	lpm	r31, Z
    4c60:	e0 2d       	mov	r30, r0
    4c62:	09 94       	ijmp

00004c64 <__udivmodhi4>:
    4c64:	aa 1b       	sub	r26, r26
    4c66:	bb 1b       	sub	r27, r27
    4c68:	51 e1       	ldi	r21, 0x11	; 17
    4c6a:	07 c0       	rjmp	.+14     	; 0x4c7a <__udivmodhi4_ep>

00004c6c <__udivmodhi4_loop>:
    4c6c:	aa 1f       	adc	r26, r26
    4c6e:	bb 1f       	adc	r27, r27
    4c70:	a6 17       	cp	r26, r22
    4c72:	b7 07       	cpc	r27, r23
    4c74:	10 f0       	brcs	.+4      	; 0x4c7a <__udivmodhi4_ep>
    4c76:	a6 1b       	sub	r26, r22
    4c78:	b7 0b       	sbc	r27, r23

00004c7a <__udivmodhi4_ep>:
    4c7a:	88 1f       	adc	r24, r24
    4c7c:	99 1f       	adc	r25, r25
    4c7e:	5a 95       	dec	r21
    4c80:	a9 f7       	brne	.-22     	; 0x4c6c <__udivmodhi4_loop>
    4c82:	80 95       	com	r24
    4c84:	90 95       	com	r25
    4c86:	bc 01       	movw	r22, r24
    4c88:	cd 01       	movw	r24, r26
    4c8a:	08 95       	ret

00004c8c <memcpy_P>:
    4c8c:	fb 01       	movw	r30, r22
    4c8e:	dc 01       	movw	r26, r24
    4c90:	02 c0       	rjmp	.+4      	; 0x4c96 <memcpy_P+0xa>
    4c92:	05 90       	lpm	r0, Z+
    4c94:	0d 92       	st	X+, r0
    4c96:	41 50       	subi	r20, 0x01	; 1
    4c98:	50 40       	sbci	r21, 0x00	; 0
    4c9a:	d8 f7       	brcc	.-10     	; 0x4c92 <memcpy_P+0x6>
    4c9c:	08 95       	ret

00004c9e <_exit>:
    4c9e:	f8 94       	cli

00004ca0 <__stop_program>:
    4ca0:	ff cf       	rjmp	.-2      	; 0x4ca0 <__stop_program>
